{
  "version": 3,
  "sources": ["../../lib/icon/omni-icon-resolver.ts"],
  "sourcesContent": ["/* icons have an iconId like 'collection:group:id' eg 'omni:app:warning' which was previously used with lion-icons in complex function caching instead of letting the runtime, http caches or svg elements handle this;\n */\nexport const omniIconsetTypes = ['interactive', 'informative', 'object', 'brand', 'app', 'editor'];\n\nexport async function resolveOmniIconset(group = '?') {\n  // TODO NOTE: don't turn switch into a dynamic import path or rollup won't process it!\n  // e.g. return await import(`./iconset-${group}.js`);\n  switch (group) {\n    case 'interactive':\n      return import(`./iconset-interactive.js`);\n    case 'informative':\n      return import(`./iconset-informative.js`);\n    case 'object':\n      return import(`./iconset-object.js`);\n    case 'brand':\n      return import(`./iconset-brand.js`);\n    case 'app':\n      return import('./iconset-app.js');\n    case 'editor':\n      return import('./iconset-editor.js');\n    default:\n      throw new Error(`Unknown icon set \"${group}\"`);\n    // no default\n  }\n}\n\nexport const resolveOmniIcon = resolveOmniIconset;\n"],
  "mappings": "AAEO,MAAM,mBAAmB,CAAC,eAAe,eAAe,UAAU,SAAS,OAAO,QAAQ;AAEjG,eAAsB,mBAAmB,QAAQ,KAAK;AAGpD,UAAQ,OAAO;AAAA,IACb,KAAK;AACH,aAAO,OAAO,0BAA0B;AAAA,IAC1C,KAAK;AACH,aAAO,OAAO,0BAA0B;AAAA,IAC1C,KAAK;AACH,aAAO,OAAO,qBAAqB;AAAA,IACrC,KAAK;AACH,aAAO,OAAO,oBAAoB;AAAA,IACpC,KAAK;AACH,aAAO,OAAO,kBAAkB;AAAA,IAClC,KAAK;AACH,aAAO,OAAO,qBAAqB;AAAA,IACrC;AACE,YAAM,IAAI,MAAM,qBAAqB,KAAK,GAAG;AAAA,EAEjD;AACF;AAEO,MAAM,kBAAkB;",
  "names": []
}
