{
  "version": 3,
  "sources": ["../lib/element-internals-base.ts"],
  "sourcesContent": ["import 'element-internals-polyfill';\nimport { property } from 'lit/decorators.js';\nimport { OmniElement } from './omni-element.js';\n\n/**\n * @event {Event} invalid - fires when client-side form input validation fails\n */\nexport interface IElementInternalsBase<T> {\n  readonly valueMissingMessage: string;\n  disabled: boolean;\n  required: boolean;\n  name: string;\n  value: T;\n  _internals: ElementInternals;\n  reportValidity(): boolean;\n  checkValidity(): boolean;\n  valid: boolean;\n}\n\n/** common element internals boilerplate for form participating elements */\nexport abstract class ElementInternalsBase<T = string> extends OmniElement implements IElementInternalsBase<T> {\n  static get formAssociated() {\n    return true;\n  }\n\n  abstract readonly valueMissingMessage: string;\n  /** disable the input from user interaction */\n  @property({ type: Boolean, reflect: true }) disabled: boolean = false;\n  /** value must be specified for the input before owning form can be submitted */\n  @property({ type: Boolean, reflect: true }) required: boolean = false;\n  abstract name: string;\n  abstract value: T;\n  /** @internal */\n  _internals: ElementInternals = this.attachInternals();\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.tabIndex = !this.disabled ? 0 : -1;\n  }\n\n  /** check the form input for client-side validation, if false fire invalid event and send the `validationMessage` to the user agent to handle */\n  public reportValidity() {\n    return this._internals.reportValidity();\n  }\n\n  /** check the form input for client-side validation, if false fire invalid event */\n  public checkValidity() {\n    return this._internals.checkValidity();\n  }\n\n  /** readonly */\n  get valid() {\n    return this._internals.checkValidity();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,OAAO;AACP,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAkBrB,MAAe,6BAAyC,YAAgD;AAAA,EAAxG;AAAA;AAOuC,oBAAoB;AAEpB,oBAAoB;AAIhE;AAAA,sBAA+B,KAAK,gBAAgB;AAAA;AAAA,EAZpD,WAAW,iBAAiB;AAC1B,WAAO;AAAA,EACT;AAAA,EAYA,oBAAoB;AAClB,UAAM,kBAAkB;AACxB,SAAK,WAAW,CAAC,KAAK,WAAW,IAAI;AAAA,EACvC;AAAA;AAAA,EAGO,iBAAiB;AACtB,WAAO,KAAK,WAAW,eAAe;AAAA,EACxC;AAAA;AAAA,EAGO,gBAAgB;AACrB,WAAO,KAAK,WAAW,cAAc;AAAA,EACvC;AAAA;AAAA,EAGA,IAAI,QAAQ;AACV,WAAO,KAAK,WAAW,cAAc;AAAA,EACvC;AACF;AA3B8C;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAPtB,qBAOwB;AAEA;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GATtB,qBASwB;",
  "names": []
}
