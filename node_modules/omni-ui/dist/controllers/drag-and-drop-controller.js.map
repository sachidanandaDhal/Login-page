{
  "version": 3,
  "sources": ["../../lib/controllers/drag-and-drop-controller.ts"],
  "sourcesContent": ["import type { ReactiveController } from 'lit';\nimport type { OmniElement } from '../omni-element.js';\n\nexport interface DragAndDropOptions {\n  /** an array of css selectors, to find your drag containers. your drag containers can all use the same selector, or different selectors. */\n  dragContainerQueries?: string[];\n  /** a css class available on your host element for styling the left over shadow when dragging */\n  shadowClass?: string;\n  /** a css class available on your host element for styling the element when dragging */\n  ghostClass?: string;\n  /** disallow an idx from allowing drops */\n  noDropIdxs?: number[];\n  /** animationDuration */\n  animationDuration?: number;\n}\n\nexport interface MoveInfo {\n  container: DragContainer;\n  moveFromIdx: number;\n  moveToIdx: number;\n}\nexport type DropCb = (move: MoveInfo) => void;\n\n/**\n * although types are as a property, really only exists as attributes.\n * Only access using attribute methods\n * Number(.getAttribute('drag-idx')), .hasAttribute for boolean, .getAttribute for string\n * */\n\ntype DragContainer = HTMLElement & {\n  /** attribute: boolean */\n  'drag-container'?: '';\n  /** attribute: key of host property */\n  'drag-list'?: string;\n  /** attribute: string */\n  'drag-orientation'?: 'horizontal' | 'vertical';\n  /** attribute could be unknown for custom drag container queries */\n  [key: string]: unknown;\n};\ntype DragItem = HTMLElement & {\n  /** attribute: stringified number */\n  'drag-idx': string;\n};\ntype DragHandle = HTMLElement & {\n  /** attribute: boolean */\n  'drag-handle': '';\n};\ntype DropTargetLine = HTMLDivElement & {\n  /** attribute: stringified number */\n  'drag-idx': '';\n  tagName: 'OMNI-DROP-LINE';\n};\n\nexport class DragAndDropController implements ReactiveController {\n  #host: OmniElement;\n  #dragContainersQueries: string[];\n  #ghostClass: string;\n  #shadowClass: string;\n  #noDropIdxs: number[];\n  #dropCb: DropCb;\n  #participatingElements = new Map<DragContainer, DragItem[]>();\n  #dropTargetLines: DropTargetLine[] = [];\n  #dropTarget: DropTargetLine;\n  #dropContainerCandidate: DragContainer;\n  #draggingHandle: DragHandle;\n  #draggingElement: DragItem;\n  #draggingElementGhost: DragItem;\n  #draggingElementShadow: DragItem;\n  #draggingContainer: DragContainer;\n  #animationDuration: number;\n  /** used to fix safari bug on first click pointerevent does not listen */\n  #pointerEventHandled: boolean = false;\n  #isDragging: boolean = false;\n  #isAnimating = false;\n  public debug = false;\n  /**\n   * @param {OmniElement} host - your component host element that extends OmniElement. pass as: `this`\n   * @param {DragAndDropOptions=} options -\n   * @param {DropCb=} dropCb - add a callback function to handle moves within your list of items\n   * @example\n   * ```js\n   * constructor(){\n   *   super();\n   *   this.myList = ['item 1', 'item 2', 'item 3'];\n   *   this.dragController = new DragAndDropController(this);\n   * }\n   * render(){\n   *  return html`\n   *  <div drag-container drag-list=\"myList\">\n   *   ${this.list.map((item, idx) => html`\n   *       <div drag-idx=${idx}>\n   *          <omni-icon drag-handle></omni-icon>\n   *          ${item}\n   *       </div>\n   *    `)}\n   *   </div>\n   * `\n   * }\n   * ```\n   */\n  constructor(\n    host: OmniElement,\n    options: DragAndDropOptions = {\n      dragContainerQueries: ['[drag-container]'],\n      shadowClass: 'drag-shadow',\n      ghostClass: 'drag-ghost',\n      noDropIdxs: [],\n      animationDuration: 350\n    },\n    dropCb: DropCb = null\n  ) {\n    this.#host = host;\n    this.#host.addController(this);\n    this.#dragContainersQueries = options.dragContainerQueries ?? ['[drag-container]'];\n    this.#ghostClass = options.ghostClass ?? 'drag-ghost';\n    this.#shadowClass = options.shadowClass ?? 'drag-shadow';\n    this.#noDropIdxs = options.noDropIdxs ?? [];\n    this.#animationDuration = options.animationDuration ?? 350;\n    this.#dropCb = dropCb ?? this.#defaultDropCb;\n  }\n\n  hostConnected(): void {\n    this.#addLineStyles();\n  }\n\n  /** unregister and reregister all drag elements */\n  hostUpdated() {\n    if (this.#isDragging) {\n      console.warn(\n        'drag-and-drop-controller: your component updated while dragging. This is not recommended and you may see unexpected behavior.'\n      );\n      return;\n    } // do not reregister while dragging\n    this.#unregisterParticipatingElements();\n    this.#queryDragContainersAndRegisterParticipating();\n  }\n\n  /** unregister all drag elements. cleans up and removes all event listeners */\n  hostDisconnected() {\n    this.#unregisterParticipatingElements();\n    this.#log('host disconnected. participating elements cleared:', this.#participatingElements);\n  }\n\n  #log(...args: unknown[]) {\n    if (this.debug) {\n      console.log('[dnd] ', ...args);\n    }\n  }\n\n  #defaultDropCb = ({ container, moveToIdx, moveFromIdx }: MoveInfo) => {\n    const listName = container.getAttribute('drag-list');\n    if (!listName) {\n      this.#log('no list name found, no default move');\n      return;\n    }\n    this.#log('default DropCb. moveFromIdx, moveToIdx', moveFromIdx, moveToIdx);\n    try {\n      const array = this.#host[listName] as unknown[];\n      this.#host[listName] = moveItemsInArray(array, moveFromIdx, moveToIdx);\n      this.#host.requestUpdate();\n    } catch (err) {\n      console.warn('default drop cb error', err);\n    }\n  };\n\n  #addLineStyles() {\n    const styleForHost = document.createElement('style');\n    styleForHost.textContent = LINE_STYLES;\n    this.#host.shadowRoot.appendChild(styleForHost);\n  }\n\n  #queryDragContainersAndRegisterParticipating() {\n    const dragContainers = this.#dragContainersQueries\n      .map(query => {\n        return [...this.#host.shadowRoot.querySelectorAll(query)];\n      })\n      .reduce((acc, val) => acc.concat(val), [])\n      .flat()\n      .filter(one => one) as DragContainer[];\n    this.#registerParticipatingElements(dragContainers);\n  }\n\n  #handlePointerDown = (e: MouseEvent) => {\n    this.#log('pointer down');\n    if (this.#pointerEventHandled) return;\n    this.#pointerEventHandled = true;\n    const target = e.target as HTMLElement;\n    if (!target.closest('[drag-handle]')) {\n      return;\n    }\n    this.#isDragging = true;\n    this.#draggingHandle = target.closest('[drag-handle]');\n    this.#draggingElement = target.closest('[drag-idx]');\n    this.#draggingElement.setAttribute('draggable', 'true');\n    this.#draggingContainer = e.currentTarget as DragContainer;\n    this.#log('set drag handle:', this.#draggingHandle);\n    this.#log('set dragging element:', this.#draggingElement);\n    this.#log('set dragging container:', this.#draggingContainer);\n    this.#draggingContainer.addEventListener('dragstart', this.#handleDragStart);\n    this.#draggingContainer.addEventListener('dragover', this.#handleDragOver);\n    this.#draggingContainer.addEventListener('drop', this.#handleDrop);\n    this.#draggingContainer.addEventListener('dragend', this.#handleDragCancel);\n  };\n\n  #handlePointerUp = (e: PointerEvent) => {\n    const dragContainer = e.currentTarget as DragContainer;\n    dragContainer.removeEventListener('dragstart', this.#handleDragStart);\n    dragContainer.removeEventListener('dragover', this.#handleDragOver);\n    dragContainer.removeEventListener('drop', this.#handleDrop);\n    dragContainer.removeEventListener('dragend', this.#handleDragCancel);\n    this.#pointerEventHandled = false;\n    this.#isDragging = false;\n  };\n\n  #makeGhostElement = (originalElement: DragItem): DragItem => {\n    const clone = originalElement.cloneNode(true) as DragItem;\n    clone.setAttribute('drag-and-drop-clone', '');\n    const { width, height } = originalElement.getBoundingClientRect();\n    clone.classList.add(this.#ghostClass);\n    clone.style.height = `${height}px`;\n    clone.style.width = `${width}px`;\n    clone.style.position = 'absolute';\n    clone.style.top = `${originalElement.offsetTop}px`;\n    clone.style.left = `${originalElement.offsetLeft}px`;\n    clone.style.zIndex = '-1';\n    return clone;\n  };\n\n  #makeShadowElement = (originalElement: DragItem): DragItem => {\n    const clone = document.createElement(originalElement.tagName) as DragItem;\n    clone.setAttribute('drag-and-drop-clone', '');\n    clone.classList.add(this.#shadowClass);\n    const { width, height } = originalElement.getBoundingClientRect();\n    clone.style.height = `${height}px`;\n    clone.style.width = `${width}px`;\n    clone.style.zIndex = '1';\n    return clone;\n  };\n\n  #handleDragStart = (e: DragEvent) => {\n    this.#log('drag start');\n    e.dataTransfer.effectAllowed = 'move';\n    this.#draggingElementGhost = this.#makeGhostElement(this.#draggingElement);\n    this.#draggingElementShadow = this.#makeShadowElement(this.#draggingElement);\n    this.#draggingContainer = e.currentTarget as DragContainer;\n\n    this.#draggingContainer.appendChild(this.#draggingElementGhost);\n    e.dataTransfer.setDragImage(this.#draggingElementGhost, e.offsetX, e.offsetY);\n    // use setTimeout to allow drag element to move before covering up\n    setTimeout(() => {\n      this.#draggingContainer.setAttribute('dragging', '');\n      const nextSibling = this.#draggingElement.nextElementSibling;\n      if (nextSibling) {\n        this.#draggingContainer.insertBefore(this.#draggingElementShadow, nextSibling);\n      } else {\n        this.#draggingContainer.appendChild(this.#draggingElementShadow);\n      }\n      this.#draggingElement.style.display = 'none';\n    });\n  };\n\n  #handleDragEnter = (e: DragEvent) => {\n    e.preventDefault();\n    this.#dropContainerCandidate = e.currentTarget as DragContainer;\n    this.#log('drag enter');\n  };\n\n  /** drag over fires continuously, when over */\n  #handleDragOver = (e: DragEvent) => {\n    e.preventDefault();\n    this.#log('drag over');\n    if (this.#isAnimating) return;\n    const target = e.target as HTMLElement;\n    const dragLine = target.closest('omni-drop-line');\n    this.#dropTarget = dragLine as DropTargetLine;\n    if (dragLine && this.#isValidMove) {\n      dragLine.setAttribute('drag-over', '');\n    }\n  };\n\n  #handleDragLeave = (e: DragEvent) => {\n    e.preventDefault();\n    this.#log('drag leave', e.target);\n    if (this.#isAnimating) return;\n    const target = e.target as HTMLElement;\n    if (!target.closest('omni-drop-line')) return;\n    const dragLine = target.closest('omni-drop-line');\n    dragLine.removeAttribute('drag-over');\n    if (!this.#isValidMove) return;\n  };\n\n  #handleDragCancel = () => {\n    this.#log('drag cancel');\n    if (this.#draggingElementShadow) {\n      this.#draggingElementShadow.remove();\n    }\n    this.#draggingContainer?.removeAttribute('dragging');\n    if (this.#isAnimating) return;\n    if (this.#draggingElement) {\n      this.#draggingElement.removeAttribute('draggable');\n      this.#draggingElement.style.display = '';\n    }\n    this.#isDragging = false;\n    this.#host.requestUpdate();\n  };\n\n  #handleDrop = async (e: DragEvent) => {\n    this.#log('handle drop');\n    e.stopPropagation();\n    e.preventDefault();\n    this.#draggingElement.removeAttribute('draggable');\n    this.#draggingElement.style.display = '';\n    this.#draggingElementShadow.remove();\n    this.#dropTarget = (e.target as Element).closest('omni-drop-line');\n    this.#dropTarget?.removeAttribute('drag-over');\n    this.#dropContainerCandidate = e.currentTarget as DragContainer;\n    if (this.#dropTarget?.tagName !== 'OMNI-DROP-LINE') {\n      this.#handleDragCancel();\n      return;\n    }\n    const isValidMove = this.#isValidMove;\n    if (!isValidMove) {\n      this.#handleDragCancel();\n      return;\n    }\n    this.#draggingContainer?.removeAttribute('dragging');\n    await this.#animateDropped(e, isValidMove);\n    this.#dropCb(isValidMove);\n    this.#host.dispatchNewEvent('omni-drop', {\n      detail: isValidMove\n    });\n    this.#isDragging = false;\n  };\n\n  #getInitialAndFinalPositions(move: MoveInfo, axis: 'x' | 'y') {\n    const draggingContainerRect = this.#draggingContainer.getBoundingClientRect();\n    const dimension = axis === 'x' ? 'width' : 'height';\n    const lineDimension = this.#draggingContainer.querySelector('omni-drop-line').getBoundingClientRect()[dimension];\n    const itemsAfterDrop = moveItemsInArray(\n      [...this.#participatingElements.get(this.#draggingContainer)],\n      move.moveFromIdx,\n      move.moveToIdx\n    );\n    const elementsToAnimationInfo = (el: DragItem) => {\n      const selfRect = el.getBoundingClientRect();\n      return {\n        el: el,\n        class: el.className,\n        initialIdx: this.#participatingElements.get(this.#draggingContainer).findIndex(one => one === el) ?? -1,\n        finalIdx: itemsAfterDrop.findIndex(one => one === el) ?? -1,\n        xRel: 0,\n        yRel: 0,\n        x: 0,\n        y: 0,\n        width: selfRect.width,\n        height: selfRect.height\n      };\n    };\n    const initial = [...this.#participatingElements.get(this.#draggingContainer)].map(elementsToAnimationInfo);\n    for (const [i, one] of initial.entries()) {\n      const prevElDimensions = initial\n        .filter((f, i) => i < one.initialIdx)\n        .map(f => f[dimension])\n        .reduce((acc, val) => acc + val, 0);\n      one[`${axis}Rel`] = (i + 1) * lineDimension + prevElDimensions;\n      one[axis] = draggingContainerRect[axis] + one[`${axis}Rel`];\n    }\n    const final = itemsAfterDrop.map(elementsToAnimationInfo);\n    for (const [i, one] of final.entries()) {\n      const prevElDimensions = final\n        .filter((f, i) => i < one.finalIdx)\n        .map(f => f[dimension])\n        .reduce((acc, val) => acc + val, 0);\n      one[`${axis}Rel`] = (i + 1) * lineDimension + prevElDimensions;\n      one[axis] = draggingContainerRect[axis] + one[`${axis}Rel`];\n    }\n    return {\n      initial,\n      final\n    };\n  }\n\n  #createDroppedElementAnimation(e: DragEvent, move: MoveInfo): Promise<Animation> {\n    this.#draggingElementShadow.style.visibility = 'hidden';\n    const axis = this.#draggingContainer.getAttribute('drag-orientation') === 'horizontal' ? 'x' : 'y';\n    const { final } = this.#getInitialAndFinalPositions(move, axis);\n    const positions = {\n      dragHandle: this.#draggingHandle.getBoundingClientRect(),\n      draggingEl: this.#draggingElement.getBoundingClientRect(),\n      targetFinal: final[move.moveToIdx]\n    };\n    const startFromLeft = e.clientX - (positions.dragHandle.left - positions.draggingEl.left);\n    const startFromTop = e.clientY - (positions.dragHandle.top - positions.draggingEl.top);\n    const startingStyle = {\n      top: `${startFromTop}px`,\n      left: `${startFromLeft}px`,\n      opacity: '.8'\n    };\n    const endingStyle = {\n      top: `${positions.targetFinal.yRel + this.#draggingContainer.getBoundingClientRect().y}px`,\n      left: `${positions.targetFinal.xRel + this.#draggingContainer.getBoundingClientRect().x}px`,\n      opacity: '1'\n    };\n    this.#draggingElementGhost.style.position = 'fixed';\n    this.#draggingElementGhost.style.zIndex = '1000';\n    this.#draggingElementGhost.style.width = `${positions.draggingEl.width}px`;\n    this.#draggingElementGhost.style.height = `${positions.draggingEl.height}px`;\n    this.#draggingElementGhost.style.opacity = '.8';\n    return this.#draggingElementGhost.animate([startingStyle, endingStyle], {\n      duration: this.#animationDuration,\n      easing: 'cubic-bezier(0.42, 0, 0.58, 1)'\n    }).finished;\n  }\n\n  #createMovedElementsAnimations(move: MoveInfo, axis: 'x' | 'y'): Promise<Animation>[] {\n    const { initial, final } = this.#getInitialAndFinalPositions(move, axis);\n    const animations: Promise<Animation>[] = [];\n    for (let i: number = 0; i < initial.length; i++) {\n      const initialEl = initial[i];\n      const finalEl = final.find(one => one.initialIdx === i);\n      const startingStyle = {\n        transform: `translate(0px,0px)`\n      };\n      const endingStyle = {\n        transform: `translate(${axis === 'x' ? `${finalEl.xRel - initialEl.xRel}px` : '0px'}, ${axis === 'x' ? '0px' : `${finalEl.yRel - initialEl.yRel}px`})`\n      };\n      const animation = initial[i].el.animate([startingStyle, endingStyle], {\n        duration: this.#animationDuration,\n        easing: 'cubic-bezier(0.42, 0, 0.58, 1)'\n      }).finished;\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n  #animateDropped = async (e: DragEvent, move: MoveInfo) => {\n    this.#log('animate dropped element into place START', move);\n    this.#isAnimating = true;\n    this.#draggingElement.style.visibility = 'hidden';\n    const animateAxis = this.#draggingContainer.getAttribute('drag-orientation') === 'horizontal' ? 'x' : 'y';\n    await Promise.all([\n      this.#createDroppedElementAnimation(e, move),\n      ...this.#createMovedElementsAnimations(move, animateAxis)\n    ]);\n    this.#draggingElement.style.visibility = 'visible';\n    this.#isAnimating = false;\n    this.#log('animate dropped element into place END');\n  };\n\n  get #isValidMove(): MoveInfo | false {\n    if (this.#dropContainerCandidate !== this.#draggingContainer) {\n      return false;\n    }\n    if (!this.#dropTarget) {\n      return false;\n    }\n    if (this.#noDropIdxs.includes(Number(this.#dropTarget.getAttribute('drag-idx')))) {\n      return false;\n    }\n    const move: MoveInfo = {\n      container: this.#dropContainerCandidate,\n      moveFromIdx: Number(this.#draggingElement.getAttribute('drag-idx')),\n      moveToIdx: Number(this.#dropTarget.getAttribute('drag-idx'))\n    };\n    const dragChildren = this.#participatingElements.get(this.#draggingContainer);\n\n    const isFirst = move.moveFromIdx === 0;\n    const isLast = move.moveFromIdx === dragChildren.length;\n    const isMiddle = !isFirst && !isLast;\n    const isMovingDown = move.moveToIdx > move.moveFromIdx;\n    if (isFirst) {\n      move.moveToIdx = move.moveToIdx - 1;\n    }\n    if (isMiddle) {\n      if (isMovingDown) {\n        move.moveToIdx = move.moveToIdx - 1;\n      }\n    }\n    if (isLast) {\n      move.moveToIdx = move.moveToIdx + 1;\n    }\n    // skip event\n    if (move.moveToIdx === move.moveFromIdx) {\n      return false;\n    }\n    // skip event\n    if (move.moveToIdx === -1) {\n      return false;\n    }\n    return move;\n  }\n\n  /** the line is styled from appending styles onto the host in host connected */\n  #makeDropTargetLine = (dragContainer: DragContainer, idx: number): DropTargetLine => {\n    const targetEl = document.createElement('omni-drop-line');\n    targetEl.setAttribute('drag-idx', String(idx));\n    targetEl.style.display = 'flex';\n    targetEl.style.flexDirection = 'row';\n    targetEl.style.justifyContent = 'center';\n    if (dragContainer.getAttribute('drag-orientation') === 'horizontal') {\n      targetEl.style.flexDirection = 'column';\n      targetEl.style.alignItems = 'center';\n    }\n    const template = `\n      <div drop-line-container>\n        <span dot dot-one> </span>\n        <div drop-line></div>\n        <span dot dot-two></span>\n      </div>\n    `;\n    targetEl.innerHTML = template;\n    return targetEl as DropTargetLine;\n  };\n\n  /** occasionnaly safari loses pointerdown events but not mousedown events.\n   * check if pointerdown is already handling to avoid double handling\n   * */\n  #handleMouseDown = (e: MouseEvent) => {\n    if (this.#pointerEventHandled) return;\n    else {\n      this.#log('mousedown is handling');\n      this.#handlePointerDown(e);\n    }\n  };\n\n  #registerParticipatingElements(dragContainers: DragContainer[]) {\n    dragContainers.forEach(dragContainer => {\n      dragContainer.addEventListener('pointerdown', this.#handlePointerDown);\n      dragContainer.addEventListener('mousedown', this.#handleMouseDown);\n      dragContainer.addEventListener('dragenter', this.#handleDragEnter);\n      dragContainer.addEventListener('dragleave', this.#handleDragLeave);\n      dragContainer.addEventListener('pointerup', this.#handlePointerUp);\n\n      const draggableItems = [...dragContainer.children] as DragItem[];\n      this.#participatingElements.set(dragContainer, draggableItems);\n\n      draggableItems.forEach((child, idx) => {\n        const target = this.#makeDropTargetLine(dragContainer, idx);\n        dragContainer.insertBefore(target, child);\n        this.#dropTargetLines.push(target);\n\n        if (idx + 1 === draggableItems.length) {\n          const lastTarget = this.#makeDropTargetLine(dragContainer, idx + 1);\n          dragContainer.appendChild(lastTarget);\n          this.#dropTargetLines.push(lastTarget);\n        }\n      });\n    });\n    this.#log('participating elements registered', this.#participatingElements);\n  }\n\n  #unregisterParticipatingElements() {\n    this.#participatingElements.forEach((child, dragContainer) => {\n      dragContainer.removeEventListener('pointerdown', this.#handlePointerDown);\n      dragContainer.removeEventListener('mousedown', this.#handleMouseDown);\n      dragContainer.removeEventListener('pointerup', this.#handlePointerUp);\n      dragContainer.removeEventListener('dragenter', this.#handleDragEnter);\n      dragContainer.removeEventListener('dragleave', this.#handleDragLeave);\n      this.#pointerEventHandled = false;\n    });\n    this.#participatingElements.clear();\n    this.#dropTargetLines.forEach(targetEl => {\n      targetEl.remove();\n    });\n    this.#dropTargetLines = [];\n    this.#host.shadowRoot.querySelectorAll('[drag-and-drop-clone]').forEach(one => one.remove());\n    this.#draggingHandle = null;\n    this.#draggingContainer = null;\n    this.#draggingElement = null;\n    this.#draggingElementShadow = null;\n    this.#draggingElementGhost = null;\n    this.#dropTarget = null;\n    this.#log('participating elements unregistered', this.#participatingElements);\n  }\n}\n\nexport const moveItemsInArray = <T>(array: T[], moveFromIdx: number, moveToIdx: number): T[] => {\n  const itemToMove = array[moveFromIdx];\n  array.splice(moveFromIdx, 1);\n  array.splice(moveToIdx, 0, itemToMove);\n  return array;\n};\n\nconst LINE_STYLES = `\n  :host {\n    --drop-line-color: var(--color-primary);\n    --drop-line-stroke: 2px;\n    --drop-line-padding: 0.5rem;\n    --drop-line-extend: 10px;\n    --drop-line-dragging-padding: 1.5rem;\n  }\n  [drop-line-container] {\n    position: relative;\n    height: 100%;\n    padding: var(--drop-line-padding) 0;\n    margin: 0 calc(-1 * var(--drop-line-extend));\n    flex-grow: 1;\n  }\n  [dragging] [drop-line-container] {\n    padding: calc(var(--drop-line-padding) + var(--drop-line-dragging-padding)) 0;\n    margin: calc(-1 * var(--drop-line-dragging-padding)) calc(-1 * var(--drop-line-extend));\n  }\n  [drag-orientation='horizontal'] [drop-line-container] {\n    padding: 0 var(--drop-line-padding);\n    margin: calc(-1 * var(--drop-line-extend)) 0;\n  }\n  [dragging][drag-orientation='horizontal'] [drop-line-container] {\n    padding: 0 calc(var(--drop-line-padding) + var(--drop-line-dragging-padding));\n    margin: calc(-1 * var(--drop-line-extend)) calc(-1 * var(--drop-line-dragging-padding));\n  }\n  [drop-line] {\n    background-color: transparent;\n    height: var(--drop-line-stroke);\n    width: 100%;\n  }\n  [drag-over] [drop-line] {\n    background-color: var(--drop-line-color);\n  }\n\n  [drag-orientation='horizontal'] [drop-line] {\n    height: 100%;\n    width: var(--drop-line-stroke);\n  }\n  [dot] {\n    position: absolute;\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n  }\n  [dot-one] {\n    left: 0;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n  [dot-two] {\n    right: 0;\n    top: 50%;\n    transform: translate(50%, -50%);\n  }\n  [drag-over] [dot] {\n    background-color: var(--drop-line-color);\n  }\n  [drag-orientation='horizontal'] [dot-one] {\n    top: 0;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  [drag-orientation='horizontal'] [dot-two] {\n    top: unset;\n    bottom: 0;\n    left: 50%;\n    transform: translate(-50%, 50%);\n  }\n`;\n"],
  "mappings": "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",
  "names": ["i"]
}
