{
  "version": 3,
  "sources": ["../../lib/controllers/click-outside-controller.ts"],
  "sourcesContent": ["import type { ReactiveController, ReactiveElement } from 'lit';\nimport type { OmniElement } from '../omni-element.js';\n\nexport interface OpenableElement extends ReactiveElement {\n  opened: boolean;\n}\n/**\n * - if your element has an 'opened' prop, it will automatically set to 'false' on outside click\n * - else, provide a function to call for closing\n */\nexport class ClickOutsideController implements ReactiveController {\n  constructor(\n    private host: OpenableElement | OmniElement,\n    private closeFn: (e: PointerEvent) => void = null\n  ) {\n    this.host.addController(this);\n  }\n\n  hostConnected() {\n    document.addEventListener('click', this.#handleClickOutside as EventListener);\n  }\n\n  hostDisconnected() {\n    document.removeEventListener('click', this.#handleClickOutside as EventListener);\n  }\n\n  #handleClickOutside = (e: PointerEvent) => {\n    if (!e.composedPath().includes(this.host)) {\n      if ('opened' in this.host && !this.closeFn) {\n        (this.host as OpenableElement).opened = false;\n      } else if (this.closeFn) {\n        this.closeFn(e);\n      } else {\n        // no action\n      }\n    }\n  };\n}\n"],
  "mappings": "AAUO,MAAM,uBAAqD;AAAA,EAChE,YACU,MACA,UAAqC,MAC7C;AAFQ;AACA;AAER,SAAK,KAAK,cAAc,IAAI;AAAA,EAC9B;AAAA,EAEA,gBAAgB;AACd,aAAS,iBAAiB,SAAS,KAAK,mBAAoC;AAAA,EAC9E;AAAA,EAEA,mBAAmB;AACjB,aAAS,oBAAoB,SAAS,KAAK,mBAAoC;AAAA,EACjF;AAAA,EAEA,sBAAsB,CAAC,MAAoB;AACzC,QAAI,CAAC,EAAE,aAAa,EAAE,SAAS,KAAK,IAAI,GAAG;AACzC,UAAI,YAAY,KAAK,QAAQ,CAAC,KAAK,SAAS;AAC1C,QAAC,KAAK,KAAyB,SAAS;AAAA,MAC1C,WAAW,KAAK,SAAS;AACvB,aAAK,QAAQ,CAAC;AAAA,MAChB,OAAO;AAAA,MAEP;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
