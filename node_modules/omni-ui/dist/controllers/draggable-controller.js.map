{
  "version": 3,
  "sources": ["../../lib/controllers/draggable-controller.ts"],
  "sourcesContent": ["import type { ReactiveController, ReactiveElement } from 'lit';\n\nexport class DraggableController implements ReactiveController {\n  private host: ReactiveElement;\n  private isDragging = false;\n  private startX = 0;\n  private startY = 0;\n  #noDragSelectors: string[];\n  #originalBodyStyle: string;\n  /** position with the css properties found in the draggable mixin */\n  #positionThroughCssProperties: boolean;\n  eleRefs = [];\n  secondaryEvents = ['mouseleave', 'mouseup', 'pointerup', 'pointerleave', 'pointercancel'];\n\n  constructor(host: ReactiveElement, noDragSelector?: string[], positionThroughCssProperties = false) {\n    this.host = host;\n    this.host.addController(this);\n    this.#noDragSelectors = noDragSelector ?? [];\n    this.#positionThroughCssProperties = positionThroughCssProperties;\n  }\n\n  #stopPropagationForElements(e) {\n    e.stopPropagation();\n  }\n\n  #updateCursorState = (e: MouseEvent) => {\n    const path = e.composedPath();\n    this.eleRefs.forEach(ele => {\n      if (path.includes(ele)) {\n        ele.style.cursor = 'default';\n      } else {\n        ele.style.cursor = 'grab';\n      }\n    });\n  };\n\n  async hostConnected() {\n    this.host.addEventListener('pointerdown', this.#handlePointerDown as EventListener);\n    await this.host.updateComplete;\n    this.#noDragSelectors.forEach(selector => {\n      const elements = this.host.shadowRoot.querySelectorAll(selector);\n      this.eleRefs.push(...elements);\n      elements.forEach(element => {\n        element.addEventListener('mouseover', this.#updateCursorState as EventListener);\n        element.addEventListener('pointerdown', this.#stopPropagationForElements as EventListener);\n      });\n    });\n  }\n\n  hostDisconnected() {\n    this.host.removeEventListener('pointerdown', this.#handlePointerDown as EventListener);\n    this.#noDragSelectors.forEach(selector => {\n      const elements = this.host.querySelectorAll(selector);\n      elements.forEach(element => {\n        element.removeEventListener('mouseover', this.#updateCursorState as EventListener);\n        element.removeEventListener('pointerdown', this.#stopPropagationForElements as EventListener);\n      });\n    });\n  }\n\n  #handlePointerDown = (e: PointerEvent) => {\n    this.isDragging = true;\n    this.startX = e.clientX - this.host.offsetLeft;\n    this.startY = e.clientY - this.host.offsetTop;\n    this.host.style.cursor = 'grabbing';\n    document.addEventListener('pointermove', this.#handlePointerMove);\n    this.secondaryEvents.forEach(event => {\n      document.addEventListener(event, this.#handlePointerUp);\n    });\n    this.#originalBodyStyle = document.body.style.cssText;\n    this.#emitDragEvent('dragstart', e);\n  };\n\n  #handlePointerMove = (e: PointerEvent) => {\n    if (!this.isDragging) return;\n    document.body.style.cursor = 'grabbing';\n    document.body.style.userSelect = 'none';\n    document.body.style['-webkit-user-select'] = 'none'; //\n    const { width, height } = this.host.getBoundingClientRect();\n    const left = e.clientX - this.startX;\n    const top = e.clientY - this.startY;\n\n    if (!this.#positionThroughCssProperties) {\n      this.host.style.left = `${left}px`;\n      this.host.style.top = `${top}px`;\n    } else {\n      this.host.style.setProperty('--drag-left', `${Math.round(left)}px`);\n      this.host.style.setProperty('--drag-top', `${Math.round(top)}px`);\n      this.host.style.setProperty('--drag-width', `${Math.round(width)}px`);\n      this.host.style.setProperty('--drag-height', `${Math.round(height)}px`);\n    }\n    this.#emitDragEvent('drag', e);\n  };\n\n  #handlePointerUp = () => {\n    this.isDragging = false;\n    this.host.style.cursor = 'grab';\n    document.removeEventListener('pointermove', this.#handlePointerMove);\n    this.secondaryEvents.forEach(event => {\n      document.removeEventListener(event, this.#handlePointerUp);\n    });\n    document.body.style.cssText = this.#originalBodyStyle;\n    this.#emitDragEvent('dragend');\n  };\n\n  /**\n   * emits events to communicate movements to host and outside listeners.\n   * A breaking change could remove this as it is mainly to keep the same functionality as the DraggableMixin used on OmniTile\n   */\n  #emitDragEvent = (name: 'dragstart' | 'dragend' | 'drag', e: PointerEvent = null) => {\n    const { pageX, pageY } = e ?? { pageX: 0, pageY: 0 };\n    const { left, top, width, height } = this.host.getBoundingClientRect();\n    const offsetX = pageX - left;\n    const offsetY = pageY - top;\n    const { innerWidth, innerHeight } = window;\n    const currPosition = {\n      left,\n      top,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      availableWidth: innerWidth,\n      availableHeight: innerHeight\n    };\n    this.host.dispatchEvent(new CustomEvent(name, { bubbles: true, composed: true, detail: currPosition }));\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
