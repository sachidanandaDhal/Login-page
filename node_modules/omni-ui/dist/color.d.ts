/**
 * Color class for handling color objects from picker events, parsing and generating CSS color values
 * ```js
 *	const color1 = new Color({r: 255, g: 255, b: 255}); // color1.hex returns '#fff'
 *	const color2 = new Color('hsl(204, 255, 0)').hex // returns #cf0
 * ```
 */
export default class Color {
    r: any;
    g: any;
    b: any;
    h: any;
    s: any;
    l: any;
    a: any;
    angle: any;
    static number(input: any, relativeTo?: number): number;
    static parse(input: any): {};
    static convertRGBtoHSL(r: any, g: any, b: any): {
        h: any;
        s: any;
        l: any;
        angle: string;
    };
    static convertHSLtoRGB(hue: any, saturation: any, luminescence: any, angleUnits?: string): {
        r: any;
        g: any;
        b: any;
    };
    toHSL(): this;
    toRGB(): this;
    constructor(colorLike: any);
    get rgba(): string;
    get rgb(): string;
    get hsl(): string;
    get hex(): string;
    toString(as?: string): string;
}
//# sourceMappingURL=color.d.ts.map