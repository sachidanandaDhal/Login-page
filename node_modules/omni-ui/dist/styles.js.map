{
  "version": 3,
  "sources": ["../lib/styles.ts"],
  "sourcesContent": ["import { css } from 'lit';\nimport { stylesheet } from './stylesheet.js';\n/*\nstyles shared across global, custom element shadow doms\n- generalizable, minimal common styling\n- for custom element specifics put in the respective element, not here\n- for global system put in global stylesheet, not here\n- expose html content to apply global stylesheet by putting it in (light) DOM, not in shadowRoot\n *\n *\n * */\n\n// pull out the .omni custom properties to reuse here without the class\nconst htmlStyleVariables = stylesheet.match(/(?:\\bhtml[^{]*{)([^}]+)}/)?.[1] ?? '';\nconst omniStyleVariables = stylesheet.match(/(?:\\.omni[^{]*{)([^}]+)}/)?.[1] ?? '';\n/* refactor from older variables in new context */\nconst variables = css`\n  ${css([`${htmlStyleVariables} ${omniStyleVariables}`] as unknown as any)}\n  --font-family-serif: Georgia, Cambria, serif;\n  --font-family-sans: BlinkMacSystemFont, 'Calibri', 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Roboto', sans-serif;\n  --font-family-monospace: ui-monospace, 'Cascadia Mono', 'Segoe UI Mono', 'Ubuntu Mono', 'Roboto Mono', Menlo, Monaco,\n    Consolas, monospace;\n\n  /* TODO\n\t--form-bgimg-off: linear-gradient(135deg,rgba(0, 0, 0, 0) 0,var(0,0,0,0) 100%);\n\n\tprovide a context for changing styles to form elements without side effects\n\t*/\n  --form-font-size: 1rem;\n  --form-bg: var(--color-pale-grey-two, #ddd);\n  --form-bg-on: var(--color-blue-true80, #dfd);\n  --form-border: var(--form-bg);\n  --form-border-on: var(--form-bg);\n  --form-bgimg-off: none;\n  --form-bgimg: var(--gradient-electric-blue);\n  --form-bgimg-on: var(--gradient-electric-blue);\n  --form-fg: var(--color-almost-black, #111);\n  --form-fg-on: var(--color-green-dark, #120);\n  --form-focused: var(--blue);\n`;\n\nconst forms = css`\n  omni-option,\n  :host(omni-option),\n  input,\n  button,\n  select,\n  option,\n  textarea {\n    font-family: inherit;\n    font-size: var(--form-font-size, 1rem);\n    line-height: 1.5;\n    margin: 0;\n    background-color: var(--form-bg);\n    border: thin solid var(--form-bg);\n    border-radius: var(--radius, 0.5em);\n    padding: 0 1.4em;\n    position: relative;\n    box-sizing: border-box;\n  }\n\n  omni-select,\n  :host(omni-select),\n  omni-dropdown,\n  :host(omni-dropdown),\n  select {\n    outline: none;\n  }\n\n  input:where([type='button'], [type='reset'], [type='submit']),\n  button {\n    display: inline-flex;\n    align-items: center;\n    text-align: center;\n    white-space: nowrap;\n    background-color: var(--form-bg);\n    background-image: var(--form-bgimg-off);\n    border-color: var(--form-border);\n    border-width: thin;\n    color: var(--form-fg, #333);\n    cursor: pointer;\n    font-weight: 600;\n    letter-spacing: 0.014em;\n    line-height: 1;\n    height: 2.2em;\n    transition: background-color background-image border-color color 0.25s;\n    user-select: none;\n  }\n  /*\n*/\n  input:where([type='button'], [type='reset'], [type='submit']):focus-visible,\n  button:focus-visible {\n    box-shadow:\n      rgb(59 62 63 / 10%) 0px 4px 6px 0px,\n      0 0 0 0.125em var(--form-focused);\n    outline: 0;\n  }\n\n  /* special visual overrides\n\t.is-text\n\t.is-outlined\n\t.is-\n * */\n  .is-text input:where([type='button'], [type='reset'], [type='submit']),\n  input:where([type='button'], [type='reset'], [type='submit']).is-text,\n  .is-text button,\n  button.is-text {\n    --form-border: transparent;\n    --form-bg: transparent;\n    --form-bg-on: var(--color-pale-grey-two);\n    --form-fg: var(--primary);\n    --form-fg-on: var(--color-green-dark);\n    text-decoration: none;\n  }\n\n  input:where([type='button'], [type='reset'], [type='submit']):where(:active, :hover, :focus),\n  button:where(:active, :hover, :focus) {\n    box-shadow: rgb(59 62 63 / 10%) 0px 4px 6px 0px;\n    background-color: var(--form-bg-on);\n    border-color: var(--form-border-on);\n    color: var(--form-fg-on, #000);\n    outline: 0;\n  }\n\n  .is-outlined input:where([type='button'], [type='reset'], [type='submit']),\n  input:where([type='button'], [type='reset'], [type='submit']).is-outlined,\n  .is-outlined button,\n  button.is-outlined {\n    --form-bg: transparent;\n    --form-bg-on: var(--color-electric-blue-between);\n    --form-bgimg-on: var(--form-bgimg);\n    --form-fg: var(--primary);\n    --form-border: var(--primary);\n    --form-fg-on: var(--white);\n    --form-border: var(--primary);\n    --form-border-on: var(--primary);\n  }\n  .is-outlined input:where([type='button'], [type='reset'], [type='submit']):where(:active, :hover, :focus),\n  input:where([type='button'], [type='reset'], [type='submit']).is-outlined:where(:active, :hover, :focus),\n  .is-outlined button:where(:active, :hover, :focus),\n  button.is-outlined:where(:active, :hover, :focus) {\n    --form-fg-on: var(--white);\n  }\n`;\n\nconst all = css`\n  :host {\n    ${variables}\n  }\n  ${forms}\n`;\n\nexport { all, variables, forms };\n"],
  "mappings": "AAAA,SAAS,WAAW;AACpB,SAAS,kBAAkB;AAY3B,MAAM,qBAAqB,WAAW,MAAM,0BAA0B,IAAI,CAAC,KAAK;AAChF,MAAM,qBAAqB,WAAW,MAAM,0BAA0B,IAAI,CAAC,KAAK;AAEhF,MAAM,YAAY;AAAA,IACd,IAAI,CAAC,GAAG,kBAAkB,IAAI,kBAAkB,EAAE,CAAmB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwwGd,MAAM,MAAM;AAAA;AAAA,MAEN,SAAS;AAAA;AAAA,IAEX,KAAK;AAAA;",
  "names": []
}
