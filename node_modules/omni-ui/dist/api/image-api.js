import { fetchJSON, merge } from "../omni-util.js";
const originsByEnv = {
  local: "https://devimages.annalect.com",
  dev: "https://devimages.annalect.com",
  qa: "https://qaimages.annalect.com",
  stg: "https://stgimages.annalect.com",
  prod: "https://images.annalect.com"
};
class ImageAPI {
  constructor(token, env = "prod") {
    this.token = token;
    this.env = env;
    this.origin = originsByEnv[env];
    this.fetchOptions = {
      // NOTE: API currently only supports ANsid tokens
      headers: { version: "v2", ANsid: token }
    };
  }
  /**
   * Create a hosted image URL
   * @param  {File} file image file to upload (e.g. obtained via <omni-file-input>)
   * @return {Promise<string>}   a Promise for an image URL
   */
  createImageURL(file) {
    const url = new URL(`/images`, this.origin);
    const formData = new FormData();
    formData.append("environment", this.env);
    formData.append(file.name, file);
    const options = merge(this.fetchOptions, {
      method: "POST",
      body: formData
    });
    delete options["Content-Type"];
    return fetchJSON(url, options).then(([imgData]) => encodeImageURL(this.origin, imgData.key, imgData.originalFileName)).catch((res) => {
      console.warn(`error with request`, { url, options, res });
      return Promise.reject(res);
    });
  }
}
function encodeImageURL(origin, key, filename) {
  const encodedKey = encodeURI(btoa(JSON.stringify({ key })));
  const encodedFilename = encodeURIComponent(filename);
  return `${origin}/images/${encodedKey}#${encodedFilename}`;
}
export {
  ImageAPI
};
//# sourceMappingURL=image-api.js.map
