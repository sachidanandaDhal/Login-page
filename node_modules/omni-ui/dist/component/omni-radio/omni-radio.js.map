{
  "version": 3,
  "sources": ["../../../lib/component/omni-radio/omni-radio.ts"],
  "sourcesContent": ["import { html, nothing } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ElementInternalsBase } from '../../element-internals-base.js';\nimport { OmniElement } from '../../omni-element.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--radio-height-width: 1.2857142857rem;--radio-border-width: calc(var(--radio-height-width) / 9);--radio-background: var(--color-almost-black);--radio-background-hover: var(--color-primary);--radio-background-error: var(--color-error);--radio-font-color: var(--color-almost-black);display:flex;flex-direction:column;color:var(--radio-font-color)}:host([haslabel]){--radio-height-width: 0.8571428571rem}:host([dark]){--radio-background: var(--color-white);--radio-background-hover: var(--color-white)}:host([haslabel][dark]) ::slotted(*){color:var(--color-white) !important;opacity:.78}:host(:not([disabled]):hover),:host(:not([disabled]):active),:host(:not([disabled])[hover]){outline:none;cursor:pointer;opacity:.75}:host(:not([disabled]):hover) .radio,:host(:not([disabled]):active) .radio,:host(:not([disabled])[hover]) .radio{border:var(--radio-border-width) solid var(--radio-background-hover)}:host(:not([disabled]):hover) .radio.error,:host(:not([disabled]):active) .radio.error,:host(:not([disabled])[hover]) .radio.error{border:var(--radio-border-width) solid var(--color-error)}:host(:not([disabled]):hover) ::slotted(*){opacity:.75;cursor:pointer}::slotted(*){margin-left:.5714285714rem !important;line-height:1.4285714286rem !important}:host([disabled]:hover),:host([disabled]){cursor:not-allowed;opacity:.5}.container{display:flex;justify-content:flex-start;align-items:center}.radio{box-sizing:border-box;width:var(--radio-height-width);height:var(--radio-height-width);border:var(--radio-border-width) solid var(--radio-background);border-radius:50%;display:flex;justify-content:center;align-items:center}.radio .radio-inner-circle{background:var(--radio-background);border-radius:50%;width:calc(var(--radio-height-width)/2);height:calc(var(--radio-height-width)/2)}.radio.checked{border:var(--radio-border-width) solid var(--radio-background-hover)}.radio.checked .radio-inner-circle{background:var(--radio-background-hover)}.radio.error{border:var(--radio-border-width) solid var(--color-error)}.radio.checked.error{border:var(--radio-border-width) solid var(--color-error)}.radio.checked.error .radio-inner-circle{background:var(--radio-background-error)}.radio.disabled{border:var(--radio-border-width) solid var(--color-shark)}.radio.checked.disabled{border:var(--radio-border-width) solid var(--color-shark)}.radio.checked.disabled .radio-inner-circle{background:var(--color-shark)}.footer-spacer{height:1.8571428571rem;min-height:1.8571428571rem;max-height:1.8571428571rem;flex:0 0 100%}.footer-container{display:flex;flex:0 0 100%;padding:.2857142857rem 0 .2857142857rem .2857142857rem}.footer-container.help-text{justify-content:flex-end;align-items:center}.footer-container.error-text{justify-content:flex-start;align-items:center}.footer-container omni-icon{margin-right:.5714285714rem;--color-icon-lines: var(--color-error)}.footer-container span{font-size:.8571428571rem;font-weight:400;color:var(--color-almost-black)}`\n\ninterface RadioElement {\n  /**\n   * in a regular radio, the checked attribute does not override the checked property\n   * here, we can have both work\n   */\n  checked: boolean;\n  /** check the box */\n  check: () => void;\n  /** uncheck the box */\n  uncheck: () => void;\n  /** toggle the check  */\n  toggle: () => void;\n}\n\n/**\n * To include within your project `import { OmniRadio } from 'omni-ui';`\n *\n * @slot - label slot for radio\n * @tagname omni-radio\n * @cssprop [--radio-height-width=1.2857rem]\n * @cssprop [--radio-border-width=calc(var(--radio-height-width) / 9)]\n * @cssprop [--radio-background=var(--color-almost-black)]\n * @cssprop [--radio-background-hover=var(--color-primary)]\n * @cssprop [--radio-background-error=var(--color-error)]\n * @cssprop [--radio-font-color=var(--color-almost-black)]\n */\nexport class OmniRadio extends ElementInternalsBase<string> implements RadioElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  @property({ type: String }) valueMissingMessage = 'Please check this radio button if you want to proceed.';\n  @property({ type: Boolean, reflect: true }) checked: boolean = false;\n  @property({ type: String, reflect: true }) error: string;\n  @property({ type: String, reflect: true }) name: string;\n  /** can only be set as a string. If other data types are desired, stringify your data and set it to value, then parse on read */\n  @property({ type: String, reflect: true }) value: string;\n  @property({ type: Boolean, reflect: true }) showfooter: boolean = false;\n  /**\n   * @internal\n   */\n  @query('.radio') radioEl: HTMLElement;\n  /**\n   * @internal\n   */\n  @queryAssignedElements() slottedElements: HTMLElement[];\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', this.#toggle);\n    this.addEventListener('keyup', this._handleKeyup);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeEventListener('click', this.#toggle);\n    this.removeEventListener('keyup', this._handleKeyup);\n  }\n\n  async firstUpdated() {\n    await this.updateComplete;\n    this.#determineValidityAndValue();\n  }\n\n  #determineValidityAndValue() {\n    this._internals.setValidity({});\n    switch (this.checked) {\n      case true:\n        if (!this.value) {\n          this.value = 'on';\n        }\n        if (this.required) {\n          this._internals.setValidity({});\n          this._internals.setFormValue(this.value);\n        } else {\n          this._internals.setFormValue(this.value);\n        }\n        break;\n      case false:\n      default:\n        if (this.required) {\n          this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this.radioEl);\n          this._internals.setFormValue('');\n        } else {\n          // null will stop from participating in the form\n          this._internals.setFormValue(null);\n        }\n        break;\n    }\n  }\n\n  updated(): void {\n    if (this.slottedElements.length || this._internals.labels.length) {\n      this.setAttribute('haslabel', '');\n    } else {\n      this.removeAttribute('haslabel');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _handleKeyup = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      this.#toggle();\n    }\n    if (e.key === 'Escape') {\n      this.blur();\n    }\n  };\n\n  #toggle = (e: Event = null, toggleTo = !this.checked) => {\n    if (this.disabled) return;\n    this.checked = toggleTo;\n    this.#determineValidityAndValue();\n    this.dispatchNewEvent('change', { detail: this.checked });\n  };\n\n  get #footerTemplate() {\n    if (!this.showfooter) return nothing;\n    const footerSpacer = html`<div class=\"footer-spacer\"></div>`;\n    if (!this.error) return footerSpacer;\n    if (this.error) {\n      return html` <div class=\"footer-container error-text\">\n        <omni-icon icon-id=\"omni:informative:error\"></omni-icon>\n        <span>${this.error}</span>\n      </div>`;\n    }\n  }\n\n  public toggle() {\n    this.#toggle();\n  }\n\n  public check() {\n    this.#toggle(null, true);\n  }\n\n  public uncheck() {\n    this.#toggle(null, false);\n  }\n\n  render() {\n    const innerRadioButtonError = typeof this.error !== 'undefined' && this.error !== null;\n    const classes = classMap({\n      checked: this.checked,\n      error: innerRadioButtonError,\n      radio: true,\n      disabled: this.disabled\n    });\n    return html`\n      <div class=\"container\" part=\"container\">\n        <div class=${classes} part=\"radio\">\n          ${this.checked ? html`<div class=\"radio-inner-circle\"></div>` : nothing}\n        </div>\n        <slot></slot>\n      </div>\n      ${this.#footerTemplate}\n    `;\n  }\n}\n\nOmniElement.register('omni-radio', OmniRadio);\n"],
  "mappings": "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",
  "names": []
}
