/**
    OmniSelect emulates a regular <select> HTMLSelectElement
  * @element omni-select
    * HTMLOmniSelect element with custom UI, based on HTMLSelectElement <select>;
    @see {@link https://developer.mozilla.org/docs/Web/HTML/Element/select} <select>
    @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement} HTMLSelectElement API
    @see {@link http://localhost:8000/form} OmniUI Form Elements
  * @element omni-select
    * @example
        ```html
        <omni-select>
            <omni-option>option 1</omni-option>
            <omni-option>option 2</omni-option>

            <omni-optgroup label="first group A">
                <omni-option>A-1</omni-option>
                <omni-option>A-2</omni-option>
            </omni-optgroup>
        </omni-select>
        ```
*/
export class OmniSelect extends OmniFormControl {
    static get properties(): {
        _size: {
            type: NumberConstructor;
        };
        disabled: {
            type: BooleanConstructor;
            reflect: boolean;
        };
        open: {
            type: BooleanConstructor;
            reflect: boolean;
        };
        multiple: {
            type: BooleanConstructor;
            reflect: boolean;
        };
        required: {
            type: BooleanConstructor;
            reflect: boolean;
        };
        size: {
            type: NumberConstructor;
            reflect: boolean;
            converter: {
                toAttribute(value: any): any;
            };
        };
    };
    formResetCallback(): void;
    _mode: string;
    formAssociatedCallback(form: any): void;
    _closing(event: any): void;
    _opening(event: any): void;
    __observer: MutationObserver;
    _selection({ detail }?: {
        detail: any;
    }): void;
    _remit(event: any): void;
    _mutationCallback(mutations: any, observer: any): void;
    __mutated: number;
    _invalid(): void;
    get value(): any[];
    setValidity(): void;
    setFormValue(values: any): void;
    _option({ target }: {
        target: any;
    }): void;
    _setvalidity: number;
    willUpdate(changedProperties: any): void;
    _size: number;
    _position(): void;
    set selectedIndex(index: any);
    get selectedIndex(): any;
    get selectedOptions(): NodeListOf<Element>;
    _indexEach(node: any, i: any): any;
    _index(): Element[];
    get options(): NodeListOf<Element>;
    open: boolean;
    __slot: string;
    _click(event: any): void;
    firstUpdated(): void;
    _originalOptions: Set<any>;
    __deselect(node: any): void;
    _change(event: any): void;
    render(): import("lit-html").TemplateResult<1>;
}
import { OmniFormControl } from '../omni-form-control.js';
//# sourceMappingURL=omni-select.d.ts.map