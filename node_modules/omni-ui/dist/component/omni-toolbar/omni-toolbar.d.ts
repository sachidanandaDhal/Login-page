import { OmniElement } from '../../omni-element.js';
import '../omni-style/omni-style.js';
import '../omni-icon/omni-icon.js';
import '../omni-tooltip/omni-tooltip.js';
/**
 * To include within your project `import { OmniToolbarElement } from 'omni-ui';`
 *
 * @tagname omni-toolbar
 * @slot start - slot for start items
 * @slot start-more-menu - slot for start items
 * @slot default - default items (placed in the center in the toolbar)
 * @slot center-more-menu - more menu for center (or default) items
 * @slot center-end - slot for center-end items
 * @slot center-end-more-menu - slot for start items
 * @slot end - slot for end items
 * @slot end-more-menu - slot for end more items
 * @cssprop [--omni-toolbar-gap=12px]
 * @event {string} omni-toolbar-change - fires when a more item is shown or hidden
 */
export declare class OmniToolbarElement extends OmniElement {
    static get styles(): import("lit").CSSResult[];
    private __moreBars;
    /**@internal */
    isStartMoreMenuOpen: boolean;
    /**@internal */
    isCenterMoreMenuOpen: boolean;
    /**@internal */
    isCenterEndMoreMenuOpen: boolean;
    /**@internal */
    isEndMoreMenuOpen: boolean;
    /** @internal marked as internal until a story is added to show how this is used */
    centerMoreBtnClassMapOverride: Record<string, string>;
    /**@internal */
    placement: 'top' | 'bottom' | 'left' | 'right';
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    private renderMoreItemTmpl;
    render(): import("lit-html").TemplateResult<1>;
    closeMoreItemDropMenus(): void;
    private __onSlotChange;
    private __onMoreBarItemUpdate;
    private __onClick;
}
declare global {
    interface HTMLElementTagNameMap {
        'omni-toolbar': OmniToolbarElement;
    }
}
//# sourceMappingURL=omni-toolbar.d.ts.map