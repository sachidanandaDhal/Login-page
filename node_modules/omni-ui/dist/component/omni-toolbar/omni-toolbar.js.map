{
  "version": 3,
  "sources": ["../../../lib/component/omni-toolbar/omni-toolbar.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable lit-a11y/click-events-have-key-events */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { property, state } from 'lit/decorators.js';\nimport { MoreBar } from 'more-bar/index.js';\nimport { OmniElement } from '../../omni-element.js';\nimport '../omni-style/omni-style.js';\nimport '../omni-icon/omni-icon.js';\nimport '../omni-tooltip/omni-tooltip.js';\nimport { merge } from '../../omni-util.js';\n\nimport {css} from 'lit';\nconst styles = css`:host([nested]) .positioned-wrapper{position:unset}.positioned-wrapper{position:relative;height:100%}.bar{height:100%;display:flex;align-items:center}#toolbar{padding:6px 12px;overflow:hidden;min-height:2.1428571429rem}#center{flex-shrink:50;flex-basis:60%}#center-end{flex-shrink:500;margin-left:auto}#center-end,#end{justify-content:flex-end}.more{position:absolute !important}.more[hidden]{display:none !important}.more .dropdown-menu{left:unset;right:0}.more-menu-slot::slotted([hidden]){display:none !important}.more,.bar>slot::slotted(*){white-space:nowrap;margin:0 calc(var(--omni-toolbar-gap, 12px)/2) !important}[name=start]::slotted(:first-child){margin-left:0 !important}[name=end]::slotted(:last-child){margin-right:0 !important}[name=start]::slotted(.title){margin-right:var(--omni-toolbar-gap, 12px) !important}`\n\n\n/**\n * To include within your project `import { OmniToolbarElement } from 'omni-ui';`\n *\n * @tagname omni-toolbar\n * @slot start - slot for start items\n * @slot start-more-menu - slot for start items\n * @slot default - default items (placed in the center in the toolbar)\n * @slot center-more-menu - more menu for center (or default) items\n * @slot center-end - slot for center-end items\n * @slot center-end-more-menu - slot for start items\n * @slot end - slot for end items\n * @slot end-more-menu - slot for end more items\n * @cssprop [--omni-toolbar-gap=12px]\n * @event {string} omni-toolbar-change - fires when a more item is shown or hidden\n */\nexport class OmniToolbarElement extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  @state() private __moreBars: Map<HTMLElement, MoreBar>;\n\n  /**@internal */\n  @property({ type: Boolean }) isStartMoreMenuOpen: boolean;\n  /**@internal */\n  @property({ type: Boolean }) isCenterMoreMenuOpen: boolean;\n  /**@internal */\n  @property({ type: Boolean }) isCenterEndMoreMenuOpen: boolean;\n  /**@internal */\n  @property({ type: Boolean }) isEndMoreMenuOpen: boolean;\n  /** @internal marked as internal until a story is added to show how this is used */\n  @property({ type: Object, attribute: false }) centerMoreBtnClassMapOverride: Record<string, string> = {};\n  /**@internal */\n  @property() placement: 'top' | 'bottom' | 'left' | 'right';\n\n  constructor() {\n    super();\n    /**@internal */\n    this.__moreBars = new Map();\n    this.closeMoreItemDropMenus = this.closeMoreItemDropMenus.bind(this);\n    this.closeMoreItemDropMenus(); // default to closed\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('click', this.closeMoreItemDropMenus);\n  }\n\n  disconnectedCallback() {\n    this.__moreBars.forEach(moreBar => moreBar.destroy());\n    this.__moreBars = new Map();\n    window.removeEventListener('click', this.closeMoreItemDropMenus);\n    super.disconnectedCallback();\n  }\n\n  private renderMoreItemTmpl(barSectionType) {\n    const openPropName = `is${pascalize(barSectionType)}MoreMenuOpen`;\n\n    return html`\n      <div\n        class=${classMap({\n          dropdown: true,\n          more: true,\n          'is-active': this[openPropName]\n        })}\n        part=\"${barSectionType}-more\"\n        hidden>\n        <div class=\"dropdown-trigger\">\n          <omni-tooltip relateby=\"label\" place=\"${this.placement || 'top'}\">\n            <button\n              slot=\"invoker\"\n              class=${classMap(\n                merge(\n                  {\n                    button: true,\n                    'is-text': true,\n                    'more-item-btn': true,\n                    'is-active': this[openPropName]\n                  },\n                  this[`${barSectionType}MoreBtnClassMapOverride`]\n                )\n              )}\n              part=\"${barSectionType}-more-btn\"\n              aria-haspopup=\"true\"\n              aria-controls=\"${barSectionType}-dropdown-menu\"\n              value=${openPropName}>\n              <omni-icon icon-id=\"omni:interactive:${barSectionType === 'center-end' ? 'actions' : 'more'}\"></omni-icon>\n            </button>\n            <div slot=\"content\">More</div>\n          </omni-tooltip>\n        </div>\n        <div class=\"dropdown-menu\" id=\"${barSectionType}-dropdown-menu\" role=\"menu\">\n          <div class=\"dropdown-content\" part=\"${barSectionType}-more-dropdown-content\">\n            <slot class=\"more-menu-slot\" name=\"${barSectionType}-more-menu\"></slot>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      <omni-style class=\"positioned-wrapper\" part=\"positioned-wrapper\">\n        <div\n          id=\"toolbar\"\n          part=\"toolbar\"\n          class=\"bar\"\n          @slotchange=${this.__onSlotChange}\n          @morebar-item-update=${this.__onMoreBarItemUpdate}\n          @click=${this.__onClick}>\n          <div id=\"start\" part=\"start\" class=\"bar\">\n            <slot name=\"start\" part=\"start-slot\"></slot>\n            ${this.renderMoreItemTmpl('start')}\n          </div>\n          <div id=\"center\" part=\"center\" class=\"bar\">\n            <slot part=\"slot\"></slot>\n            ${this.renderMoreItemTmpl('center')}\n          </div>\n          <div id=\"center-end\" part=\"center-end\" class=\"bar\">\n            ${this.renderMoreItemTmpl('center-end')}\n            <slot name=\"center-end\" part=\"center-end-slot\"></slot>\n          </div>\n          <div id=\"end\" part=\"end\" class=\"bar\">\n            ${this.renderMoreItemTmpl('end')}\n            <slot name=\"end\" part=\"end-slot\"></slot>\n          </div>\n        </div>\n      </omni-style>\n    `;\n  }\n\n  closeMoreItemDropMenus() {\n    this.isStartMoreMenuOpen = false;\n    this.isCenterMoreMenuOpen = false;\n    this.isCenterEndMoreMenuOpen = false;\n    this.isEndMoreMenuOpen = false;\n  }\n\n  private __onSlotChange(e) {\n    const slot = e.target;\n    const barSection = slot.closest('.bar');\n    const isMoreEnabled = isMoreEnabledForBar(barSection);\n    const isJustifyEnd = barSection.matches('#end, #center-end');\n    let moreBar = this.__moreBars.get(barSection);\n    const more = barSection.querySelector('.more');\n    if (more) more.hidden = !isMoreEnabled;\n\n    if (moreBar && isMoreEnabled) {\n      moreBar.init(); // refresh bar\n    } else if (moreBar && !isMoreEnabled) {\n      moreBar.destroy();\n      this.__moreBars.delete(barSection);\n    } else if (!moreBar && isMoreEnabled) {\n      moreBar = new MoreBar(barSection, more, isJustifyEnd);\n      // next task so child custom elements can upgrade and we get a proper moreEl width\n      setTimeout(() => moreBar.init());\n      this.__moreBars.set(barSection, moreBar);\n    }\n  }\n\n  private __onMoreBarItemUpdate({ detail }) {\n    this.closeMoreItemDropMenus();\n\n    const moreItems = getMoreItems(detail.moreBar.barEl);\n    if (!moreItems?.length) return;\n\n    const relatedMoreItem = moreItems[detail.index];\n    if (!relatedMoreItem) return;\n\n    relatedMoreItem.hidden = detail.type === 'show';\n\n    this.dispatchNewEvent('omni-toolbar-change', {\n      detail: {\n        part: detail.moreBar.barEl.getAttribute('part'),\n        item: detail.item,\n        index: detail.index,\n        type: detail.type\n      }\n    });\n  }\n\n  private __onClick(e) {\n    // if more item btn, toggle menu\n    const moreItemBtn = eventPathFindTargetMatch(e, '.more-item-btn');\n    if (moreItemBtn) {\n      const isOpen = this[moreItemBtn.value];\n      // before toggling menu, let click propagate so all items close their menus\n      setTimeout(() => {\n        this[moreItemBtn.value] = !isOpen;\n      });\n    }\n\n    // dropdown-items should close the menu (let click propagate)\n    if (eventPathFindTargetMatch(e, '.dropdown-item')) return;\n\n    // other elems in menu should NOT close menu when user is interacting (defer to consumer)\n    if (eventPathFindTargetMatch(e, '.more .dropdown-menu')) e.stopPropagation();\n  }\n}\n\nfunction getMoreItems(bar) {\n  return bar\n    ?.querySelector('.more-menu-slot')\n    ?.assignedElements()\n    .filter(\n      el => !el.matches('[menu-only]') // use 'menu-only' attr to skip menu items when indexing\n    );\n}\n\nfunction isMoreEnabledForBar(bar) {\n  return getMoreItems(bar)?.length > 0 ?? false;\n}\n\n// https://gist.github.com/pinkhominid/fd4b13fc7db6a34812cf281e96ee2673\nfunction eventPathFindTargetMatch(event, selector) {\n  return event.composedPath().find(target => target.matches?.(selector));\n}\n\n// https://gist.github.com/pinkhominid/3f6106ba3a1a0b2b720e86c183e0bbe5\nfunction pascalize(str) {\n  return ` ${str}`.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase());\n}\n\nOmniElement.register('omni-toolbar', OmniToolbarElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-toolbar': OmniToolbarElement;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
