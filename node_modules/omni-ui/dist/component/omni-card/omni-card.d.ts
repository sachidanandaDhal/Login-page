import { OmniElement } from '../../omni-element.js';
import '../omni-style/omni-style.js';
import '../omni-icon/omni-icon.js';
import '../omni-loading-indicator/omni-loading-indicator.js';
/**
 * To include within your project `import { OmniCardElement } from 'omni-ui';`
 *
 * @tagname omni-card
 * @cssprop [--omni-card-min-width=200px]
 * @cssprop [--omni-card-max-width=240px]
 * @cssprop [--omni-card-height=312px]
 * @cssprop [--omni-card-font-size=11px]
 * @cssprop [--omni-card-title-font-size=16px]
 * @cssprop [--omni-card-img-height=185px]
 * @cssprop [--omni-card-icon-bubble-size=48px]
 * @cssprop [--omni-card-icon-bubble-ml=12px]
 * @cssprop [--omni-card-icon-size=21px]
 * @cssprop [--omni-card-p=17px]
 * @cssprop [--omni-card-footer-pr=11px]
 * @slot overlay-header - overlay header slot.
 * @slot overlay-content - overlay content slot.
 * @slot card-title - card title slot.
 * @slot card-type - card type slot.
 * @slot card-img - card image slot.
 * @slot card-icon - card icon slot.
 * @slot card-status - card status slot.
 * @slot card-time - card time slot.
 * @slot card-menu - card menu slot
 *
 */
export declare class OmniCardElement extends OmniElement {
    static get styles(): import("lit").CSSResult[];
    private focusTrapController;
    private focusTrapEl;
    private _hasMenu;
    /** url to follow on link icon click */
    href: string;
    /** target tab for card action */
    target: string;
    /** display the menu */
    menuOpen: boolean;
    /** display the edit icon */
    isEditable: boolean;
    /** display the overlay */
    showOverlay: boolean;
    /** display the loading indicator */
    isLoadingCard: boolean;
    /** message shown in tooltip content on hover control */
    openMsg: string;
    constructor();
    connectedCallback(): void;
    update(changedProps: any): void;
    disconnectedCallback(): void;
    _positionMenu(): void;
    _onMenuSlotChange(e: any): void;
    _onOpen(e: any): void;
    _onEdit(): void;
    _onMenuTriggerClick(): void;
    toggleMenu(open?: boolean): Promise<void>;
    closeMenu(): void;
    render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'omni-card': OmniCardElement;
    }
}
//# sourceMappingURL=omni-card.d.ts.map