{
  "version": 3,
  "sources": ["../../../lib/component/omni-card/omni-card.ts"],
  "sourcesContent": ["import { html, nothing } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { FocusTrapController } from '@vaadin/a11y-base';\nimport { OmniElement } from '../../omni-element.js';\nimport type { OmniTooltipElement } from '../omni-tooltip/omni-tooltip.js';\nimport '../omni-style/omni-style.js';\nimport '../omni-icon/omni-icon.js';\nimport '../omni-loading-indicator/omni-loading-indicator.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--omni-card-font-size: 11px;--omni-card-title-font-size: 16px;--omni-card-img-height: 185px;--omni-card-icon-bubble-size: 48px;--omni-card-icon-bubble-ml: 12px;--omni-card-icon-size: 21px;--omni-card-p: 17px;--omni-card-footer-pr: 11px;flex-grow:1;min-width:var(--omni-card-min-width, 200px);max-width:var(--omni-card-max-width, 240px)}.card{height:var(--omni-card-height, 312px)}.card>div{height:100%;position:relative}[name=card-img]{display:block;height:var(--omni-card-img-height);border:.5px solid #fff;border-radius:8px 8px 0 0;clip-path:polygon(0 0, 100% 0, 100% 100%, 0 75%)}[name=card-img]::slotted(img){width:100%;height:100% !important;object-fit:cover;object-position:center;border-radius:8px 8px 0 0}[name=card-icon]{position:absolute;top:calc(var(--omni-card-img-height)*.75 - var(--omni-card-icon-bubble-size)/2 + var(--omni-card-icon-bubble-ml)/2);margin-left:var(--omni-card-icon-bubble-ml);border:.5px solid #fff;border-radius:50%;width:var(--omni-card-icon-bubble-size);height:var(--omni-card-icon-bubble-size);background-image:linear-gradient(to bottom, rgba(255, 255, 255, 0.54), #edf0f5);-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px);display:flex;align-items:center;justify-content:center}[name=card-icon]::slotted(*){width:var(--omni-card-icon-size);height:var(--omni-card-icon-size);fill:var(--omni-card-icon-color, var(--color-electric-blue))}#card-content{padding:calc(var(--omni-card-p)/2) var(--omni-card-p)}[name=card-title]::slotted(*){font-weight:inherit !important}[name=card-title]::slotted(*),[name=card-type]::slotted(*),[name=card-desc]::slotted(*),[name=card-status]::slotted(*),[name=card-time]::slotted(*){display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[name=card-title]::slotted(*),[name=card-desc]::slotted(*){display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;white-space:normal}[name=card-desc]::slotted(*){-webkit-line-clamp:3}[name=card-desc]::slotted(*){opacity:.5}[name=card-type]{font-size:var(--omni-card-font-size);margin:0}[name=card-title]{font-size:var(--omni-card-title-font-size);line-height:1.25;margin:0}[name=card-content]>ul{list-style-type:none;display:flex}#card-footer{padding:var(--omni-card-p);padding-right:var(--omni-card-footer-pr);position:absolute;bottom:0;width:100%;display:flex}#card-footer .button{width:38px;padding:0}#card-footer .control:not(:last-child),#card-footer .toolbar-divider{margin-right:6px}#card-metadata{overflow:hidden}#card-footer .field.is-grouped{margin-left:auto}omni-tooltip>[slot=content]{white-space:nowrap}.omni .dropdown-menu{position:fixed;display:block;visibility:hidden;padding-bottom:4px}.dropdown.is-active>.dropdown-menu{visibility:visible}.overlay{display:flex;flex-direction:column;justify-content:flex-end;padding-bottom:75px;position:absolute;top:0;align-items:center;height:100%;width:100%;border-radius:8px;background-color:rgba(20,32,51,.85)}[name=overlay-header]{text-align:center;color:#fff;word-break:break-all;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}[name=overlay-content]{display:block;max-height:160px;overflow:hidden}.overlay-card-actions{z-index:1}#card-footer .overlay-card-actions omni-icon{fill:#fff}.overlay-card-actions .button:focus,.overlay-card-actions .button:hover,.overlay-card-actions .is-active{border-radius:8px;border-color:rgba(0,0,0,0) !important;background-color:#2f587a !important}.is-opacity-75{opacity:.75}#image-loading-container{position:absolute;top:0;width:100%;padding-top:66px}omni-loading-indicator{width:32px;margin:auto}`\n\n\n/**\n * To include within your project `import { OmniCardElement } from 'omni-ui';`\n *\n * @tagname omni-card\n * @cssprop [--omni-card-min-width=200px]\n * @cssprop [--omni-card-max-width=240px]\n * @cssprop [--omni-card-height=312px]\n * @cssprop [--omni-card-font-size=11px]\n * @cssprop [--omni-card-title-font-size=16px]\n * @cssprop [--omni-card-img-height=185px]\n * @cssprop [--omni-card-icon-bubble-size=48px]\n * @cssprop [--omni-card-icon-bubble-ml=12px]\n * @cssprop [--omni-card-icon-size=21px]\n * @cssprop [--omni-card-p=17px]\n * @cssprop [--omni-card-footer-pr=11px]\n * @slot overlay-header - overlay header slot.\n * @slot overlay-content - overlay content slot.\n * @slot card-title - card title slot.\n * @slot card-type - card type slot.\n * @slot card-img - card image slot.\n * @slot card-icon - card icon slot.\n * @slot card-status - card status slot.\n * @slot card-time - card time slot.\n * @slot card-menu - card menu slot\n *\n */\n\nexport class OmniCardElement extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  private focusTrapController = new FocusTrapController(this);\n  private focusTrapEl: HTMLElement;\n  @state() private _hasMenu: boolean = false;\n  /** url to follow on link icon click */\n  @property({ type: String }) href: string = '';\n  /** target tab for card action */\n  @property({ type: String, reflect: true }) target: string = '';\n  /** display the menu */\n  @property({ type: Boolean, reflect: true }) menuOpen: boolean = false;\n  /** display the edit icon */\n  @property({ type: Boolean, reflect: true }) isEditable: boolean = false;\n  /** display the overlay */\n  @property({ type: Boolean, reflect: true }) showOverlay: boolean = false;\n  /** display the loading indicator */\n  @property({ type: Boolean, reflect: true }) isLoadingCard: boolean = false;\n  /** message shown in tooltip content on hover control */\n  @property({ type: String }) openMsg: string = '';\n\n  constructor() {\n    super();\n    this.closeMenu = this.closeMenu.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('click', this.closeMenu);\n    window.addEventListener('resize', this.closeMenu);\n    window.addEventListener('scroll', this.closeMenu);\n    this.focusTrapController.hostConnected();\n  }\n\n  update(changedProps) {\n    // disable tooltip when menu is open\n    if (changedProps.has('menuOpen')) {\n      const menuTooltipEl: OmniTooltipElement = this.shadowRoot.querySelector('.dropdown-trigger omni-tooltip');\n      if (menuTooltipEl) {\n        const { menuOpen = false } = this;\n        menuTooltipEl.disabled = menuOpen;\n        if (menuOpen) menuTooltipEl.open = !menuOpen;\n      }\n    }\n    super.update(changedProps);\n  }\n\n  disconnectedCallback() {\n    window.removeEventListener('click', this.closeMenu);\n    window.removeEventListener('resize', this.closeMenu);\n    window.removeEventListener('scroll', this.closeMenu);\n    super.disconnectedCallback();\n    this.focusTrapController.hostDisconnected();\n    this.focusTrapController.releaseFocus();\n  }\n\n  _positionMenu() {\n    const trigger = this.shadowRoot.querySelector('.dropdown-trigger');\n    const triggerRect = trigger.getBoundingClientRect();\n    const menu: HTMLDivElement = this.shadowRoot.querySelector('.dropdown-menu');\n    const { clientWidth: docWidth, clientHeight: docHeight } = document.documentElement;\n\n    // position menu above trigger if it overflows window height\n    if (triggerRect.top + triggerRect.height + menu.offsetHeight > docHeight) {\n      menu.style.top = `${triggerRect.top - menu.offsetHeight}px`;\n    } else {\n      menu.style.top = `${triggerRect.top + triggerRect.height}px`;\n    }\n    // position menu left of trigger if it overflows window width\n    if (triggerRect.right + menu.offsetWidth > docWidth) {\n      menu.style.left = `${triggerRect.right - menu.offsetWidth}px`;\n    } else {\n      menu.style.left = `${triggerRect.left}px`;\n    }\n  }\n\n  _onMenuSlotChange(e) {\n    this._hasMenu = e.target.assignedElements().length > 0;\n  }\n\n  _onOpen(e) {\n    //@ts-ignore\n    const { cancelled } = this.dispatchNewEvent('open');\n    if (cancelled) e.preventDefault();\n  }\n\n  _onEdit() {\n    this.dispatchNewEvent('edit');\n  }\n\n  _onMenuTriggerClick() {\n    if (!this.menuOpen) {\n      // Opening menu\n      this._positionMenu();\n      // Let click even propagate up so all other menus close before opening this menu.\n      setTimeout(() => this.toggleMenu(true));\n    }\n    // Note: closing the menu is handled by the window click event listener\n  }\n\n  async toggleMenu(open = !this.menuOpen) {\n    this.menuOpen = open;\n    await this.updateComplete;\n    this.focusTrapEl = this.shadowRoot.querySelector('#menu-slot');\n    if (this.menuOpen) {\n      this.focusTrapController.trapFocus(this.focusTrapEl);\n    } else {\n      this.focusTrapController.releaseFocus();\n    }\n  }\n\n  closeMenu() {\n    this.toggleMenu(false);\n    // menu close can be used to close submenus if any\n    this.dispatchNewEvent('closeMenu');\n  }\n\n  render() {\n    return html`\n      <omni-style>\n        <article class=\"card transition-raise-hover\">\n          <div>\n            <slot name=\"card-img\" part=\"card-img\" class=\"${classMap({ 'is-opacity-75': this.isLoadingCard })}\"></slot>\n            <slot name=\"card-icon\" part=\"card-icon\"></slot>\n            <div id=\"card-content\">\n              <slot name=\"card-type\" class=\"has-text-grey\"></slot>\n              <slot name=\"card-title\" class=\"has-text-weight-bold\"></slot>\n              <slot name=\"card-desc\" class=\"is-size-6\"></slot>\n            </div>\n            <div id=\"card-footer\" part=\"card-footer\">\n              <div id=\"card-metadata\">\n                <slot name=\"card-status\" class=\"is-size-7 has-text-grey\"></slot>\n                <slot name=\"card-time\" class=\"is-size-7 has-text-weight-bold\"></slot>\n              </div>\n\n              <div class=\"field is-grouped ${classMap({ 'overlay-card-actions': this.showOverlay })}\">\n                <div class=\"control\" ?hidden=${!this.isEditable}>\n                  <omni-tooltip relateby=\"label\">\n                    <button slot=\"invoker\" class=\"button is-text is-shadowless\" @click=${this._onEdit}>\n                      <omni-icon class=\"is-size-2\" icon-id=\"omni:interactive:edit\"></omni-icon>\n                    </button>\n                    <div slot=\"content\">Edit</div>\n                  </omni-tooltip>\n                </div>\n                <div class=\"control\" ?hidden=${!this.href}>\n                  <omni-tooltip relateby=\"label\">\n                    <a\n                      slot=\"invoker\"\n                      class=\"button is-text is-shadowless\"\n                      href=${ifDefined(this.href)}\n                      target=${ifDefined(this.target ? this.target : undefined)}\n                      rel=${ifDefined(this.target ? 'noopener noreferrer' : undefined)}\n                      @click=${this._onOpen}>\n                      <omni-icon class=\"is-size-2\" icon-id=\"omni:interactive:launch\"></omni-icon>\n                    </a>\n                    <div slot=\"content\">\n                      ${this.openMsg\n                        ? this.openMsg\n                        : `Open in ${/^(?:|_parent|_top|_self)$/.test(this.target) ? 'App' : 'tab'}`}\n                    </div>\n                  </omni-tooltip>\n                </div>\n                <div\n                  class=\"toolbar-divider ${classMap({ 'is-invisible': this.showOverlay })}\"\n                  ?hidden=${!this.href || !this._hasMenu}></div>\n                <div class=\"control\" ?hidden=${!this._hasMenu}>\n                  <div class=\"dropdown ${classMap({ 'is-active': this.menuOpen })}\" justify=\"end\">\n                    <div class=\"dropdown-trigger\" slot=\"trigger\">\n                      <omni-tooltip relateby=\"label\">\n                        <button\n                          slot=\"invoker\"\n                          class=\"button is-text is-shadowless ${classMap({\n                            'is-active': this.menuOpen\n                          })}\"\n                          aria-haspopup=\"true\"\n                          aria-controls=\"dropdown-menu\"\n                          @click=${this._onMenuTriggerClick}>\n                          <omni-icon class=\"is-size-2\" icon-id=\"omni:interactive:actions\"></omni-icon>\n                        </button>\n                        <div slot=\"content\">More Actions</div>\n                      </omni-tooltip>\n                    </div>\n                    <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\" slot=\"menu\">\n                      <slot id=\"menu-slot\" name=\"card-menu\" @slotchange=${this._onMenuSlotChange}></slot>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            ${this.isLoadingCard\n              ? html` <div id=\"image-loading-container\" part=\"image-loading-container\">\n                  <omni-loading-indicator></omni-loading-indicator>\n                </div>`\n              : nothing}\n            <div class=\"overlay ${classMap({ 'is-hidden': !this.showOverlay })}\" part=\"overlay\">\n              <slot name=\"overlay-header\" part=\"overlay-header\"></slot>\n              <slot name=\"overlay-content\" part=\"overlay-content\"></slot>\n            </div>\n          </div>\n        </article>\n      </omni-style>\n    `;\n  }\n}\n\nOmniElement.register('omni-card', OmniCardElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-card': OmniCardElement;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
