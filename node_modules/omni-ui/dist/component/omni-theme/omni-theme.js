import { OmniElement } from "../../omni-element.js";
import { OmniStyleElement } from "../omni-style/omni-style.js";
class OmniThemeElement extends OmniStyleElement {
  static get defaultSelector() {
    return ".omni";
  }
  constructor() {
    super();
    this._themeListener = this._themeListener.bind(this);
  }
  get selector() {
    return (this.getAttribute("selector") || "").trim();
  }
  // @ts-ignore
  set selector(cssSelector = "") {
    return cssSelector.trim() ? this.setAttribute("selector", cssSelector) : this.removeAttribute("selector");
  }
  /* 
      @return {return} the theme-specific stylesheet that's inherited everywhere (document and shadowRoots) via omni-style
   */
  get styleSheet() {
    const { adoptedStyleSheets = [] } = this.ownerDocument;
    return adoptedStyleSheets[0] ?? null;
  }
  _formatRule([property, value]) {
    const name = this[property] ?? property;
    return `${name}:${value} !important;`;
  }
  _filterProperties([property]) {
    return property.startsWith("--");
  }
  _themeListener(event) {
    const { detail } = event;
    requestAnimationFrame(() => {
      const { selector, styleSheet } = this;
      const selectorMark = this.nodeName.toLowerCase() + (selector ? `[selector="${selector}"]` : "");
      const { rules } = styleSheet;
      for (let rule, i = rules.length; i--; i >= 0) {
        rule = rules[i];
        if (rule.selectorText?.includes(selectorMark)) {
          styleSheet.deleteRule(i);
          break;
        }
      }
      const { translate = {} } = detail;
      const cssRule = `${selectorMark}, ${selector || OmniThemeElement.defaultSelector}{${Object.entries(detail).filter(this._filterProperties).map(this._formatRule, translate).join(" ")}}`;
      styleSheet.insertRule(cssRule, styleSheet.rules.length);
    });
  }
  connectedCallback() {
    super.connectedCallback();
    self.addEventListener("omni-theme", this._themeListener);
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    self.removeEventListener("omni-theme", this._themeListener);
  }
}
OmniElement.register("omni-theme", OmniThemeElement);
export {
  OmniThemeElement
};
//# sourceMappingURL=omni-theme.js.map
