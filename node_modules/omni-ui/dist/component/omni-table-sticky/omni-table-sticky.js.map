{
  "version": 3,
  "sources": ["../../../lib/component/omni-table-sticky/omni-table-sticky.ts"],
  "sourcesContent": ["import { html, nothing, type TemplateResult } from 'lit';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\nimport { property, queryAsync, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { debounce } from '../../omni-util.js';\nimport type { KeyFn, Sort, TableColumn, TableData, TableRow } from '../omni-table/omni-table.js';\nimport { OmniTableElement } from '../omni-table/omni-table.js';\nOmniTableElement.register();\n\nimport {css} from 'lit';\nconst styles = css`:host{position:relative;background-color:#f5f8fb}:host([stickyside=right]){padding-left:1.2rem}:host([stickyside=left]){padding-right:1.2rem}.scroll-container{display:flex;position:relative;overflow:auto visible}omni-table{overflow:visible}omni-table::part(table){overflow:visible}omni-table::part(table-container){overflow:visible}.scroll-table{box-sizing:content-box;flex:0 0 100%;position:relative;z-index:1}.scroll-table.left::part(table){padding-right:0 !important;padding-left:0 !important}.scroll-table.left::part(table-body-row):hover{border-radius:0;transform:none !important}.scroll-table.left::part(td){border-top-right-radius:0;border-bottom-right-radius:0;border-right:none !important}.scroll-table.right::part(table){padding-left:0 !important;padding-right:0 !important}.scroll-table.right::part(table-body-row):hover{border-radius:0;transform:none !important}.scroll-table.right::part(td){border-top-left-radius:0;border-bottom-left-radius:0;border-left:0 !important}.sticky-table{position:absolute;top:0;z-index:2}.sticky-table.left{left:0;border-right:2px solid #f1f5fa}.sticky-table.left.shadow{clip-path:polygon(105% 0, 105% 100%, 0 100%, 0 0);box-shadow:rgba(10,10,10,.15) 5px 0 8px}.sticky-table.left::part(table){padding-right:0 !important}.sticky-table.left::part(table-body-row):hover{border-radius:0;transform:none !important}.sticky-table.left::part(td){border-top-right-radius:0;border-bottom-right-radius:0;border-right:none !important}.sticky-table.right{right:0;border-left:2px solid #f1f5fa}.sticky-table.right.shadow{clip-path:polygon(100% 0, 100% 100%, -5% 100%, -5% 0);box-shadow:-5px 0 8px rgba(10,10,10,.15)}.sticky-table.right::part(table){padding-left:0 !important}.sticky-table.right::part(table-body-row):hover{border-radius:0;transform:none !important}.sticky-table.right::part(td){border-top-left-radius:0;border-bottom-left-radius:0;border-left:0 !important}.sticky-scrollbar-container{display:block;bottom:0;z-index:3;overflow-x:scroll}.sticky-scrollbar-container .overflow{height:1px}.sticky-scrollbar-container::-webkit-scrollbar{height:14px;border-top:1px solid #e8e8e8;border-bottom:1px solid #e8e8e8;background:#fafafa}.sticky-scrollbar-container::-webkit-scrollbar-track{background-color:rgba(0,0,0,0)}.sticky-scrollbar-container::-webkit-scrollbar-thumb{background-color:#c7c7c7;border-radius:7px;height:14px;border:3px solid rgba(0,0,0,0);background-clip:padding-box}.sticky-scrollbar-container::-webkit-scrollbar-thumb:hover{background-color:#878787}`\n\n\n/**\n * To include within your project `import { OmniTableSticky } from 'omni-ui';`\n *\n * @tagname omni-table-sticky\n */\nexport class OmniTableSticky extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  #intersectionObserver: IntersectionObserver;\n  #resizeObserver: ResizeObserver;\n\n  @state() private _shouldShowShadow = false;\n  @state() private _scrollTablePadding = 0;\n  @state() private _stickyScrollbarStyles = {\n    width: '100%',\n    height: 'auto',\n    position: 'absolute',\n    'overflow-x': 'auto'\n  };\n\n  @state() private _stickyScrollBarOverflowWidth = 0;\n  @property({ type: String }) stickySide: 'left' | 'right' = 'right';\n  @property({ type: Array }) leftColumns: TableColumn[] = [];\n  @property({ type: Array }) rightColumns: TableColumn[] = [];\n  @property({ type: Boolean }) stickyScrollbar: boolean = false;\n\n  // passthrough props to omni-table\n  @property({ type: Array }) data: TableData = [];\n  @property({ type: Object }) sort: Sort | Record<string, unknown> = {};\n  @property({ type: Number }) nestedIndent: number;\n  @property({ attribute: false }) keyFn: KeyFn;\n  @property({ type: Boolean }) expandAllOnLoad: boolean = false;\n  @property({ type: Boolean }) hideNestedIndent: boolean = false;\n  // end passthrough props to omni-table\n\n  @queryAsync('#right-table') private _rightTableEl: Promise<OmniTableElement>;\n  @queryAsync('#left-table') private _leftTableEl: Promise<OmniTableElement>;\n  @queryAsync('.scroll-container') private _scrollContainerEl: Promise<HTMLDivElement>;\n\n  /**\n   * * the default must include both column configs in order to keep tracking in sync between the two tables\n   * * for example, `isMain` is included on the left columns, and not the right, but we want to key off of `isMain` for both\n   */\n  #defaultKeyFn = (row: TableRow): string | number | TableRow => {\n    const bothColumns = [...this.leftColumns, ...this.rightColumns];\n    const isMainKey = bothColumns.find(one => one.isMain)?.key;\n    const firstColumnKey = bothColumns.find(one => one.key)?.key;\n    return (row[isMainKey] as string | number) ?? (row[firstColumnKey] as string | number) ?? row;\n  };\n\n  constructor() {\n    super();\n    this.keyFn = this.#defaultKeyFn;\n  }\n\n  firstUpdated() {\n    this.#calcScrollTablePadding();\n    if (this.stickyScrollbar) {\n      this.#calcStickyScrollbarContainerWidth();\n      let isTopVisible = false;\n      let isBottomVisible = false;\n      let isThisVisible = false;\n      this.#intersectionObserver = new IntersectionObserver(\n        entries => {\n          entries.forEach(entry => {\n            if (entry.target.classList.contains('intersection-target-bottom')) {\n              isBottomVisible = entry.isIntersecting;\n            } else if (entry.target.classList.contains('intersection-target-top')) {\n              isTopVisible = entry.isIntersecting;\n            } else {\n              isThisVisible = entry.intersectionRatio > 0;\n            }\n            if (isTopVisible && !isBottomVisible) {\n              // show: can see only the top\n              this._stickyScrollbarStyles.height = 'auto';\n              this._stickyScrollbarStyles.position = 'fixed';\n              this._stickyScrollbarStyles['overflow-x'] = 'scroll';\n            } else if (isThisVisible && !isTopVisible && !isBottomVisible) {\n              // show: in the middle\n              this._stickyScrollbarStyles.height = 'auto';\n              this._stickyScrollbarStyles.position = 'fixed';\n              this._stickyScrollbarStyles['overflow-x'] = 'scroll';\n            } else if (!isTopVisible && isBottomVisible) {\n              // dont show: can see the bottom\n              this._stickyScrollbarStyles.height = '0';\n              this._stickyScrollbarStyles.position = 'absolute';\n              this._stickyScrollbarStyles['overflow-x'] = 'hidden';\n            } else {\n              // dont show\n              this._stickyScrollbarStyles.height = '0';\n              this._stickyScrollbarStyles.position = 'absolute';\n              this._stickyScrollbarStyles['overflow-x'] = 'hidden';\n            }\n          });\n          this.requestUpdate();\n        },\n        { threshold: [0, 1] }\n      );\n      this.#intersectionObserver.observe(this.shadowRoot.querySelector('.intersection-target-top'));\n      this.#intersectionObserver.observe(this.shadowRoot.querySelector('.intersection-target-bottom'));\n      this.#intersectionObserver.observe(this);\n      this.#resizeObserver = new ResizeObserver(() => {\n        this.#calcStickyScrollbarContainerWidth();\n      });\n      this.#resizeObserver.observe(this);\n    }\n  }\n\n  updated(changed: Map<string, unknown>) {\n    if (!changed.has('_scrollTablePadding')) {\n      this.#calcScrollTablePadding();\n    }\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    if (this.#intersectionObserver) {\n      this.#intersectionObserver.unobserve(this.shadowRoot.querySelector('.intersection-target-top'));\n      this.#intersectionObserver.unobserve(this.shadowRoot.querySelector('.intersection-target-bottom'));\n      this.#intersectionObserver.unobserve(this);\n    }\n    if (this.#resizeObserver) {\n      this.#resizeObserver.unobserve(this);\n    }\n  }\n\n  async #calcScrollTablePadding() {\n    const [leftTableEl, rightTableEl] = await Promise.all([this._leftTableEl, this._rightTableEl]);\n    const elToMeasure = this.stickySide === 'left' ? leftTableEl : rightTableEl;\n    if (elToMeasure) {\n      this._scrollTablePadding = Math.trunc(elToMeasure.getBoundingClientRect().width);\n    }\n  }\n\n  async #calcStickyScrollbarContainerWidth() {\n    if (!this.stickyScrollbar) return;\n    const [leftTableEl] = await Promise.all([this._leftTableEl, this._rightTableEl]);\n    const scrollContainerEl = await this._scrollContainerEl;\n    this._stickyScrollbarStyles = {\n      ...this._stickyScrollbarStyles,\n      width: scrollContainerEl.clientWidth + 'px'\n    };\n    this._stickyScrollBarOverflowWidth = leftTableEl.clientWidth;\n  }\n\n  /** debounced shadow hide after scrolling is stopped */\n  #hideShadow = debounce(() => {\n    this._shouldShowShadow = false;\n  }, 350);\n\n  #handleScrollContainerScroll(e: Event & { target: HTMLDivElement }) {\n    this._shouldShowShadow = true;\n    this.#hideShadow();\n    if (!this.stickyScrollbar) return;\n    this.shadowRoot.querySelector('.sticky-scrollbar-container').scrollLeft = e.target.scrollLeft;\n  }\n\n  #handleStickyScrollbarScroll(e: Event & { target: HTMLDivElement }) {\n    this.shadowRoot.querySelector('.scroll-container').scrollLeft = e.target.scrollLeft;\n  }\n\n  #wrapWithScrollContainer = (el: TemplateResult) => html`\n    <div class=\"scroll-container ${this.stickySide}\" @scroll=${this.#handleScrollContainerScroll}>${el}</div>\n  `;\n\n  #defaultTable = (columns: TableColumn[] = []) => html`\n    <omni-table\n      class=\"table\"\n      .columns=${columns}\n      .data=${this.data}\n      .sort=${this.sort}\n      .keyFn=${this.keyFn}\n      nestedIndent=${ifDefined(this.nestedIndent)}\n      .expandAllOnLoad=${this.expandAllOnLoad}>\n    </omni-table>\n  `;\n\n  #leftTable = (cssClasses = '') => html`\n    <omni-table\n      id=\"left-table\"\n      class=\"${cssClasses} ${this._shouldShowShadow ? 'shadow' : ''}\"\n      style=${this.stickySide === 'right' ? `padding-right: ${this._scrollTablePadding}px` : ''}\n      .columns=${this.leftColumns}\n      .data=${this.data}\n      .sort=${this.sort}\n      .keyFn=${this.keyFn}\n      nestedIndent=${ifDefined(this.nestedIndent)}\n      .expandAllOnLoad=${this.expandAllOnLoad}\n      @hover-row-enter=${({ detail }) => {\n        this._rightTableEl.then(el => el.hoverRow(detail));\n      }}\n      @hover-row-exit=${({ detail }) => {\n        this._rightTableEl.then(el => el.removeHoverRow(detail));\n      }}\n      @expand-or-collapse-rows=${({ detail }) => {\n        this._rightTableEl.then(el => el.toggleRowExpansion(detail));\n        this.#calcScrollTablePadding();\n      }}>\n    </omni-table>\n  `;\n\n  #rightTable = (cssClasses = '') => html`\n    <omni-table\n      id=\"right-table\"\n      class=\"${cssClasses} ${this._shouldShowShadow ? 'shadow' : ''}\"\n      style=${this.stickySide === 'left' ? `padding-left: ${this._scrollTablePadding}px` : ''}\n      .columns=${this.rightColumns}\n      .data=${this.data}\n      .sort=${this.sort}\n      .keyFn=${this.keyFn}\n      .hideNestedIndent=${true}\n      .expandAllOnLoad=${this.expandAllOnLoad}\n      @hover-row-enter=${({ detail }) => {\n        this._leftTableEl.then(el => el.hoverRow(detail));\n      }}\n      @hover-row-exit=${({ detail }) => {\n        this._leftTableEl.then(el => el.removeHoverRow(detail));\n      }}\n      @expand-or-collapse-rows=${({ detail }) => {\n        this._leftTableEl.then(el => el.toggleRowExpansion(detail));\n        this.#calcScrollTablePadding();\n      }}>\n    </omni-table>\n  `;\n\n  get #stickyScrollbarTemplate() {\n    return html`\n      <div\n        class=\"sticky-scrollbar-container\"\n        part=\"sticky-scrollbar\"\n        style=\"${styleMap(this._stickyScrollbarStyles)}\"\n        @scroll=${this.#handleStickyScrollbarScroll}>\n        <div class=\"overflow\" style=\"width: ${this._stickyScrollBarOverflowWidth}px\"></div>\n      </div>\n    `;\n  }\n\n  render() {\n    if (this.rightColumns.length === 0 || this.leftColumns.length === 0) {\n      const table =\n        this.rightColumns.length === 0 ? this.#defaultTable(this.leftColumns) : this.#defaultTable(this.rightColumns);\n      return table;\n    } else {\n      const leftTable =\n        this.stickySide === 'right'\n          ? this.#wrapWithScrollContainer(this.#leftTable('scroll-table left'))\n          : this.#leftTable('sticky-table left');\n      const rightTable =\n        this.stickySide === 'left'\n          ? this.#wrapWithScrollContainer(this.#rightTable('scroll-table right'))\n          : this.#rightTable('sticky-table right');\n      // prettier-ignore\n      return html`\n        ${this.stickyScrollbar\n          ? html`<div class=\"intersection-target-top\"></div>`\n          : nothing}\n        ${leftTable}\n        ${rightTable}\n        ${this.stickyScrollbar\n          ? html`\n            ${this.#stickyScrollbarTemplate}\n            <div class=\"intersection-target-bottom\"></div>`\n          : nothing}\n      `;\n    }\n  }\n}\n\nOmniElement.register('omni-table-sticky', OmniTableSticky);\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,MAAM,eAAoC;AACnD,SAAS,iBAAiB;AAC1B,SAAS,UAAU,YAAY,aAAa;AAC5C,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AAEzB,SAAS,wBAAwB;AACjC,iBAAiB,SAAS;AAE1B,SAAQ,WAAU;AAClB,MAAM,SAAS;AAQR,MAAM,wBAAwB,YAAY;AAAA,EA+C/C,cAAc;AACZ,UAAM;AAxCC,SAAQ,oBAAoB;AAC5B,SAAQ,sBAAsB;AAC9B,SAAQ,yBAAyB;AAAA,MACxC,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,cAAc;AAAA,IAChB;AAES,SAAQ,gCAAgC;AACrB,sBAA+B;AAChC,uBAA6B,CAAC;AAC9B,wBAA8B,CAAC;AAC7B,2BAA2B;AAG7B,gBAAkB,CAAC;AAClB,gBAAuC,CAAC;AAGvC,2BAA2B;AAC3B,4BAA4B;AAWzD;AAAA;AAAA;AAAA;AAAA,yBAAgB,CAAC,QAA8C;AAC7D,YAAM,cAAc,CAAC,GAAG,KAAK,aAAa,GAAG,KAAK,YAAY;AAC9D,YAAM,YAAY,YAAY,KAAK,SAAO,IAAI,MAAM,GAAG;AACvD,YAAM,iBAAiB,YAAY,KAAK,SAAO,IAAI,GAAG,GAAG;AACzD,aAAQ,IAAI,SAAS,KAA0B,IAAI,cAAc,KAAyB;AAAA,IAC5F;AAkGA;AAAA,uBAAc,SAAS,MAAM;AAC3B,WAAK,oBAAoB;AAAA,IAC3B,GAAG,GAAG;AAaN,oCAA2B,CAAC,OAAuB;AAAA,mCAClB,KAAK,UAAU,aAAa,KAAK,4BAA4B,IAAI,EAAE;AAAA;AAGpG,yBAAgB,CAAC,UAAyB,CAAC,MAAM;AAAA;AAAA;AAAA,iBAGlC,OAAO;AAAA,cACV,KAAK,IAAI;AAAA,cACT,KAAK,IAAI;AAAA,eACR,KAAK,KAAK;AAAA,qBACJ,UAAU,KAAK,YAAY,CAAC;AAAA,yBACxB,KAAK,eAAe;AAAA;AAAA;AAI3C,sBAAa,CAAC,aAAa,OAAO;AAAA;AAAA;AAAA,eAGrB,UAAU,IAAI,KAAK,oBAAoB,WAAW,EAAE;AAAA,cACrD,KAAK,eAAe,UAAU,kBAAkB,KAAK,mBAAmB,OAAO,EAAE;AAAA,iBAC9E,KAAK,WAAW;AAAA,cACnB,KAAK,IAAI;AAAA,cACT,KAAK,IAAI;AAAA,eACR,KAAK,KAAK;AAAA,qBACJ,UAAU,KAAK,YAAY,CAAC;AAAA,yBACxB,KAAK,eAAe;AAAA,yBACpB,CAAC,EAAE,OAAO,MAAM;AACjC,WAAK,cAAc,KAAK,QAAM,GAAG,SAAS,MAAM,CAAC;AAAA,IACnD,CAAC;AAAA,wBACiB,CAAC,EAAE,OAAO,MAAM;AAChC,WAAK,cAAc,KAAK,QAAM,GAAG,eAAe,MAAM,CAAC;AAAA,IACzD,CAAC;AAAA,iCAC0B,CAAC,EAAE,OAAO,MAAM;AACzC,WAAK,cAAc,KAAK,QAAM,GAAG,mBAAmB,MAAM,CAAC;AAC3D,WAAK,wBAAwB;AAAA,IAC/B,CAAC;AAAA;AAAA;AAIL,uBAAc,CAAC,aAAa,OAAO;AAAA;AAAA;AAAA,eAGtB,UAAU,IAAI,KAAK,oBAAoB,WAAW,EAAE;AAAA,cACrD,KAAK,eAAe,SAAS,iBAAiB,KAAK,mBAAmB,OAAO,EAAE;AAAA,iBAC5E,KAAK,YAAY;AAAA,cACpB,KAAK,IAAI;AAAA,cACT,KAAK,IAAI;AAAA,eACR,KAAK,KAAK;AAAA,0BACC,IAAI;AAAA,yBACL,KAAK,eAAe;AAAA,yBACpB,CAAC,EAAE,OAAO,MAAM;AACjC,WAAK,aAAa,KAAK,QAAM,GAAG,SAAS,MAAM,CAAC;AAAA,IAClD,CAAC;AAAA,wBACiB,CAAC,EAAE,OAAO,MAAM;AAChC,WAAK,aAAa,KAAK,QAAM,GAAG,eAAe,MAAM,CAAC;AAAA,IACxD,CAAC;AAAA,iCAC0B,CAAC,EAAE,OAAO,MAAM;AACzC,WAAK,aAAa,KAAK,QAAM,GAAG,mBAAmB,MAAM,CAAC;AAC1D,WAAK,wBAAwB;AAAA,IAC/B,CAAC;AAAA;AAAA;AAzKH,SAAK,QAAQ,KAAK;AAAA,EACpB;AAAA,EAjDA,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAEA;AAAA,EACA;AAAA,EAkCA;AAAA,EAYA,eAAe;AACb,SAAK,wBAAwB;AAC7B,QAAI,KAAK,iBAAiB;AACxB,WAAK,mCAAmC;AACxC,UAAI,eAAe;AACnB,UAAI,kBAAkB;AACtB,UAAI,gBAAgB;AACpB,WAAK,wBAAwB,IAAI;AAAA,QAC/B,aAAW;AACT,kBAAQ,QAAQ,WAAS;AACvB,gBAAI,MAAM,OAAO,UAAU,SAAS,4BAA4B,GAAG;AACjE,gCAAkB,MAAM;AAAA,YAC1B,WAAW,MAAM,OAAO,UAAU,SAAS,yBAAyB,GAAG;AACrE,6BAAe,MAAM;AAAA,YACvB,OAAO;AACL,8BAAgB,MAAM,oBAAoB;AAAA,YAC5C;AACA,gBAAI,gBAAgB,CAAC,iBAAiB;AAEpC,mBAAK,uBAAuB,SAAS;AACrC,mBAAK,uBAAuB,WAAW;AACvC,mBAAK,uBAAuB,YAAY,IAAI;AAAA,YAC9C,WAAW,iBAAiB,CAAC,gBAAgB,CAAC,iBAAiB;AAE7D,mBAAK,uBAAuB,SAAS;AACrC,mBAAK,uBAAuB,WAAW;AACvC,mBAAK,uBAAuB,YAAY,IAAI;AAAA,YAC9C,WAAW,CAAC,gBAAgB,iBAAiB;AAE3C,mBAAK,uBAAuB,SAAS;AACrC,mBAAK,uBAAuB,WAAW;AACvC,mBAAK,uBAAuB,YAAY,IAAI;AAAA,YAC9C,OAAO;AAEL,mBAAK,uBAAuB,SAAS;AACrC,mBAAK,uBAAuB,WAAW;AACvC,mBAAK,uBAAuB,YAAY,IAAI;AAAA,YAC9C;AAAA,UACF,CAAC;AACD,eAAK,cAAc;AAAA,QACrB;AAAA,QACA,EAAE,WAAW,CAAC,GAAG,CAAC,EAAE;AAAA,MACtB;AACA,WAAK,sBAAsB,QAAQ,KAAK,WAAW,cAAc,0BAA0B,CAAC;AAC5F,WAAK,sBAAsB,QAAQ,KAAK,WAAW,cAAc,6BAA6B,CAAC;AAC/F,WAAK,sBAAsB,QAAQ,IAAI;AACvC,WAAK,kBAAkB,IAAI,eAAe,MAAM;AAC9C,aAAK,mCAAmC;AAAA,MAC1C,CAAC;AACD,WAAK,gBAAgB,QAAQ,IAAI;AAAA,IACnC;AAAA,EACF;AAAA,EAEA,QAAQ,SAA+B;AACrC,QAAI,CAAC,QAAQ,IAAI,qBAAqB,GAAG;AACvC,WAAK,wBAAwB;AAAA,IAC/B;AAAA,EACF;AAAA,EAEA,uBAA6B;AAC3B,UAAM,qBAAqB;AAC3B,QAAI,KAAK,uBAAuB;AAC9B,WAAK,sBAAsB,UAAU,KAAK,WAAW,cAAc,0BAA0B,CAAC;AAC9F,WAAK,sBAAsB,UAAU,KAAK,WAAW,cAAc,6BAA6B,CAAC;AACjG,WAAK,sBAAsB,UAAU,IAAI;AAAA,IAC3C;AACA,QAAI,KAAK,iBAAiB;AACxB,WAAK,gBAAgB,UAAU,IAAI;AAAA,IACrC;AAAA,EACF;AAAA,EAEA,MAAM,0BAA0B;AAC9B,UAAM,CAAC,aAAa,YAAY,IAAI,MAAM,QAAQ,IAAI,CAAC,KAAK,cAAc,KAAK,aAAa,CAAC;AAC7F,UAAM,cAAc,KAAK,eAAe,SAAS,cAAc;AAC/D,QAAI,aAAa;AACf,WAAK,sBAAsB,KAAK,MAAM,YAAY,sBAAsB,EAAE,KAAK;AAAA,IACjF;AAAA,EACF;AAAA,EAEA,MAAM,qCAAqC;AACzC,QAAI,CAAC,KAAK;AAAiB;AAC3B,UAAM,CAAC,WAAW,IAAI,MAAM,QAAQ,IAAI,CAAC,KAAK,cAAc,KAAK,aAAa,CAAC;AAC/E,UAAM,oBAAoB,MAAM,KAAK;AACrC,SAAK,yBAAyB;AAAA,MAC5B,GAAG,KAAK;AAAA,MACR,OAAO,kBAAkB,cAAc;AAAA,IACzC;AACA,SAAK,gCAAgC,YAAY;AAAA,EACnD;AAAA,EAGA;AAAA,EAIA,6BAA6B,GAAuC;AAClE,SAAK,oBAAoB;AACzB,SAAK,YAAY;AACjB,QAAI,CAAC,KAAK;AAAiB;AAC3B,SAAK,WAAW,cAAc,6BAA6B,EAAE,aAAa,EAAE,OAAO;AAAA,EACrF;AAAA,EAEA,6BAA6B,GAAuC;AAClE,SAAK,WAAW,cAAc,mBAAmB,EAAE,aAAa,EAAE,OAAO;AAAA,EAC3E;AAAA,EAEA;AAAA,EAIA;AAAA,EAYA;AAAA,EAwBA;AAAA,EAwBA,IAAI,2BAA2B;AAC7B,WAAO;AAAA;AAAA;AAAA;AAAA,iBAIM,SAAS,KAAK,sBAAsB,CAAC;AAAA,kBACpC,KAAK,4BAA4B;AAAA,8CACL,KAAK,6BAA6B;AAAA;AAAA;AAAA,EAG9E;AAAA,EAEA,SAAS;AACP,QAAI,KAAK,aAAa,WAAW,KAAK,KAAK,YAAY,WAAW,GAAG;AACnE,YAAM,QACJ,KAAK,aAAa,WAAW,IAAI,KAAK,cAAc,KAAK,WAAW,IAAI,KAAK,cAAc,KAAK,YAAY;AAC9G,aAAO;AAAA,IACT,OAAO;AACL,YAAM,YACJ,KAAK,eAAe,UAChB,KAAK,yBAAyB,KAAK,WAAW,mBAAmB,CAAC,IAClE,KAAK,WAAW,mBAAmB;AACzC,YAAM,aACJ,KAAK,eAAe,SAChB,KAAK,yBAAyB,KAAK,YAAY,oBAAoB,CAAC,IACpE,KAAK,YAAY,oBAAoB;AAE3C,aAAO;AAAA,UACH,KAAK,kBACH,oDACA,OAAO;AAAA,UACT,SAAS;AAAA,UACT,UAAU;AAAA,UACV,KAAK,kBACH;AAAA,cACE,KAAK,wBAAwB;AAAA,8DAE/B,OAAO;AAAA;AAAA,IAEf;AAAA,EACF;AACF;AA/PmB;AAAA,EAAhB,MAAM;AAAA,GARI,gBAQM;AACA;AAAA,EAAhB,MAAM;AAAA,GATI,gBASM;AACA;AAAA,EAAhB,MAAM;AAAA,GAVI,gBAUM;AAOA;AAAA,EAAhB,MAAM;AAAA,GAjBI,gBAiBM;AACW;AAAA,EAA3B,SAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GAlBf,gBAkBiB;AACD;AAAA,EAA1B,SAAS,EAAE,MAAM,MAAM,CAAC;AAAA,GAnBd,gBAmBgB;AACA;AAAA,EAA1B,SAAS,EAAE,MAAM,MAAM,CAAC;AAAA,GApBd,gBAoBgB;AACE;AAAA,EAA5B,SAAS,EAAE,MAAM,QAAQ,CAAC;AAAA,GArBhB,gBAqBkB;AAGF;AAAA,EAA1B,SAAS,EAAE,MAAM,MAAM,CAAC;AAAA,GAxBd,gBAwBgB;AACC;AAAA,EAA3B,SAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GAzBf,gBAyBiB;AACA;AAAA,EAA3B,SAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GA1Bf,gBA0BiB;AACI;AAAA,EAA/B,SAAS,EAAE,WAAW,MAAM,CAAC;AAAA,GA3BnB,gBA2BqB;AACH;AAAA,EAA5B,SAAS,EAAE,MAAM,QAAQ,CAAC;AAAA,GA5BhB,gBA4BkB;AACA;AAAA,EAA5B,SAAS,EAAE,MAAM,QAAQ,CAAC;AAAA,GA7BhB,gBA6BkB;AAGO;AAAA,EAAnC,WAAW,cAAc;AAAA,GAhCf,gBAgCyB;AACD;AAAA,EAAlC,WAAW,aAAa;AAAA,GAjCd,gBAiCwB;AACM;AAAA,EAAxC,WAAW,mBAAmB;AAAA,GAlCpB,gBAkC8B;AAuO3C,YAAY,SAAS,qBAAqB,eAAe;",
  "names": []
}
