{
  "version": 3,
  "sources": ["../../../lib/component/omni-chip/omni-chip.ts"],
  "sourcesContent": ["import { type CSSResult, html, nothing } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--chip-background: var(--white);--color-icon-override: var(--color-icon-lines);--cursor-state: not-allowed}:host(:not([disabled]):hover){--color-icon-override: var(--color-primary);--cursor-state: pointer}:host([blue]){--chip-background: #daf4fc}:host([disabled]:hover),:host([disabled]){--chip-background: var(--white);--cursor-state: not-allowed;opacity:50%;cursor:not-allowed}.chip{color:var(--color-core-dark);display:inline-flex;justify-content:space-between;align-items:center;white-space:nowrap;margin-right:0.2857142857rem;padding:0.2857142857rem 0.8571428571rem;background-color:var(--chip-background);border-radius:0.2142857143rem}.chip omni-icon{cursor:var(--cursor-state);min-width:1rem;min-height:1rem;margin-left:1.0714285714rem;--color-icon-lines: var(--color-icon-override)}.chip ::slotted(omni-icon){cursor:var(--cursor-state);min-width:1rem;min-height:1rem;margin-left:1.0714285714rem;--color-icon-lines: var(--color-icon-override)}`\n\n\n/**\n * An informative chip component with optional action icon\n *\n * To include within your project `import { OmniChipElement } from 'omni-ui';`\n *\n * @tagname omni-chip\n * @cssprop [--color-icon-override=#3b3e3f] - specify slotted or unslotted icon fill color\n * @event {CustomEvent<string>} remove - fires when the chip action icon is clicked\n * @slot - default slot for action icon\n */\nexport class OmniChipElement extends OmniElement {\n  static get styles(): CSSResult[] {\n    return [...super.styles, styles];\n  }\n\n  /** label for omni chip */\n  @property({ type: String, reflect: true }) label: string = 'Label';\n  /** display action icon for chip (default is remove icon) */\n  @property({ type: Boolean, reflect: true, attribute: true }) action: boolean = false;\n  /** disable the omni chip */\n  @property({ type: Boolean, reflect: true, attribute: true }) disabled: boolean = false;\n  /** display the blue variant style */\n  @property({ type: Boolean, reflect: true, attribute: true }) blue: boolean = false;\n\n  #onClick() {\n    this.dispatchNewEvent('remove', { detail: this.label });\n  }\n\n  render() {\n    return html`\n      <div class=\"chip\" part=\"chip\">\n        ${this.label}\n        ${this.action\n          ? html`\n              <slot @click=${this.#onClick}>\n                <omni-icon icon-id=\"omni:interactive:remove\"></omni-icon>\n              </slot>\n            `\n          : nothing}\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\nOmniElement.register('omni-chip', OmniChipElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-chip': OmniChipElement;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAyB,MAAM,eAAe;AAC9C,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAE5B,SAAQ,WAAU;AAClB,MAAM,SAAS;AAaR,MAAM,wBAAwB,YAAY;AAAA,EAA1C;AAAA;AAMsC,iBAAgB;AAEE,kBAAkB;AAElB,oBAAoB;AAEpB,gBAAgB;AAAA;AAAA,EAX7E,WAAW,SAAsB;AAC/B,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAWA,WAAW;AACT,SAAK,iBAAiB,UAAU,EAAE,QAAQ,KAAK,MAAM,CAAC;AAAA,EACxD;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA,UAED,KAAK,KAAK;AAAA,UACV,KAAK,SACH;AAAA,6BACiB,KAAK,QAAQ;AAAA;AAAA;AAAA,gBAI9B,OAAO;AAAA;AAAA;AAAA;AAAA,EAIjB;AACF;AA3B6C;AAAA,EAA1C,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAN9B,gBAMgC;AAEkB;AAAA,EAA5D,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM,WAAW,KAAK,CAAC;AAAA,GARhD,gBAQkD;AAEA;AAAA,EAA5D,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM,WAAW,KAAK,CAAC;AAAA,GAVhD,gBAUkD;AAEA;AAAA,EAA5D,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM,WAAW,KAAK,CAAC;AAAA,GAZhD,gBAYkD;AAuB/D,YAAY,SAAS,aAAa,eAAe;",
  "names": []
}
