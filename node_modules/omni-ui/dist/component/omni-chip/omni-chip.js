var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
import { html, nothing } from "lit";
import { property } from "lit/decorators.js";
import { OmniElement } from "../../omni-element.js";
import { css } from "lit";
const styles = css`:host{--chip-background: var(--white);--color-icon-override: var(--color-icon-lines);--cursor-state: not-allowed}:host(:not([disabled]):hover){--color-icon-override: var(--color-primary);--cursor-state: pointer}:host([blue]){--chip-background: #daf4fc}:host([disabled]:hover),:host([disabled]){--chip-background: var(--white);--cursor-state: not-allowed;opacity:50%;cursor:not-allowed}.chip{color:var(--color-core-dark);display:inline-flex;justify-content:space-between;align-items:center;white-space:nowrap;margin-right:0.2857142857rem;padding:0.2857142857rem 0.8571428571rem;background-color:var(--chip-background);border-radius:0.2142857143rem}.chip omni-icon{cursor:var(--cursor-state);min-width:1rem;min-height:1rem;margin-left:1.0714285714rem;--color-icon-lines: var(--color-icon-override)}.chip ::slotted(omni-icon){cursor:var(--cursor-state);min-width:1rem;min-height:1rem;margin-left:1.0714285714rem;--color-icon-lines: var(--color-icon-override)}`;
class OmniChipElement extends OmniElement {
  constructor() {
    super(...arguments);
    this.label = "Label";
    this.action = false;
    this.disabled = false;
    this.blue = false;
  }
  static get styles() {
    return [...super.styles, styles];
  }
  #onClick() {
    this.dispatchNewEvent("remove", { detail: this.label });
  }
  render() {
    return html`
      <div class="chip" part="chip">
        ${this.label}
        ${this.action ? html`
              <slot @click=${this.#onClick}>
                <omni-icon icon-id="omni:interactive:remove"></omni-icon>
              </slot>
            ` : nothing}
        <slot></slot>
      </div>
    `;
  }
}
__decorateClass([
  property({ type: String, reflect: true })
], OmniChipElement.prototype, "label", 2);
__decorateClass([
  property({ type: Boolean, reflect: true, attribute: true })
], OmniChipElement.prototype, "action", 2);
__decorateClass([
  property({ type: Boolean, reflect: true, attribute: true })
], OmniChipElement.prototype, "disabled", 2);
__decorateClass([
  property({ type: Boolean, reflect: true, attribute: true })
], OmniChipElement.prototype, "blue", 2);
OmniElement.register("omni-chip", OmniChipElement);
export {
  OmniChipElement
};
//# sourceMappingURL=omni-chip.js.map
