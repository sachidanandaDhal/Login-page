{
  "version": 3,
  "sources": ["../../../lib/component/omni-options/omni-options.ts"],
  "sourcesContent": ["import { html, nothing, type TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { OmniElement } from '../../omni-element.js';\nimport '../omni-checkbox/omni-checkbox.js';\nimport { type Option, isGroupHeader } from '../omni-dropdown/omni-dropdown.types.js';\nimport '../omni-icon/omni-icon.js';\nimport '../omni-tooltip/omni-tooltip.js';\n\nimport {css} from 'lit';\nconst styles = css`.item{min-height:2.5714285714rem;padding:.5357142857rem .8571428571rem .5357142857rem .8571428571rem;margin:0 0 .2142857143rem 0;user-select:none;display:flex;flex-grow:1;align-items:flex-start;justify-content:flex-start}.item:last-child{margin-bottom:0}.item:hover{background-color:var(--white);outline:none}.item:focus,.item:active{background:linear-gradient(136.75deg, rgba(var(--rgb-primary), 0.14) 28.19%, rgba(var(--rgb-primary), 0.14) 109.31%);outline:none}.item:not(.disabled):hover omni-checkbox{--checkbox-border-color: var(--color-primary)}.item label{color:#3b3e3f;pointer-events:none;font-size:1rem;font-style:normal;font-weight:400;line-height:1.3571428571rem;letter-spacing:.0030714286rem}.item .item-gutter{display:flex;flex-direction:column;justify-content:center;align-items:center;min-width:1.5714285714rem;max-width:1.5714285714rem;min-height:1.4285714286rem;max-height:1.4285714286rem;padding:0 .7142857143rem 0 0}.item .item-gutter omni-icon{--color-icon-lines: var(--color-primary);height:1.1428571429rem;width:1.1428571429rem;max-height:100%}.item.disabled{cursor:not-allowed}.item.disabled:hover{background:rgba(0,0,0,0)}.item.disabled:focus,.item.disabled:active{outline:none;background:rgba(0,0,0,0)}.item.disabled label{color:#a2a9ad !important}:host([hasgroupheaders]) .item.groupheader span{color:#a2a9ad !important;font-weight:600}:host([hasgroupheaders]) .item.groupheader .item-gutter{display:flex;flex-direction:column;justify-content:flex-end;align-items:center;min-width:.2857142857rem;max-width:.2857142857rem;min-height:1.4285714286rem;max-height:1.4285714286rem;padding:0}:host([hasgroupheaders]) .item.groupheader.disabled{cursor:default}:host([hasgroupheaders]) .item:not(.groupheader) .item-gutter{display:flex;flex-direction:column;justify-content:center;align-items:center;min-width:2.4285714286rem;max-width:2.4285714286rem;min-height:1.4285714286rem;max-height:1.4285714286rem;padding:0}`\n\n\nexport class OmniOptions extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  @property({ type: Array }) options: Option[];\n  @property({ type: Boolean }) multiselect: boolean = false;\n  @property({ type: String }) disabledMessage: string;\n  @property({ type: Object }) disabledList: Set<Option>;\n  @property({ type: Object }) selected: Set<Option>;\n\n  #toDisplayValue(option: Option) {\n    return option && typeof option === 'object' ? option.value : option;\n  }\n\n  #getOptionId(option: Option, index: number) {\n    switch (typeof option) {\n      case 'object':\n        return option.id ?? '_' + index;\n      case 'string':\n        return option;\n      default:\n        return option;\n    }\n  }\n\n  #handleSelectChange(option: Option) {\n    if (this.disabledList?.has(option)) return;\n    this.dispatchNewEvent('selectChange', { detail: option });\n  }\n\n  #handleEnterOnItem(event: KeyboardEvent, option: Option) {\n    this.dispatchNewEvent('enterOnItem', { detail: { value: option, eventKey: event.key } });\n  }\n\n  async firstUpdated() {\n    if (!this.options.some((option: Option) => typeof option === 'object' && option?.attributes)) return;\n    const eleRef = this.shadowRoot.querySelectorAll('.item');\n    this.options.forEach((option: Option, index) => {\n      if (typeof option === 'object' && option?.attributes) {\n        option.attributes.forEach(attr => {\n          switch (typeof attr) {\n            case 'string':\n              eleRef[index].setAttribute(attr, '');\n              break;\n            case 'object':\n              eleRef[index].setAttribute(attr.key, attr.value);\n              break;\n          }\n        });\n      }\n    });\n  }\n\n  #optionListItem = (option: Option, index: number) => {\n    const _classes = classMap({\n      item: true,\n      selected: this.selected?.has(option),\n      disabled: this.disabledList?.has(option),\n      groupheader: isGroupHeader(option)\n    });\n    const baseItem = (slot: string = null): TemplateResult => html`\n      <div\n        class=${_classes}\n        slot=\"${slot}\"\n        tabindex=${!this.multiselect && !this.disabledList?.has(option) ? 0 : -1}\n        @click=${() => this.#handleSelectChange(option)}\n        @keyup=${(e: KeyboardEvent) => this.#handleEnterOnItem(e, option)}>\n        <span class=\"item-gutter\">\n          ${this.multiselect && !isGroupHeader(option)\n            ? html`<omni-checkbox\n                tabindex=\"0\"\n                id=${this.#getOptionId(option, index)}\n                ?disabled=${this.disabledList?.has(option)}\n                ?checked=\"${this.selected?.has(option)}\"\n                @change=${(e: CustomEvent) => e.stopPropagation()}></omni-checkbox>`\n            : nothing}\n          ${!this.multiselect && this.selected?.has(option)\n            ? html`<omni-icon icon-id=\"icon:informative:check\" class=\"is-size-6\"></omni-icon>`\n            : nothing}\n        </span>\n        <label for=\"${this.#getOptionId(option, index)}\">${this.#toDisplayValue(option)}</label>\n      </div>\n    `;\n    if (this.disabledList?.has(option) && this.disabledMessage) {\n      return html`\n        <omni-tooltip>\n          ${baseItem('invoker')}\n          <div slot=\"content\">${this.disabledMessage}</div>\n        </omni-tooltip>\n      `;\n    } else {\n      return baseItem();\n    }\n  };\n\n  render() {\n    return this.options.map(this.#optionListItem);\n  }\n}\nOmniElement.register('omni-options', OmniOptions);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-options': OmniOptions;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
