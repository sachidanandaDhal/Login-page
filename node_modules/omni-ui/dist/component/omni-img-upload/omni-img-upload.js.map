{
  "version": 3,
  "sources": ["../../../lib/component/omni-img-upload/omni-img-upload.ts"],
  "sourcesContent": ["import 'element-internals-polyfill';\nimport { html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { when } from 'lit/directives/when.js';\nimport { defaultUploadImg } from '../../assets/img-upload-default.js';\nimport type { IElementInternalsBase } from '../../element-internals-base.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { OmniImageInputElement } from '../omni-img-input/omni-img-input.js';\n\n\nimport {css} from 'lit';\nconst styles = css`:host{--bg-color: var(--color-white);border:none}:host([disabled]){opacity:.3;cursor:not-allowed}:host([disabled]) div{pointer-events:none}omni-style{height:100%}div{display:grid;grid-template-rows:repeat(3, 1fr);grid-template-columns:repeat(3, 1fr);place-items:center;width:100%;height:100%}.omni svg,.omni img{pointer-events:none;grid-area:1/1/4/4;width:100%;height:100%}div.cover{grid-area:1/1/4/4;background-color:#fff;opacity:.7}omni-icon{width:100%;height:100%;grid-column-start:2;grid-row-start:2;cursor:pointer;z-index:1}omni-icon:hover{transition:fill .3s ease;--color-icon-lines: var(--color-electric-blue)}omni-tooltip{grid-column-start:2}.offset-left{margin-left:-50%;margin-right:50%}.offset-right{margin-right:-50%;margin-left:50%}.tooltip-container{position:relative}.tooltip{position:absolute;top:0;left:0}#arrow{top:-4px;left:37.5px}[type=file]{display:none}`\n\n\n/**\n * Circular input control to upload and display image files\n *\n * To include within your project `import { OmniImgUploadElement } from 'omni-ui';`\n *\n * ```html\n * <omni-img-upload></omni-img-upload>\n * ```\n * @tagname omni-img-upload\n * @attr { boolean } disabled - disable the input from user interaction\n * @event {CustomEvent<string>} change - fires when the image is changed\n */\nexport class OmniImgUploadElement extends OmniImageInputElement implements IElementInternalsBase<string> {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  static formAssociated = true;\n  /**@internal */\n  _internals: ElementInternals = this.attachInternals();\n  /**@internal */\n  @state() private isHidden = true;\n  /** name attribute for form association */\n  @property({ type: String }) name: string;\n  /** the name of the file */\n  @property({ type: String }) filename: string;\n  /** specify the height of the icon */\n  @property({ type: Number, reflect: true }) height = 70;\n  /** specify the width of the icon */\n  @property({ type: Number, reflect: true }) width = 70;\n  /** the path to the image url */\n  @property({ type: String, reflect: true, attribute: 'img' }) imgSrc: string = '';\n  /** Invalid form element error message */\n  @property({ type: String }) valueMissingMessage = 'Please select an image';\n  /** use a different name here for fileInputEl than super, to skip adding form states in super methods */\n  /** @internal */\n  @query('input[type=\"file\"]') private _fileInputElNoValidate: HTMLInputElement;\n  /** use as a target for the HTML5 tooltip */\n  /** @internal */\n  @query('div') private _imageIconEl: HTMLDivElement;\n\n  /** @internal */\n  get valid() {\n    return this._internals.checkValidity();\n  }\n\n  /**\n   * value behavior for file input element\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#value\n   */\n  /** @internal */\n  get value(): string {\n    if (this._fileInputElNoValidate?.value) {\n      return this._fileInputElNoValidate.value;\n    }\n    if (this.imgSrc) {\n      const segments = this.imgSrc.split('/');\n      const fileNameWithType = segments.pop();\n      const [fileName, fileType] = fileNameWithType.split('.');\n      return `C:\\\\fakepath\\\\${fileName}.${fileType}`;\n    }\n    return '';\n  }\n\n  /** @internal */\n  set value(value: string) {\n    console.error('value cannot be set. set through img property');\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.tabIndex = !this.disabled ? 0 : -1;\n  }\n\n  /** @internal */\n  async initializeFiles(imgSrc?: string): Promise<void> {\n    await super.initializeFiles(imgSrc);\n    if (Object.keys(this._files).length) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const [key, value] = Object.entries(this._files)[0];\n      this.filename = value.file.name;\n      this._internals.setFormValue(value.file);\n    }\n  }\n\n  async firstUpdated() {\n    await this.updateComplete;\n    if (this.required && !this.imgSrc) {\n      this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this._imageIconEl);\n    } else if (this.imgSrc) {\n      await this.initializeFiles(this.imgSrc);\n    } else {\n      this._internals.setValidity({});\n    }\n  }\n\n  willUpdate(changed: Map<string, unknown>) {\n    if (changed.has('multiple')) {\n      if (this.multiple) {\n        console.warn('omni-img-upload does not support multiple files');\n      }\n      this.multiple = false;\n    }\n  }\n\n  /** @internal */\n  #handleHoverEvent(which: 'enter' | 'exit') {\n    this.isHidden = which === 'exit';\n  }\n\n  /** @internal */\n  #onUploadClick() {\n    this._fileInputElNoValidate.click();\n  }\n\n  /** @internal */\n  get #noUploadTemplate() {\n    return html`\n      ${defaultUploadImg(html)}\n      <omni-icon part=\"upload-icon\" icon-id=\"omni:interactive:plus\" @click=${this.#onUploadClick}> </omni-icon>\n    `;\n  }\n\n  /** @internal */\n  #onDeleteClick() {\n    this.reset();\n    this.dispatchNewEvent('change', { detail: { file: null } });\n  }\n\n  /** @internal */\n  get #uploadedTemplate() {\n    const classes = { 'is-hidden': this.isHidden };\n    return html`\n      <img class=\"image is-rounded\" src=${this.imgSrc} alt=\"Uploaded from ${this.imgSrc}\" />\n      <div class=\"cover ${classMap(classes)}\">\n        <omni-icon part=\"upload-icon\" icon-id=\"omni:interactive:edit\" class=\"offset-left\" @click=${this.#onUploadClick}>\n        </omni-icon>\n        <omni-icon\n          part=\"delete-icon\"\n          icon-id=\"omni:interactive:delete\"\n          class=\"offset-right\"\n          @click=${this.#onDeleteClick}>\n        </omni-icon>\n      </div>\n    `;\n  }\n\n  /**@internal */\n  async #onFileChange(e: Event & { target: HTMLInputElement }): Promise<void> {\n    if (!e.target.files.length) {\n      // no need to set files back on the input el after cancel, when using element internals\n      return;\n    }\n    this._files = {};\n    this._addFilesToOmniFileList(e.target.files);\n    await this._processInvalidFiles();\n    // in the case of file is invalid, this._files will be empty, so we need to check for length\n    if (Object.keys(this._files).length > 0) {\n      const [key, value] = Object.entries(this._files)[0];\n      this.imgSrc = this._files[key].previewSrc;\n      this.filename = value.file.name;\n      this._internals.setFormValue(value.file);\n      this._internals.setValidity({});\n    }\n    this._createAndEmitChangeEvent();\n    this.isHidden = true; // hide the cover overlay after upload::safari\n  }\n\n  override reportValidity() {\n    return this._internals.reportValidity();\n  }\n\n  override checkValidity() {\n    return this._internals.checkValidity();\n  }\n\n  /** reset the selected images */\n  reset() {\n    super.reset();\n    if (!this.disabled) {\n      this._fileInputElNoValidate.files = null;\n      this._fileInputElNoValidate.value = '';\n      this.imgSrc = '';\n      this.filename = '';\n      this._internals.setFormValue('');\n      this._internals.setValidity({});\n      if (this.required) {\n        this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this._imageIconEl);\n      }\n    }\n  }\n\n  /** @internal */\n  override render() {\n    return html`\n      <omni-style>\n        <div\n          style=\"${styleMap({ height: `${this.height}px`, width: `${this.width}px` })}\"\n          @mouseover=${() => this.#handleHoverEvent('enter')}\n          @mouseout=${() => this.#handleHoverEvent('exit')}>\n          ${when(\n            !this.imgSrc,\n            () => this.#noUploadTemplate,\n            () => this.#uploadedTemplate\n          )}\n        </div>\n      </omni-style>\n      <input type=\"file\" @change=${this.#onFileChange} accept=${this.accept} />\n      <div class=\"tooltip-container\">${this._tooltipTemplate}</div>\n    `;\n  }\n}\n\nOmniElement.register('omni-img-upload', OmniImgUploadElement);\n"],
  "mappings": "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",
  "names": []
}
