import 'element-internals-polyfill';
import type { IElementInternalsBase } from '../../element-internals-base.js';
import { OmniImageInputElement } from '../omni-img-input/omni-img-input.js';
/**
 * Circular input control to upload and display image files
 *
 * To include within your project `import { OmniImgUploadElement } from 'omni-ui';`
 *
 * ```html
 * <omni-img-upload></omni-img-upload>
 * ```
 * @tagname omni-img-upload
 * @attr { boolean } disabled - disable the input from user interaction
 * @event {CustomEvent<string>} change - fires when the image is changed
 */
export declare class OmniImgUploadElement extends OmniImageInputElement implements IElementInternalsBase<string> {
    #private;
    static get styles(): import("lit").CSSResult[];
    static formAssociated: boolean;
    /**@internal */
    _internals: ElementInternals;
    /**@internal */
    private isHidden;
    /** name attribute for form association */
    name: string;
    /** the name of the file */
    filename: string;
    /** specify the height of the icon */
    height: number;
    /** specify the width of the icon */
    width: number;
    /** the path to the image url */
    imgSrc: string;
    /** Invalid form element error message */
    valueMissingMessage: string;
    /** use a different name here for fileInputEl than super, to skip adding form states in super methods */
    /** @internal */
    private _fileInputElNoValidate;
    /** use as a target for the HTML5 tooltip */
    /** @internal */
    private _imageIconEl;
    /** @internal */
    get valid(): boolean;
    /**
     * value behavior for file input element
     * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#value
     */
    /** @internal */
    get value(): string;
    /** @internal */
    set value(value: string);
    connectedCallback(): void;
    /** @internal */
    initializeFiles(imgSrc?: string): Promise<void>;
    firstUpdated(): Promise<void>;
    willUpdate(changed: Map<string, unknown>): void;
    reportValidity(): boolean;
    checkValidity(): boolean;
    /** reset the selected images */
    reset(): void;
    /** @internal */
    render(): import("lit-html").TemplateResult<1>;
}
//# sourceMappingURL=omni-img-upload.d.ts.map