{
  "version": 3,
  "sources": ["../../../lib/component/omni-dialog-element/omni-dialog-element.ts"],
  "sourcesContent": ["import { type CSSResult, html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { OmniElement } from '../../omni-element.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--informative: linear-gradient(90deg, #00a1d2 0%, #00cfeb 100%);--success: var(--gradient-mint);--alert: var(--gradient-honeycomb);--error: var(--gradient-melon)}#toast{position:fixed;max-width:57.1428571429rem;border-radius:0.7142857143rem;border:none;top:1.4285714286rem;left:50%;transform:translateX(-50%);z-index:40;padding:15px}#toast .info{float:left;width:1.4285714286rem;--color-icon-lines: white;margin-top:0.7857142857rem;margin-left:1.4285714286rem;margin-right:1.4285714286rem;font-size:1.14rem}#toast.hide{display:none}#toast.close-toast{animation:fadeout .35s;animation-timing-function:cubic-besier(0.12, 1.09, 0.87, 0.98);animation-fill-mode:forwards}#toast.open-toast{display:block;animation:fadein .35s;animation-timing-function:cubic-besier(0, 0.74, 0.04, 0.92)}@keyframes fadein{from{top:-7.1428571429rem;opacity:0}to{top:1.4285714286rem;opacity:1}}@keyframes fadeout{from{top:1.4285714286rem;opacity:1}to{top:-7.1428571429rem;opacity:0}}.toast-content{padding:0.7142857143rem 1.4285714286rem 0.7142857143rem 4.2857142857rem}.banner-dialog{border:none;border-radius:0.7142857143rem;width:42.8571428571rem}.banner-dialog .close{--color-icon-lines: white;position:absolute;right:1.4285714286rem;top:0.8571428571rem;width:1.9285714286rem;cursor:pointer;font-size:1.14rem}.banner-dialog .close:hover{height:27px;border-radius:5px;background-color:rgba(255,255,255,.4)}.banner-dialog .info{float:left;width:1.4285714286rem;--color-icon-lines: white;margin-top:1.7857142857rem;margin-left:0.7142857143rem;margin-right:1.4285714286rem;font-size:1.14rem}.banner-dialog.alert omni-icon.close{--color-icon-lines: var(--color-almost-black)}.modal-dialog{border:none;border-radius:0.7142857143rem;padding:0rem;width:42.8571428571rem}.modal-dialog .close{position:absolute;right:1.0714285714rem;top:1.0714285714rem;width:1.7857142857rem;cursor:pointer}.modal-dialog .info{float:left;width:1.4285714286rem;--color-icon-lines: white;margin-top:0.2857142857rem;margin-right:1.4285714286rem;margin-left:0.7142857143rem;font-size:1.14rem}.modal-dialog .button{margin-right:10px}.omni .button.is-text.is-success:active{background-color:rgba(44,196,173,.15)}.omni .button.is-text.is-warning:active{background-color:rgba(254,216,130,.15)}.omni .button.is-text.is-danger:active{background-color:rgba(223,86,120,.15)}.informational{background:linear-gradient(90deg, #00a1d2 0%, #00cfeb 100%);color:#fff}.informational-modal{padding:0.7142857143rem !important;font-size:1.2857142857rem;font-weight:600;background:linear-gradient(90deg, #00a1d2 0%, #00cfeb 100%);color:#fff}.success{background:linear-gradient(90deg, #2cc4ad 0%, #00e3ae 100%);color:#fff}.success-modal{padding:0.7142857143rem !important;font-size:1.2857142857rem;font-weight:600;background:linear-gradient(90deg, #2cc4ad 0%, #00e3ae 100%);color:#fff}.alert{background:linear-gradient(90deg, #fed882 0%, #f8d991 100%);color:#000}.alert .info{--color-icon-lines: black !important}.alert-modal{padding:0.7142857143rem !important;font-size:1.2857142857rem;font-weight:600;background:linear-gradient(90deg, #fed882 0%, #f8d991 100%);color:#000}.alert-modal .info{--color-icon-lines: black}.error{background:linear-gradient(139.09deg, #df5678 14.91%, #f56c8e 85.27%);color:#fff}.error-modal{padding:0.7142857143rem !important;font-size:1.2857142857rem;font-weight:600;background:linear-gradient(139.09deg, #df5678 14.91%, #f56c8e 85.27%);color:#fff}dialog::backdrop{background-color:rgba(0,0,0,.4)}`\n\n\nexport type ModalType = 'banner' | 'modal' | 'toast';\nexport type ModalStyle = 'alert' | 'success' | 'error' | 'informational';\ninterface ToastClasses {\n  'open-toast'?: boolean;\n  'close-toast'?: boolean;\n  hide?: boolean;\n}\n\n/**\n * To include within your project `import { OmniDialogElement } from 'omni-ui';`\n *\n * @tagname omni-dialog\n * @slot content - slot for dialog content\n * @slot button - slot for dialog button\n * @event {CustomEvent} cancel - fires event when clicks on cancel\n */\n\nexport class OmniDialogElement extends OmniElement {\n  static get styles(): CSSResult[] {\n    return [...super.styles, styles];\n  }\n\n  @state() private _toastClasses: ToastClasses = { hide: true };\n  /** define the type of dialog  */\n  @property({ type: String, attribute: true, reflect: true }) modalType: ModalType = 'modal';\n  /** define the theme of dialog */\n  @property({ type: String, attribute: true, reflect: true }) modalStyle: ModalStyle = 'informational';\n  /** Title of modal */\n  @property({ type: String, attribute: true, reflect: true }) modalTitle: string = '';\n  /**  Timeout for toast to close in ms, defaults to 3000ms */\n  @property({ type: Number, attribute: true, reflect: true }) toastTimeOut: number = 3000;\n  @query('dialog') private dialog: HTMLDialogElement;\n\n  private get iconId() {\n    const iconMaps: Record<ModalStyle, string> = {\n      informational: 'omni:informative:info',\n      alert: 'omni:informative:alert',\n      success: 'omni:informative:success',\n      error: 'omni:informative:error'\n    };\n    return iconMaps[this.modalStyle];\n  }\n\n  private get banner() {\n    const bannerClasses = classMap({\n      'banner-dialog': true,\n      alert: this.modalStyle === 'alert',\n      informational: this.modalStyle === 'informational',\n      success: this.modalStyle === 'success',\n      error: this.modalStyle === 'error'\n    });\n\n    return html`\n      <dialog class=${bannerClasses}>\n        <omni-icon class=\"info\" icon-id=\"${this.iconId}\"></omni-icon>\n        <div style=\"padding:25px 30px 25px 50px;\">\n          <omni-icon class=\"close\" icon-id=\"omni:interactive:close\" @click=${this.closeModal}></omni-icon>\n          <slot name=\"content\"></slot>\n        </div>\n      </dialog>\n    `;\n  }\n\n  private get toast() {\n    const toastClass = classMap({\n      alert: this.modalStyle === 'alert',\n      informational: this.modalStyle === 'informational',\n      success: this.modalStyle === 'success',\n      error: this.modalStyle === 'error',\n      ...this._toastClasses\n    });\n\n    return html`\n      <div id=\"toast\" class=${toastClass}>\n        <omni-icon class=\"info\" icon-id=\"${this.iconId}\"> </omni-icon>\n        <div class=\"toast-content\">\n          <slot name=\"content\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  private get modal() {\n    const modalClasses = classMap({\n      'alert-modal': this.modalStyle === 'alert',\n      'informational-modal': this.modalStyle === 'informational',\n      'success-modal': this.modalStyle === 'success',\n      'error-modal': this.modalStyle === 'error'\n    });\n\n    const cancelButtonTheme = classMap({\n      'is-danger': this.modalStyle === 'error',\n      'is-success': this.modalStyle === 'success',\n      'is-warning': this.modalStyle === 'alert'\n    });\n\n    return html`\n      <dialog class=\"modal-dialog\">\n        <p class=\"${modalClasses}\">\n          <omni-icon class=\"info\" icon-id=\"${this.iconId}\"></omni-icon>\n          ${this.modalTitle}\n        </p>\n        <div style=\"padding:24px 30px 24px 55px;\">\n          <slot name=\"content\"></slot>\n          <div style=\"padding:10px 0px 24px 0px; float:right\">\n            <button class=\"button is-text is-medium ${cancelButtonTheme}\" id=\"cancelButton\" @click=${this.closeModal}>\n              Cancel\n            </button>\n            <slot name=\"button\"></slot>\n          </div>\n        </div>\n      </dialog>\n    `;\n  }\n\n  public openModal() {\n    if (this.modalType === 'toast') {\n      this._toastClasses = {\n        'open-toast': true\n      };\n      setTimeout(() => {\n        this._toastClasses = {\n          'close-toast': true\n        };\n        setTimeout(() => {\n          this._toastClasses = {\n            'close-toast': true,\n            hide: true\n          };\n        }, 350);\n      }, this.toastTimeOut);\n    } else {\n      this.dialog.showModal();\n      this.dialog.focus();\n    }\n  }\n\n  public closeModal() {\n    if (this.modalType === 'toast') return;\n    this.dispatchNewEvent('cancel');\n    return this.dialog.close();\n  }\n\n  render() {\n    return html` <omni-style> ${this[this.modalType]} </omni-style> `;\n  }\n}\n\nOmniElement.register('omni-dialog', OmniDialogElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-dialog': OmniDialogElement;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
