{
  "version": 3,
  "sources": ["../../lib/component/omni-select.js"],
  "sourcesContent": ["/*\n * DO NOT USE this functionality of this file is superceded by\n * omni-dropdown and will be removed in a future release\n */\nimport { html, css } from 'lit';\nimport { OmniFormControl } from '../omni-form-control.js';\nimport './omni-origin/omni-origin.js';\nimport './omni-icon/omni-icon.js';\nimport './omni-option.js';\nimport './omni-optgroup.js';\n\n/**\n\tOmniSelect emulates a regular <select> HTMLSelectElement\n  * @element omni-select\n\t* HTMLOmniSelect element with custom UI, based on HTMLSelectElement <select>;\n\t@see {@link https://developer.mozilla.org/docs/Web/HTML/Element/select} <select>\n\t@see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement} HTMLSelectElement API\n\t@see {@link http://localhost:8000/form} OmniUI Form Elements\n  * @element omni-select\n\t* @example\n\t\t```html\n\t\t<omni-select>\n\t\t\t<omni-option>option 1</omni-option>\n\t\t\t<omni-option>option 2</omni-option>\n\n\t\t\t<omni-optgroup label=\"first group A\">\n\t\t\t\t<omni-option>A-1</omni-option>\n\t\t\t\t<omni-option>A-2</omni-option>\n\t\t\t</omni-optgroup>\n\t\t</omni-select>\n\t\t```\n*/\nexport class OmniSelect extends OmniFormControl {\n  formResetCallback() {\n    const { options, _originalOptions } = this;\n    options.forEach(option => {\n      const { index } = option;\n      option.selected = _originalOptions.has(index);\n    }, this);\n    this.firstUpdated();\n  }\n\n  /* formStateRestoreCallback callback when client restores\n\t\tto trigger submit the form and hit the browser back button (mode='restore') or enable mode=\"autocomplete\" (mode='autocomplete'\n\t\tWIP TODO this is incomplete\n\t\t@state {any} state - value sent\n\t\t @see {@link https://html.spec.whatwg.org/multipage/custom-elements.html} reference spec\n\tChrome currently doesn't handle autofill for form-associated\n\tcustom elements. In the autofill case, you might need to handle a raw value.\n\t\t@param {string} mode - 'restore' (submit then go back) or 'autocomplete'\n\t */\n  formStateRestoreCallback(state, mode) {\n    this.setValidity();\n    if (mode === 'restore') {\n      // expects a state parameter in the form 'controlMode/value'\n      const [controlMode, value] = state.split('/');\n      this._mode = `${controlMode}/${value}`;\n    }\n  }\n\n  formAssociatedCallback(form) {\n    // setValidity() in input event handler\n    this.form === form;\n    this.setValidity();\n  }\n\n  static get properties() {\n    return {\n      _size: { type: Number },\n      disabled: { type: Boolean, reflect: true },\n      /*\n\t\t @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#usage_notes} Selecting multiple behavior\n\t\t */\n      open: { type: Boolean, reflect: true },\n      multiple: { type: Boolean, reflect: true },\n      required: { type: Boolean, reflect: true },\n      /* @prop size default: 0 as in not-set and interpreted as lines to show: 1 or with multiple 4 lines;\n       */\n      size: {\n        type: Number,\n        reflect: true,\n        converter: {\n          // remove if not truthy\n          toAttribute(value) {\n            return value || undefined;\n          }\n        }\n      }\n    };\n  }\n\n  constructor() {\n    super();\n\n    this.addEventListener('click', this._click);\n    this._closing = this._closing.bind(this);\n    this._opening = this._opening.bind(this);\n    this.addEventListener('overlay-remove', this._closing);\n    this.addEventListener('overlay', this._opening);\n\n    this.addEventListener('option', this._option);\n    this.addEventListener('focus', this._focus);\n    // controls indexing options\n    this.__observer = new MutationObserver(this._mutationCallback.bind(this));\n    this.setAttribute('init', '');\n    this.addEventListener('invalid', this._invalid);\n    /* if in omni-overlay re-emit on the origin */\n    this.addEventListener('input', this._remit);\n    this.addEventListener('change', this._remit);\n    console.warn(\n      'OmniSelect is deprecated and will be removed in the upcoming Omni-UI 8.0 release. Please use OmniDropdown instead. https://omni-ui.annalect.com/dropdown'\n    );\n  }\n\n  _selection({ detail } = {}) {\n    if (!this.matches('omni-select:not([multiple])')) {\n      return;\n    }\n    const option =\n      detail && detail.matches('omni-option')\n        ? detail\n        : this.querySelector('omni-option[selected]') || this.querySelector('omni-option');\n    if (!option) return;\n    requestAnimationFrame(() => {\n      this.shadowRoot.querySelector('section').scrollTop = option.offsetTop;\n    });\n  }\n\n  /* when this element is in the overlay, and not in the original context (eg a form)\n\t\tthis listener will re-emit the event on the origin element in that context,\n\t\tomni-dropdown and any similar scenario uses this */\n  _remit(event) {\n    if (this === event.target && this.matches('omni-overlay > *')) {\n      const { type, bubbles, cancelable, composed, detail } = event;\n      this.origin.dispatchEvent(new CustomEvent(type, { bubbles, cancelable, composed, detail }));\n    }\n    this._selection(event);\n  }\n\n  _mutationCallback(mutations, observer) {\n    cancelAnimationFrame(this.__mutated);\n    this.__mutated = requestAnimationFrame(() => {\n      this._index();\n      this.dispatchEvent(new CustomEvent('mutation', { detail: mutations }));\n    });\n  }\n\n  _invalid() {\n    this.removeAttribute('init');\n  }\n\n  /*\n\t\tretrieve and tranform values in this component to primitives expected for consumption\n\t\tie passing it to URLSearchParams and other in-transit/payload related next-steps (in the DOM or over HTTP, etc)\n\t\t@returns {array} array of zero or more option-value strings\n\t */\n  get value() {\n    return Array.from(this.selectedOptions).map(option => option.value);\n  }\n\n  setValidity() {\n    // filter out empty strings\n    const values = this.value.filter(val => !!val.trim());\n\n    // at least one non-empty value when enabled and required\n    if (!this.matches(':disabled') && this.required && !values.length) {\n      this.internals.setValidity({ valueMissing: true }, 'Selection required.');\n    } else {\n      this.internals.setValidity({});\n    }\n\n    this.setFormValue(values);\n  }\n\n  setFormValue(values) {\n    this.internals.setFormValue(values);\n  }\n\n  _option({ target }) {\n    cancelAnimationFrame(this._setvalidity);\n    this._setvalidity = requestAnimationFrame(() => {\n      this.setValidity();\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.__observer.observe(this, { childList: true, subtree: true });\n\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'combobox');\n    }\n\n    let { origin } = this;\n\n    if (!origin) {\n      origin = this.ownerDocument.createElement('omni-origin');\n      origin.target = this;\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__observer.disconnect();\n  }\n\n  willUpdate(changedProperties) {\n    if (changedProperties.has('size')) {\n      const size = Number(this.size || 0);\n      if (!isNaN(size) && size > 0) {\n        // only set when the option is explicitly set and valid\n        this._size = size;\n      }\n    }\n  }\n\n  _position() {\n    const { style, origin } = this;\n    const { x, y, width, height } = this.getBoundingClientRect();\n    const computed = getComputedStyle(this);\n    const { clientWidth, clientHeight } = this.ownerDocument.documentElement;\n    const { scrollWidth, scrollHeight } = this.shadowRoot.querySelector('section');\n\n    let offsetLeft = '- 2px';\n    let offsetTop = '- 2px';\n    let [left, top] = [x, y];\n    const [useWidth, useHeight] = this.multiple ? [width, height] : [scrollWidth, scrollHeight];\n\n    if (left + useWidth > clientWidth) {\n      left = clientWidth - useWidth;\n      offsetLeft = '- 1rem';\n      if (left < 1) {\n        offsetLeft = '+ 1rem';\n        left = 0;\n      }\n    }\n    if (top + useHeight > clientHeight) {\n      offsetTop = '- 1rem';\n      top = clientHeight - useHeight;\n      if (top < 1) {\n        offsetTop = '+ 1rem';\n        top = 0;\n      }\n    }\n\n    const originstyle = origin.style;\n    originstyle.setProperty('display', computed.display);\n    originstyle.setProperty('position', computed.position);\n    /* TODO better compute size */\n    originstyle.setProperty('width', `calc(${width}px + 3px)`);\n    originstyle.setProperty('height', `calc(${height}px - 2px)`);\n    originstyle.setProperty('visibility', `hidden`);\n\n    // requires a specific size for scrolling to work\n    style.setProperty('--open-height', `${Math.round(useHeight)}px`);\n    style.setProperty('--open-width', `${Math.round(useWidth)}px`);\n    style.setProperty('--open-left', `calc(${Math.round(left)}px ${offsetLeft})`);\n    style.setProperty('--open-top', `calc(${Math.round(top)}px ${offsetTop})`);\n  }\n\n  /*\n\t\treturns base 0 index of first selected option, including for multiple\n\t\tdefault: 0 || -1 with multiple\n\t */\n  get selectedIndex() {\n    const { selectedOptions } = this;\n    if (!selectedOptions.length) {\n      return -1;\n    }\n    return selectedOptions[0].index;\n  }\n\n  /*\tthis.selectedIndex returns the input param\n\t\t@param {number} the base 0 index for an option\n\t\t@prop {number} last selected index\n\t\t@returns {number} base 0 inex for last [selected] option, or first or -1 when none present\n\t */\n  set selectedIndex(index) {\n    if (!isNaN(index)) {\n      const { options } = this;\n      let node;\n      if (index < 0 || index >= options.length) {\n        if (!this.multiple) {\n          // reset non-multiple\n          node = options[this.selectedIndex];\n          node.selected = false;\n          node = options[this._originalOptions.values().next().value];\n          node.selected = true;\n        } else {\n          // disable all in multiple\n          let i = 0;\n          for (; (node = options[i]); i++) {\n            node.selected = false;\n          }\n        }\n      } else if (!this.multiple) {\n        // deselect selectedIndex, select at index\n        node = options[this.selectedIndex];\n        node.selected = false;\n        options[index].selected = true;\n      } else {\n        // multiple simply selects at index\n        options[index].selected = true;\n      }\n    }\n  }\n\n  /* this.selectedOptions\n\t\t@prop {object}\n\t\t@returns all selected options as NodeList\n\t */\n  get selectedOptions() {\n    return this.querySelectorAll('omni-option[selected], option[selected]');\n  }\n\n  _indexEach(node, i) {\n    node._index = i;\n    return node;\n  }\n\n  _index() {\n    const options = Array.from(this.options);\n    options.forEach(this._indexEach);\n    return options;\n  }\n\n  /* this.options emulate HTMLOptionsCollection\n\t\t@prop {object}\n\t\t@return NodeList of options with selectedIndex property for currently selected option's index\n\t\t@example this.options // [omni-option, omni-option, selectedIndex: 1]\n\t */\n  get options() {\n    return this.querySelectorAll('omni-option, option');\n  }\n\n  _closing(event) {\n    requestAnimationFrame(() => {\n      this.removeAttribute('init');\n      this.removeAttribute('open');\n      this.slot = this.__slot ?? '';\n      const { origin } = this;\n      origin.style.setProperty('display', 'none');\n      if (origin.nextElementSibling !== this) {\n        origin.after(this);\n      }\n    });\n  }\n\n  _opening(event) {\n    this.open = true;\n    this.__slot = this.slot;\n    this.slot = 'form';\n    this._position();\n  }\n\n  _click(event) {\n    const { target } = event;\n    const { multiple, open } = this;\n    if (multiple) {\n      this._change(event);\n    } else {\n      if (open) {\n        /* slots with special names have interaction we want (to ignore and not handle here)\n         * currently specific to omni-dropdown though is generalizable to any for this handler\n         */\n        if (!target.assignedSlot?.name) {\n          this._change(event);\n        }\n        if (!multiple) {\n          this.dispatchEvent(new CustomEvent('overlay-remove', { detail: this, bubbles: true, composed: true }));\n        }\n      } else {\n        this.dispatchEvent(new CustomEvent('overlay', { detail: this, bubbles: true, composed: true }));\n      }\n    }\n  }\n\n  firstUpdated() {\n    const options = this._index();\n    // for form reset\n    if (!this._originalOptions) {\n      // determine the options to reset back to\n      const { selectedOptions } = this;\n\n      let selected = Array.from(selectedOptions);\n      // multiple has no default; non-multiple has first as default\n      if (!selectedOptions.length && !this.multiple && options.length) {\n        // option.matches('[defaultselected]') === option.defaultSelected;\n        let node = options.find(node => node.defaultSelected);\n        if (!node) {\n          node = options[0];\n        }\n        node.selected = true;\n        selected = [node];\n      }\n      this._originalOptions = new Set(selected.map(option => option.index));\n    }\n    requestAnimationFrame(() => {\n      this._selection();\n    });\n  }\n\n  __deselect(node) {\n    if (this.index === node.index) {\n      return;\n    }\n    node.selected = false;\n  }\n\n  _change(event) {\n    const [option, optgroup] = this.pathfinder(event, 'omni-option, option, optgroup, omni-optgroup', true);\n\n    if (!option || !option.matches('omni-option,option')) {\n      return;\n    }\n\n    let { index } = option;\n    const isOptgroup = option.hasAttribute('optgroup');\n    // any disabled ancestor should disable\n    const disabled = option.closest('[disabled]');\n    if (isOptgroup) {\n      index = optgroup.querySelector(':scope > omni-option').index;\n    }\n    if (disabled) {\n      return;\n    }\n    /* cannot toggle-off by clicking selected option, must click another option */\n    if (!this.multiple && (option.selected || isOptgroup)) {\n      return;\n    }\n    option.toggleAttribute('selected');\n    if (isOptgroup) {\n      const selected = option.hasAttribute('selected');\n      option.getRootNode().host.toggle(selected);\n    }\n    // for non-multiple select deactivate the other selected item\n    if (!this.multiple && option.selected) {\n      this.selectedOptions.forEach(this.__deselect, { index });\n    }\n\n    /* <select> events on the element in/for its respective original context */\n    requestAnimationFrame(() => {\n      this.dispatchEvent(\n        new CustomEvent('input', {\n          bubbles: true,\n          cancelable: false,\n          composed: true,\n          detail: option\n        })\n      );\n      this.dispatchEvent(\n        new CustomEvent('change', {\n          bubbles: true,\n          cancelable: false,\n          composed: false,\n          detail: option\n        })\n      );\n    });\n  }\n\n  static get styles() {\n    return [\n      ...super.styles,\n      css`\n        :host {\n          contain: paint;\n          content-visibility: auto;\n          --option-hover: transparent;\n          --icon-color: var(--color-electric-blue);\n          --icon-size: 1em;\n          --icon-bg: transparent;\n          --icon-bg-selected: transparent;\n          --icon-border: transparent;\n          --icon-border-selected: transparent;\n          --icon-margin: 0.2em 0.1em 0.1em 0.2em;\n          --icon-border-disabled: transparent;\n          --padding: 0.3em 1.6em 0.2em 0.5em;\n          --padding-adjust: 0.1em;\n          --optgroup-first-icon: none;\n          display: inline-block;\n          box-sizing: border-box;\n          border: thin solid var(--bg-color, #555);\n          margin: 0.1rem;\n          cursor: pointer;\n          appearance: none;\n          align-items: center;\n          border-radius: var(--radius-small, 0.3em);\n          box-shadow: none;\n          box-sizing: border-box;\n          font-size: 1em;\n          justify-content: flex-start;\n          line-height: 1.5;\n          position: relative;\n          vertical-align: top;\n          outline: none;\n          color: var(--color);\n          --option-size: 2.4em;\n          --option-count: 1;\n          height: calc(var(--option-size) * var(--option-count));\n        }\n        :host(omni-select[multiple]) {\n          --option-count: 4;\n        }\n        :host([multiple]) {\n          --inactive-display: flex;\n          --icon-color: #fff;\n          --icon-bg: none;\n          --icon-bg-selected: var(--gradient-electric-blue);\n          --icon-border: #555;\n          --icon-border-selected: var(--gradient-electric-blue);\n          --padding: 0.3em 0.5em 0.2em 0.2em;\n          --padding-adjust: 0.2em;\n          --icon-margin: 0.22em 0.3em 0.1em 0.3em;\n          --icon-size: 0.8em;\n          --icon-border-disabled: #aaa;\n          --optgroup-first-icon: block;\n        }\n        :host([disabled][multiple]) {\n          --icon-border: var(--color-disabled);\n        }\n        :host(:where(:active, :focus, :focus-within, :hover):not([disabled])) {\n          background-color: #fff;\n          --option-hover: #d6f5fc;\n          max-height: calc(100vh - 2rem) !important;\n          max-width: calc(100vw - 2rem) !important;\n        }\n        :host(omni-select:not([disabled]):active) {\n          border-color: var(--color-electric-blue);\n          box-shadow: var(--bulma-shadow-1);\n        }\n        :host(:hover) {\n          border-color: var(--color-gray-b5);\n        }\n        :host(omni-select:not([disabled]):focus) {\n          border-color: var(--color-electric-blue);\n          box-shadow: var(--bulma-shadow-1);\n        }\n        :host(:is([open])),\n        :host(:not([disabled]):focus-visible) {\n          outline: 0.125em var(--blue);\n          box-shadow: 0 0 0 0.125em var(--blue) !important;\n        }\n        /* TODO remove?\n\t\t\t\t:host(:not([multiple]):not([active])) {\n\t\t\t\t\t--inactive-options: none;\n\t\t\t\t}\n*/\n        :host([disabled]) {\n          background-color: transparent;\n          border-color: var(--color-gray-b5);\n          box-shadow: none;\n          cursor: not-allowed;\n        }\n        :host([disabled]) section:focus-visible {\n          outline: none;\n          pointer-events: none;\n        }\n        /* icon */\n        section {\n          display: flex;\n          overflow: hidden;\n          height: 100%;\n          box-sizing: border-box;\n        }\n        :host(:where([open], omni-select[multiple]):where(:active, :focus, :focus-within, :hover):not([disabled]))\n          section {\n          overflow: auto;\n        }\n        [options] {\n          padding: 0;\n          display: flex;\n          flex-direction: column;\n        }\n        :host(omni-select[multiple]) [icon] {\n          display: none;\n        }\n        [icon] {\n          direction: rtl;\n          pointer-events: none;\n          position: absolute;\n          inset: 0 0 auto auto;\n        }\n        [icon] omni-icon {\n          width: 1em;\n          padding: 0.6em 0.5em;\n          transform: rotate(0);\n        }\n        :host([open]) [icon] omni-icon,\n        :host(omni-select[open]) [icon] omni-icon {\n          transform: rotate(-180deg);\n        }\n        /* align on other edge, more on :dir at\n\t\t\t\t\thttps://developer.mozilla.org/docs/Web/CSS/:dir\n\t\t\t\t\thttps://www.chromestatus.com/features/5751531651465216\n\t\t\t\t */\n        :dir(rtl) [icon] {\n          direction: ltr;\n        }\n        :host(:not(:is([init], [open], [disabled])):is([aria-invalid='true'], [internals-invalid], :invalid)) {\n          border-color: var(--error-color, red);\n        }\n\n        :host([open][style]) {\n          width: var(--open-width);\n          height: var(--open-height);\n          top: var(--open-top);\n          left: var(--open-left);\n        }\n      `\n    ];\n  }\n\n  render() {\n    return html`\n      <style>\n        ${this._size\n          ? `\n\t\t\t\t:host([size]){\n\t\t\t--option-count:${this._size};\n\t\t\t\t}\n\t\t\t\t`\n          : ''}\n      </style>\n      <section tabindex=${this.disabled ? -1 : 0}>\n        <div options>\n          <slot></slot>\n        </div>\n        <div icon>\n          <omni-icon class=\"is-size-1\" icon-id=\"omni:interactive:down\"></omni-icon>\n        </div>\n      </section>\n    `;\n  }\n}\n\nOmniSelect.register('omni-select', OmniSelect);\n"],
  "mappings": "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",
  "names": ["node"]
}
