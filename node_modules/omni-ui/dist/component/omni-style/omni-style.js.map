{
  "version": 3,
  "sources": ["../../../lib/component/omni-style/omni-style.ts"],
  "sourcesContent": ["import { html } from 'lit';\nimport { OmniElement } from '../../omni-element.js';\nimport { omniStyleSheets } from '../../omni-stylesheets.js';\n\n/** @element omni-style */\nexport class OmniStyleElement extends OmniElement {\n  _styleListener(event) {\n    const { detail = {} } = event;\n    if (detail instanceof Function) {\n      detail.call(this, event, this);\n    } else {\n      //@ts-ignore\n      Object.entries(detail).forEach(this.setProperty, this);\n    }\n  }\n\n  setProperty([name = '', value = '']) {\n    this.style.setProperty(name, value);\n  }\n\n  constructor() {\n    super();\n    this._styleListener = this._styleListener.bind(this);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    self.removeEventListener('omni-style', this._styleListener);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    self.addEventListener('omni-style', this._styleListener);\n\n    // can't do this in constructor since getRootNode returns doc fragment instead of shadowRoot\n    const root = this.getRootNode();\n\n    // is global document style (root is document and omni-style has no children)\n    if (root instanceof HTMLDocument && this.children.length === 0) {\n      root.firstElementChild.classList.add('omni');\n    } else if (!this.closest('.omni')) this.classList.add('omni');\n\n    // don't adopt omniStyleSheets more than once for this root, checking first is good enough\n    //@ts-ignore\n    if (!root.adoptedStyleSheets.includes(omniStyleSheets[0])) {\n      //@ts-ignore\n      root.adoptedStyleSheets = [\n        ...omniStyleSheets, // inject shared omni sheets first, so component sheets can override\n        //@ts-ignore\n        ...root.adoptedStyleSheets\n      ];\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n}\n\nOmniElement.register('omni-style', OmniStyleElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-style': OmniStyleElement;\n  }\n}\n"],
  "mappings": "AAAA,SAAS,YAAY;AACrB,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAGzB,MAAM,yBAAyB,YAAY;AAAA,EAChD,eAAe,OAAO;AACpB,UAAM,EAAE,SAAS,CAAC,EAAE,IAAI;AACxB,QAAI,kBAAkB,UAAU;AAC9B,aAAO,KAAK,MAAM,OAAO,IAAI;AAAA,IAC/B,OAAO;AAEL,aAAO,QAAQ,MAAM,EAAE,QAAQ,KAAK,aAAa,IAAI;AAAA,IACvD;AAAA,EACF;AAAA,EAEA,YAAY,CAAC,OAAO,IAAI,QAAQ,EAAE,GAAG;AACnC,SAAK,MAAM,YAAY,MAAM,KAAK;AAAA,EACpC;AAAA,EAEA,cAAc;AACZ,UAAM;AACN,SAAK,iBAAiB,KAAK,eAAe,KAAK,IAAI;AAAA,EACrD;AAAA,EAEA,uBAAuB;AACrB,UAAM,qBAAqB;AAC3B,SAAK,oBAAoB,cAAc,KAAK,cAAc;AAAA,EAC5D;AAAA,EAEA,oBAAoB;AAClB,UAAM,kBAAkB;AAExB,SAAK,iBAAiB,cAAc,KAAK,cAAc;AAGvD,UAAM,OAAO,KAAK,YAAY;AAG9B,QAAI,gBAAgB,gBAAgB,KAAK,SAAS,WAAW,GAAG;AAC9D,WAAK,kBAAkB,UAAU,IAAI,MAAM;AAAA,IAC7C,WAAW,CAAC,KAAK,QAAQ,OAAO;AAAG,WAAK,UAAU,IAAI,MAAM;AAI5D,QAAI,CAAC,KAAK,mBAAmB,SAAS,gBAAgB,CAAC,CAAC,GAAG;AAEzD,WAAK,qBAAqB;AAAA,QACxB,GAAG;AAAA;AAAA;AAAA,QAEH,GAAG,KAAK;AAAA,MACV;AAAA,IACF;AAAA,EACF;AAAA,EAEA,SAAS;AACP,WAAO;AAAA,EACT;AACF;AAEA,YAAY,SAAS,cAAc,gBAAgB;",
  "names": []
}
