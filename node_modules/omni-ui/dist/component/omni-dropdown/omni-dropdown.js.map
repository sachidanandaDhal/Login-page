{
  "version": 3,
  "sources": ["../../../lib/component/omni-dropdown/omni-dropdown.ts"],
  "sourcesContent": ["import { html, nothing, type TemplateResult } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { ClickOutsideController } from '../../controllers/click-outside-controller.js';\nimport { getElementSize } from '../../omni-util.js';\nimport { ElementInternalsBase } from '../../element-internals-base.js';\nimport { type Option, type GroupHeader, type FetchOptionsFn, isGroupHeader } from './omni-dropdown.types.js';\nimport '../omni-pill-list/omni-pill-list.js';\nimport '../omni-loading-indicator/omni-loading-indicator.js';\nimport '../omni-icon/omni-icon.js';\nimport '../omni-tooltip/omni-tooltip.js';\nimport '../omni-search/omni-search.js';\nimport '../omni-options/omni-options.js';\nimport '../omni-checkbox/omni-checkbox.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{width:21.4285714286rem;--cursor-state: pointer}:host([disabled]){opacity:.45;--cursor-state: not-allowed;cursor:not-allowed}:host(:not([disabled]):hover){--cursor-state: pointer}:host(:focus-visible){outline:none}:host(:focus-visible) .target{border:.0714285714rem solid var(--color-primary)}.container{position:relative;display:flex;flex-direction:column}.container .wrapper{display:flex;justify-content:flex-start;align-items:center}p.single-select{text-overflow:ellipsis;overflow:hidden;white-space:nowrap;padding-right:.5714285714rem;font-size:1rem}p.single-select.label-variant{font-weight:600}.label-container{display:flex;justify-content:flex-start;align-items:center;height:.9285714286rem}.label-container.top{margin-bottom:.6428571429rem;margin-left:.5rem}.label-container.left{margin-right:.7142857143rem}.label-container label{line-height:.9285714286rem;white-space:nowrap;color:var(--color-core-dark);font-size:.7857142857rem;opacity:.6}.label-container omni-tooltip{padding:0 0 .4285714286rem .4285714286rem}.label-container omni-tooltip omni-icon{--color-icon-lines: var(--color-core-dark)}.target{background-color:var(--color-pale-grey-two);height:2.5714285714rem;display:flex;align-items:center;justify-content:space-between;cursor:var(--cursor-state);user-select:none;border-radius:.2857142857rem;border:.0714285714rem solid rgba(0,0,0,0);padding:0 1.3571428571rem 0 1.3571428571rem}.target.label-variant{height:1.8571428571rem;background-color:rgba(0,0,0,0);padding:.3571428571rem .8571428571rem}.target.label-variant:hover{background-color:#f5f8fb}.target.label-variant:focus,.target.label-variant.opened{background-color:#fff;border:.0714285714rem solid var(--color-primary)}.target.left{flex-grow:1}.target.opened{background-color:#fff}.target.opened p{color:var(--color-core-dark)}.target.opened:not(.label-variant){border:.0714285714rem solid var(--color-primary)}.target.filled p{color:var(--color-core-dark)}.target.has-error{border:.0714285714rem solid var(--color-error)}.target.typeahead{padding-left:0;padding-right:0}.target .target-icons{display:flex;justify-content:flex-end;align-items:center}.target .target-icons .x-close{margin-left:3.2857142857rem}.target omni-icon{min-width:1.2857142857rem;min-height:1.2857142857rem}.target omni-pill-list{flex:0 0 calc(100% - 2rem);max-width:calc(100% - 2rem)}.target omni-search{flex:0 0 100%;height:100%;height:2.5714285714rem;border:none}.target omni-search::part(search-icon-opened-wrapper){margin-left:.8571428571rem}.target omni-search::part(search-icon-opened){--color-icon-lines: var(--color-shark);--size-1: 1rem}.target omni-search::part(input){font-size:.8571428571rem;background-color:rgba(0,0,0,0);border:none;box-shadow:none;padding-left:3.0714285714rem}.target omni-search::part(input)::placeholder{font-size:.8571428571rem}.target p{color:var(--color-core-medium);margin:0}.target p.label-variant{color:var(--color-core-dark);font-weight:600}.target .enable-tooltip::part(hint){pointer-events:auto;cursor:default}.dropdown{background-color:#fff;position:absolute;z-index:6;top:2.8571428571rem;width:100%;left:0;max-height:15.1428571429rem;padding:0;border-radius:.7142857143rem;box-shadow:0 .5714285714rem 3.1428571429rem -.3571428571rem rgba(38,55,79,.29);overflow:auto;cursor:pointer}.dropdown.top{top:4.4285714286rem}.dropdown.no-label{top:2.8571428571rem}.dropdown.label-variant{top:2.1428571429rem}.dropdown.cursor-default{cursor:default}.dropdown .no-results,.dropdown .add-dynamic{margin:0 0 0 2.2857142857rem}.dropdown .add-dynamic{cursor:pointer}.dropdown.extend-right{width:calc(100% + 3.1428571429rem)}.dropdown.padding{padding:.5714285714rem 0}.dropdown omni-tooltip{display:flex;flex-direction:column}.dropdown .select-all-button{display:flex;justify-content:flex-end;align-items:center;padding:.4285714286rem 1.2857142857rem}.dropdown .select-all-button a{color:#00a1d2}.dropdown .select-all-button p{color:rgba(59,62,63,.5019607843);margin:0;font-size:.8571428571rem;line-height:.8571428571rem;letter-spacing:.0023rem}.dropdown omni-search{height:2.5714285714rem;border:.0714285714rem solid rgba(0,0,0,0);border-bottom:.0714285714rem solid #edf0f5;padding-bottom:.1428571429rem;box-sizing:content-box}.dropdown omni-search::part(search-icon-opened){--color-icon-lines: var(--color-shark);--size-1: 1rem}.dropdown omni-search::part(input){background-color:rgba(0,0,0,0);border:none;box-shadow:none;border:.0714285714rem solid rgba(0,0,0,0);font-size:.8571428571rem}.dropdown omni-search::part(input):focus{border:.0714285714rem solid var(--color-primary)}.dropdown omni-search::part(input)::placeholder{font-size:.8571428571rem}.dropdown omni-loading-indicator{padding-top:.5714285714rem;min-height:2.5714285714rem}.dropdown omni-loading-indicator::part(svg){width:2rem}.dropdown .item{min-height:2.5714285714rem;padding:.5714285714rem .5714285714rem .5714285714rem 0;margin:0;user-select:none;display:flex;flex-grow:1;align-items:flex-start;justify-content:flex-start;border:.0714285714rem solid rgba(0,0,0,0)}.dropdown .item:focus,.dropdown .item:active,.dropdown .item.selected,.dropdown .item:hover{background-color:var(--white);outline:none}.dropdown .item omni-checkbox{margin-top:calc(1rem - 0.7857142857rem)}.dropdown .item:not(.disabled):hover omni-checkbox{--checkbox-border-color: var(--color-primary)}.dropdown .item label{color:#3b3e3f;pointer-events:none}.dropdown .item .item-gutter{display:flex;justify-content:center;align-items:center;min-width:2.2857142857rem;margin-top:.1428rem}.dropdown .item .item-gutter.groupheader{min-width:1.1428571429rem}.dropdown .item .item-gutter omni-icon{--color-icon-lines: var(--color-primary);height:1.1428571429rem;width:1.1428571429rem}.dropdown .item.disabled{cursor:not-allowed}.dropdown .item.disabled:hover{background-color:rgba(0,0,0,0)}.dropdown .item.disabled:focus,.dropdown .item.disabled:active{outline:none;border:.0714285714rem solid rgba(0,0,0,0);background-color:rgba(0,0,0,0)}.dropdown .item.disabled label{color:#a2a9ad !important}.dropdown .item.groupheader span{color:#a2a9ad !important;font-weight:600}.footer-spacer{height:1.8571428571rem;min-height:1.8571428571rem;max-height:1.8571428571rem;flex:0 0 100%}.footer-container{display:flex;flex:0 0 100%;padding:.5714285714rem 0 0 .7142857143rem}.footer-container.help-text{justify-content:flex-end;align-items:center}.footer-container.error-text{justify-content:flex-start;align-items:center}.footer-container omni-icon{margin-right:.5714285714rem;--color-icon-lines: var(--color-error)}.footer-container span{font-size:.8571428571rem;font-weight:400;color:var(--color-almost-black)}`\n\n\n/**\n * To include within your project `import { OmniDropdown } from 'omni-ui';`\n *\n * @tagname omni-dropdown\n * @attr {boolean} required - adds required attribute to dropdown for form validation\n * @event {Option | Option[]} change - fires when selection changes\n */\nexport class OmniDropdown extends ElementInternalsBase<Option[]> {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  /** given an option, find first group header with higher index than option */\n  public static findGroupHeaderForItem(option: Option, allOptions: Option[]): GroupHeader | null {\n    const index = allOptions.indexOf(option);\n    const reversedOptions = [...allOptions].reverse();\n    for (const option of reversedOptions.slice(reversedOptions.length - index)) {\n      if (typeof option === 'object' && (option as GroupHeader).groupheader) {\n        return option as GroupHeader;\n      }\n    }\n    return null;\n  }\n\n  #clickOutsideController = new ClickOutsideController(this, () => {\n    this.opened = false;\n    this._searchTerm = '';\n  });\n\n  @state() private _selected = new Set<Option>();\n  @state() private _disabled = new Set<Option>();\n  @state() private _disabledOnMaxSet = new Set<Option>();\n  @state() private _computedTargetWidth: number;\n  @state() private _computedLabelWidth: number;\n  @state() private _searchTerm: string = '';\n  @state() private _filteredOptions: Option[] = [];\n  @state() private _isLoading: boolean = false;\n  @state() private _hasGroupHeaders: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) opened: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) disableonmax: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) multiselect: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) noselect: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) selectall: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) typeahead: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) searchindropdown: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) dynamicadditions: boolean = false;\n  @property({ type: Boolean, attribute: true, reflect: true }) hidefooter: boolean = false;\n  @property({ type: String }) name: string;\n  @property({ type: String }) valueMissingMessage: string = 'Please select an option';\n  @property({ type: String }) label = '';\n  @property({ type: String }) labelTooltip: string | TemplateResult = '';\n  @property({ type: String }) placeholder = 'Select an option';\n  @property({ type: String }) searchPlaceholder = 'Search';\n  @property({ type: String }) helpText = '';\n  /** error message will show when set */\n  @property({ type: String }) error = '';\n  @property({ type: String }) disabledMessage: string = '';\n  @property({ type: String }) labelPosition: 'top' | 'left' = 'top';\n  @property({ type: String }) dropdownAlignment: 'extend-right' | 'vertical' = 'vertical';\n  /** min: an integer: 1 or greater */\n  @property({ type: Number }) min: number;\n  /** max: an integer: 1 or greater */\n  @property({ type: Number }) max: number;\n  @property({ type: Number }) inputDebounceTimer: number = 0;\n  // label variant specific properties\n  @property({ type: String }) variant: 'default' | 'label' = 'default';\n  @property({ type: Boolean, attribute: true, reflect: true }) showxicon: boolean = false;\n\n  @property({ attribute: false }) options: Option[] = [];\n  @property({ attribute: false }) value: Option[] = [];\n  @property({ attribute: false }) fetchOptionsFn: FetchOptionsFn;\n\n  @query('.target') private targetEl: HTMLDivElement;\n  @query('.label-container') private labelEl: HTMLDivElement;\n\n  async connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('keyup', this.#handleKeysOnDropdown as EventListener);\n    this.tabIndex = 0;\n    this._internals.setFormValue('');\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeEventListener('keyup', this.#handleKeysOnDropdown as EventListener);\n  }\n\n  async willUpdate(changed: Map<string, unknown>) {\n    if (changed.has('options')) {\n      this.options.forEach(option => {\n        if (option && typeof option === 'object' && option.disabled) {\n          this._disabled.add(option);\n        }\n        if (option && isGroupHeader(option)) {\n          this._disabled.add(option);\n        }\n      });\n      this._hasGroupHeaders = this.options?.some(option => isGroupHeader(option));\n      this._isLoading = true;\n      this._filteredOptions = await this.#getFilteredOptions();\n      this._isLoading = false;\n    }\n    if ((changed.has('min') || changed.has('max')) && !this.multiselect) {\n      console.warn(`${this.localName}: setting min or max is only allowed when multiselect = true`);\n    }\n    // rechecks validity on value, min, max changes\n    if (changed.has('value') || changed.has('min') || changed.has('max')) {\n      // only update if the value has changed\n      // use toString() to compare arrays' values, not their references\n      if ((changed.get('value') as Option[] | undefined)?.toString() !== this.value?.toString()) {\n        // to allow dynamic \"removing\" from .value, clear set before adding values\n        this._selected.clear();\n        const add: Option[] = [];\n        for (const option of this.value) {\n          if (!this._selected.has(option)) {\n            add.push(option);\n          }\n        }\n        this.#commitSelections(add, false, true);\n      }\n    }\n    if (changed.has('variant') && this.variant === 'label') {\n      // override some properties only for the label variant\n      this.dropdownAlignment = 'extend-right';\n      this.helpText = '';\n      this.label = '';\n      this.labelTooltip = '';\n      this.multiselect = false;\n      this.error = '';\n      this.labelPosition = 'top';\n      this.hidefooter = true;\n      this.typeahead = false;\n      this.searchindropdown = false;\n      this.selectall = false;\n    }\n\n    if (changed.has('fetchOptionsFn')) {\n      if (this.options?.length) {\n        console.warn('<omni-dropdown>: options should not be set by property when providing a fetchOptionsFn');\n      }\n    }\n    if (changed.has('_searchTerm')) {\n      this._isLoading = true;\n      this.#getFilteredOptions().then(options => {\n        this._filteredOptions = options;\n        this._isLoading = false;\n      });\n    }\n    if (changed.has('_selected') && this.disableonmax) {\n      this.#disableOnMaxLimit();\n    }\n  }\n\n  #disableOnMaxLimit() {\n    if (this.max && this._selected.size >= this.max) {\n      this.options.forEach(option => {\n        if (!this._selected.has(option)) {\n          this._disabledOnMaxSet.add(option);\n        }\n      });\n    } else {\n      this._disabledOnMaxSet = new Set();\n    }\n  }\n\n  async firstUpdated() {\n    await this.updateComplete;\n    if (this.required && !this._selected.size) {\n      this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this.targetEl);\n    }\n    // compute initial widths\n    this._computedTargetWidth = this.targetEl.clientWidth;\n    this._computedLabelWidth = this.labelEl ? getElementSize(this.labelEl).width : null;\n    this._isLoading = true;\n    this.#getFilteredOptions().then(options => {\n      this._isLoading = false;\n      this._filteredOptions = options;\n    });\n  }\n\n  updated(changed: Map<string, unknown>) {\n    // recalculate computed widths on each update; skip if is the same prop\n    if (!changed.has('_computedTargetWidth')) {\n      this._computedTargetWidth = this.targetEl.clientWidth;\n    }\n    if (!changed.has('_computedLabelWidth')) {\n      this._computedLabelWidth = this.labelEl ? getElementSize(this.labelEl).width : null;\n    }\n  }\n\n  async #getFilteredOptions(): Promise<Option[]> {\n    if (this.fetchOptionsFn) {\n      return this.fetchOptionsFn(this._searchTerm);\n    }\n\n    const groupHeadersExist = this.options.some(\n      option => typeof option === 'object' && (option as GroupHeader).groupheader\n    );\n    const foundInSearch: { match: boolean; option: Option }[] = [];\n    for (const option of this.options) {\n      if (!this.typeahead) {\n        foundInSearch.push({ match: true, option });\n      } else if (typeof option === 'object' && (option as GroupHeader).groupheader) {\n        foundInSearch.push({ match: false, option });\n      } else {\n        const val = String(this.#toDisplayValue(option));\n        const match = val.toLowerCase().trim().includes(this._searchTerm.trim().toLowerCase());\n        foundInSearch.push({ match, option });\n      }\n    }\n    // if the option is a group header, and any of the items in the group match, show the group header\n    if (groupHeadersExist && this.typeahead) {\n      const groupHeaders = new Set();\n      for (const result of foundInSearch) {\n        if (!isGroupHeader(result.option) && result.match) {\n          const header = OmniDropdown.findGroupHeaderForItem(result.option, this.options);\n          if (header) {\n            groupHeaders.add(header);\n          }\n        }\n      }\n      foundInSearch.forEach(result => {\n        if (groupHeaders.has(result.option)) {\n          result.match = true;\n        }\n      });\n    }\n\n    return foundInSearch.filter(result => result.match).map(result => result.option);\n  }\n\n  #handleKeysOnDropdown = (e: KeyboardEvent) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.updateComplete.then(() => {\n      if (e.key === 'Enter' && !this.opened) {\n        this.#handleTargetClicked(e);\n      }\n      if (e.key === 'Escape') {\n        this.#handleTargetClicked(e, true);\n      }\n    });\n  };\n\n  #toDisplayValue(option: Option) {\n    return option && typeof option === 'object' ? option.value : option;\n  }\n\n  #handleRemoveItem(e: CustomEvent<Option>): void {\n    e.stopPropagation();\n    if (!this.disabled) {\n      this.#handleSelectChange(e);\n    }\n  }\n\n  #emitChange(): void {\n    const [firstSelected] = [...this._selected.values()];\n    const allSelected = [...this._selected.values()];\n    const eventDetail = {\n      detail: this.multiselect ? allSelected : firstSelected ? firstSelected : null\n    };\n    this.dispatchNewEvent('change', eventDetail);\n  }\n\n  get #selectedToFormDataString() {\n    return [...this._selected.values()]\n      .map(one => {\n        // TODO: decide if should an object be mapped to value, or left as the object?\n        if (one && typeof one === 'object') {\n          return String(one.value);\n        }\n        return String(one);\n      })\n      .join(',');\n  }\n\n  get #labelTemplate(): TemplateResult | typeof nothing {\n    if (!this.label) return nothing;\n    const tooltipLabel = html`\n      <div class=\"label-container ${this.labelPosition}\">\n        <label part=\"label\">${this.label}</label>\n        ${this.labelTooltip\n          ? html`\n              <omni-tooltip>\n                <omni-icon slot=\"invoker\" icon-id=\"icon:informative:info\"></omni-icon>\n                <span slot=\"content\">${this.labelTooltip}</span>\n              </omni-tooltip>\n            `\n          : nothing}\n      </div>\n    `;\n    return tooltipLabel;\n  }\n\n  /** toggles opened property and emits event */\n  #handleTargetClicked(e, opened = this.opened) {\n    this.opened = this.disabled ? false : !opened;\n    if (this.typeahead && !this.searchindropdown && !this.opened) {\n      this.opened = true;\n    }\n    this.dispatchNewEvent('dropdown', { detail: this.opened });\n  }\n\n  #handleSearchChange({ detail: { value } }: CustomEvent<{ value: string }>) {\n    this._searchTerm = value;\n  }\n\n  get #searchInputTemplate() {\n    return html`\n      <omni-search\n        .inputDebounceTimer=${this.inputDebounceTimer}\n        .value=${this._searchTerm}\n        .ph=\"${this.searchPlaceholder}\"\n        isopen\n        @search-update=${this.#handleSearchChange}>\n      </omni-search>\n    `;\n  }\n\n  // TODO decide what the 'clear' event does. does it clear the current selection and emit an event?\n  #handleVariantClear(e: Event) {\n    e.stopPropagation();\n    this.reset();\n    this.dispatchNewEvent('clear');\n  }\n\n  get #innerTargetTemplateForType() {\n    const targetTypes: Record<string, () => TemplateResult | typeof nothing> = {\n      placeholder: () => {\n        const sliceAt = 30;\n        const placeholderToDisplay =\n          this.placeholder.slice(0, sliceAt) + (this.placeholder.length > sliceAt ? '...' : '');\n        return html`<p class=\"${this.variant === 'label' ? 'single-select label-variant' : ''}\">\n          ${placeholderToDisplay}\n        </p>`;\n      },\n      one: () => {\n        const selected = [...this._selected.values()][0];\n        return html`<p class=\"single-select ${this.variant === 'label' ? 'label-variant' : ''}\">\n          ${this.#toDisplayValue(selected)}\n        </p>`;\n      },\n      multi: () => {\n        if (!this._computedTargetWidth) return nothing;\n        const selectedForPillList: Option[] = [...this._selected.values()];\n        const innerWidths = 20 + 18 + 26 + 30; // padding-left, tooltip width, arrow width, padding-right\n        return html`<omni-pill-list\n          class=\"${this.disabled ? 'enable-tooltip' : ''}\"\n          .items=${selectedForPillList}\n          .overflowWidth=${this._computedTargetWidth - innerWidths}\n          @remove=${this.#handleRemoveItem}>\n        </omni-pill-list>`;\n      },\n      typeahead: () => this.#searchInputTemplate\n    };\n    if (this.multiselect && this._hasGroupHeaders) {\n      return targetTypes.placeholder();\n    }\n    if (this.typeahead && !this.searchindropdown) {\n      return targetTypes.typeahead();\n    }\n    if (this.placeholder && !this._selected.size) {\n      return targetTypes.placeholder();\n    }\n    if (this._selected.size === 1 && !this.multiselect) {\n      return targetTypes.one();\n    }\n    return targetTypes.multi();\n  }\n\n  get #targetTemplate(): TemplateResult {\n    const classes = classMap({\n      target: true,\n      opened: this.opened,\n      filled: this._selected.size > 0,\n      'has-error': this.error ? true : false, // TODO: make this work with internals\n      typeahead: this.typeahead && !this.searchindropdown,\n      [this.labelPosition]: true,\n      'label-variant': this.variant === 'label'\n    });\n    return html`\n      <div class=\"${classes}\" part=\"target ${this.opened ? 'opened' : ''}\" @click=${this.#handleTargetClicked}>\n        ${this.#innerTargetTemplateForType}\n        <div class=\"target-icons\">\n          ${!this.typeahead || this.searchindropdown\n            ? html`<omni-icon icon-id=\"omni:interactive:${this.opened ? 'up' : 'down'}\"> </omni-icon>`\n            : nothing}\n          ${this.variant === 'label' && this._selected.size && this.showxicon\n            ? html`<omni-icon\n                class=\"x-close is-size-6\"\n                icon-id=\"icon:interactive:remove\"\n                @click=${this.#handleVariantClear}></omni-icon>`\n            : nothing}\n        </div>\n      </div>\n    `;\n  }\n\n  #handleEnterOnItem(e: CustomEvent<{ eventKey: string; value: Option }>) {\n    if (e.detail.eventKey === 'Enter') {\n      this.#commitSelections([e.detail.value]);\n    }\n  }\n\n  #handleDynamicAddition() {\n    this.options.push(this._searchTerm);\n    this.select([this._searchTerm]);\n    this.#handleTargetClicked(null);\n    this._searchTerm = '';\n  }\n\n  #handleSelectChange({ detail: activeOption }: CustomEvent<Option>) {\n    this.#commitSelections([activeOption]);\n  }\n\n  get #dropdownTemplate(): TemplateResult | typeof nothing {\n    if (!this.opened) return nothing;\n    const classes = classMap({\n      dropdown: true,\n      'no-label': !this.label,\n      top: this.labelPosition === 'top',\n      left: this.labelPosition === 'left',\n      [this.dropdownAlignment]: true,\n      'label-variant': this.variant === 'label',\n      'cursor-default': this._isLoading || !this._filteredOptions?.length,\n      padding: this._filteredOptions?.length || this._searchTerm || this._isLoading || this.searchindropdown\n    });\n    // left label position is secondary, so rather than use classes, use calculated positions to align\n    const inlineStyles = styleMap(\n      this.labelPosition === 'left'\n        ? {\n            ...(this._computedLabelWidth ? { left: `${this._computedLabelWidth}px` } : {}),\n            ...(this._computedTargetWidth ? { width: `${this._computedTargetWidth}px` } : {})\n          }\n        : {}\n    );\n    return html`\n      <div part=\"dropdown\" class=\"${classes}\" style=${inlineStyles}>\n        ${this.selectall && this.multiselect\n          ? html`<div class=\"select-all-button\">\n              <p>Select : <a @click=${() => this.select(this.options)}>All</a> | <a @click=${this.reset}>None</a></p>\n            </div>`\n          : nothing}\n        ${this.searchindropdown ? this.#searchInputTemplate : nothing}\n        ${this._isLoading ? html`<omni-loading-indicator></omni-loading-indicator>` : nothing}\n        ${this._filteredOptions?.length && !this._isLoading\n          ? html` <omni-options\n              ?hasgroupheaders=${this.options.some(one => (one as GroupHeader).groupheader)}\n              .options=${this._filteredOptions}\n              .multiselect=${this.multiselect}\n              .disabledList=${new Set([...this._disabled, ...this._disabledOnMaxSet])}\n              .disabledMessage=${this.disabledMessage}\n              .selected=${this._selected}\n              @selectChange=${this.#handleSelectChange}\n              @enterOnItem=${this.#handleEnterOnItem}></omni-options>`\n          : nothing}\n        ${!this._filteredOptions?.length && !this._isLoading && this.dynamicadditions && this._searchTerm\n          ? html`<div class=\"item\">\n              <p class=\"add-dynamic\" @click=${this.#handleDynamicAddition}>add ${this._searchTerm} as option</p>\n            </div>`\n          : nothing}\n        ${!this._filteredOptions?.length && !this._isLoading && !this.dynamicadditions && this._searchTerm\n          ? html`<div class=\"item disabled\">\n              <p class=\"no-results\">No results</p>\n            </div>`\n          : nothing}\n      </div>\n    `;\n  }\n\n  get #footerTemplate() {\n    if (this.hidefooter) return nothing;\n    const footerSpacer = html`<div class=\"footer-spacer\"></div>`;\n    if (!this.error && !this.helpText) return footerSpacer;\n    if (this.error) {\n      return html` <div class=\"footer-container error-text\">\n        <omni-icon icon-id=\"omni:informative:error\"></omni-icon>\n        <span>${this.error}</span>\n      </div>`;\n    }\n    if (this.helpText) {\n      return html`\n        <div class=\"footer-container help-text\">\n          <span>${this.helpText}</span>\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * - logic for selecting single, multi, noselct, and disabled options.\n   * - handles form value and validity\n   * - TODO: refactor for simplicity and handle revalidating on min/max changes after init */\n  #commitSelections(options: Option[], shouldSelect: boolean = null, skipEmit: boolean = false) {\n    if (!options.length) return;\n    for (const option of options) {\n      if (this._disabled.has(option)) continue;\n      const existsInSelected = shouldSelect ?? this._selected.has(option);\n      this._internals.setValidity({});\n      const logicHandler = {\n        singleselect: () => {\n          this._selected.clear();\n          if (!existsInSelected) {\n            this._selected.add(option);\n            this._internals.setFormValue(this.#selectedToFormDataString);\n          } else {\n            this._internals.setFormValue('');\n            if (this.required) {\n              this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this.targetEl);\n            }\n          }\n          this.opened = false;\n        },\n        multiselect: () => {\n          if (!existsInSelected) {\n            this._selected.add(option);\n            this._internals.setFormValue(this.#selectedToFormDataString);\n          } else {\n            this._selected.delete(option);\n            this._internals.setFormValue(this.#selectedToFormDataString);\n          }\n          // required and min and max not set\n          if (this.required && this._selected.size < 1 && !this.min && !this.max) {\n            this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this.targetEl);\n          }\n          // only min is set\n          if (this.min && !this.max && this._selected.size < this.min) {\n            this._internals.setValidity(\n              { rangeUnderflow: true },\n              `Must make at least ${this.min} selections.`,\n              this.targetEl\n            );\n          }\n          // only max is set\n          if (!this.min && this.max && this._selected.size > this.max) {\n            this._internals.setValidity(\n              { rangeOverflow: true },\n              `Only ${this.max} maximum selections allowed.`,\n              this.targetEl\n            );\n          }\n          // min and max are set\n          if (this.min && this.max && (this._selected.size < this.min || this._selected.size > this.max)) {\n            this._internals.setValidity(\n              { customError: true },\n              `Must make at least ${this.min} minimum and ${this.max} maximum selections.`,\n              this.targetEl\n            );\n          }\n        }\n      };\n      logicHandler[this.multiselect ? 'multiselect' : 'singleselect']();\n    }\n    if (this.valid) {\n      this.error = '';\n    }\n    this._selected = new Set(this._selected);\n    this.#updateReflectedValue();\n    if (!skipEmit) {\n      this.#emitChange();\n    }\n    if (this.noselect) {\n      this._selected = new Set();\n      this.#updateReflectedValue();\n    }\n  }\n\n  #updateReflectedValue() {\n    this.value = [...this._selected.values()];\n  }\n\n  /** select items in dropdown */\n  public select(options: Option[]) {\n    this.#commitSelections(options, false);\n  }\n\n  /** unselect items in dropdown */\n  public unselect(options: Option[]) {\n    this.#commitSelections(options, true);\n  }\n\n  /** toggle items to be selected or unselected based on current state */\n  public toggle(options: Option[]) {\n    this.#commitSelections(options);\n  }\n\n  /** add options to the list of disabled options */\n  public disableOptions(options: Option[]) {\n    options.forEach(option => {\n      this._disabled.add(option);\n    });\n  }\n\n  /** reset all selected options, form value, and reflected value */\n  public reset() {\n    this._selected = new Set();\n    this._disabled = new Set();\n    // if the option is an object and disabled is set, keep it disabled\n    this.options.forEach(option => {\n      if (option && typeof option === 'object' && option.disabled) {\n        this._disabled.add(option);\n      }\n    });\n    this.#updateReflectedValue();\n    if (this.required) {\n      this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this.targetEl);\n    } else {\n      this._internals.setValidity({});\n    }\n    this._internals.setFormValue('');\n    this.#emitChange();\n  }\n\n  /** @internal */\n  #conditionalLeftLabelWrapper(template: TemplateResult) {\n    if (this.labelPosition === 'left') {\n      return html` <div class=\"wrapper\">${template}</div> `;\n    } else {\n      return template;\n    }\n  }\n\n  //prettier-ignore\n  render() {\n    return html`\n      <div class=\"container ${this.labelPosition}\">\n        ${this.#conditionalLeftLabelWrapper(html` \n          ${this.#labelTemplate} \n          ${this.#targetTemplate} \n        `)}\n        ${this.#footerTemplate} \n        ${this.#dropdownTemplate}\n      </div>\n    `;\n  }\n}\n\nOmniElement.register('omni-dropdown', OmniDropdown);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-dropdown': OmniDropdown;\n  }\n}\n"],
  "mappings": "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",
  "names": ["option"]
}
