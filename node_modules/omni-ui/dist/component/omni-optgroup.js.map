{
  "version": 3,
  "sources": ["../../lib/component/omni-optgroup.js"],
  "sourcesContent": ["/*\n * DO NOT USE this functionality of this file is superceded by\n * omni-options and will be removed in a future release\n */\nimport { html, css } from 'lit';\nimport { OmniElement } from '../omni-element.js';\n/**\n * OmniOptgroup emulates a regular <optgroup> HTMLOptgroupElement\n * @element omni-optgroup\n */\nexport class OmniOptgroup extends OmniElement {\n  static get properties() {\n    return {\n      indeterminate: {\n        type: Boolean\n      },\n      disabled: { type: Boolean, reflect: true },\n      label: {\n        type: String,\n        reflect: true,\n        converter: {\n          // when the name is empty remove the attribute\n          toAttribute(value) {\n            const name = value.trim();\n            return name || undefined;\n          }\n        }\n      }\n    };\n  }\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          contain: strict style;\n          display: flex;\n          flex-direction: column;\n          margin: 0.1rem;\n          padding: 0;\n          margin: 0;\n          border: 0;\n          --padding-adjust: 1em;\n        }\n        :host([disabled]) {\n          pointer-events: none;\n          --color: var(--color-disabled);\n          --icon-border: var(--icon-border-disabled);\n          --option-hover: transparent;\n        }\n      `\n    ];\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('option', this._option);\n  }\n\n  _option(event) {\n    if (this.disabled) {\n      event.stopPropagation();\n    }\n    const node = event.target;\n    const optgroup = node.hasAttribute('optgroup');\n    if (optgroup) {\n      // do nothing\n      event.stopPropagation();\n      return;\n    }\n    this.determine();\n  }\n\n  toggle(on) {\n    const option = this.shadowRoot.querySelector('omni-option');\n    if (on === undefined) {\n      on = !option.selected;\n    }\n    const direction = Boolean(on);\n    this.options.forEach(node => {\n      node.selected = direction;\n    });\n    this.indeterminate = false;\n    option.selected = direction;\n  }\n\n  /* debounced, updates the indeterminate attribute\n\t   based on a mix of events\n   */\n  determine() {\n    cancelAnimationFrame(this._determine);\n    this._determine = requestAnimationFrame(() => {\n      if (!this.closest('[multiple]')) return;\n      const { options } = this;\n      const selectedCount = this.selectedOptions.length;\n      const total = options.length;\n      // none or all selected ?\n      this.indeterminate = !(!selectedCount || total === selectedCount);\n      // all selected ?\n      this.shadowRoot.querySelector('omni-option[optgroup]').selected = total === selectedCount;\n    });\n  }\n\n  // returns selected children\n  get selectedOptions() {\n    return this.querySelectorAll(':scope > omni-option[selected], :scope > option[selected]');\n  }\n\n  // returns option children\n  get options() {\n    return this.querySelectorAll(':scope > omni-option, :scope > option');\n  }\n\n  _slotchange() {\n    this.determine();\n  }\n\n  render() {\n    return html`\n      <omni-option ?indeterminate=${this.indeterminate} optgroup>${this.label}</omni-option>\n      <div><slot @slotchange=${this._slotchange}></slot></div>\n    `;\n  }\n}\n\nOmniOptgroup.register('omni-optgroup', OmniOptgroup);\n"],
  "mappings": "AAIA,SAAS,MAAM,WAAW;AAC1B,SAAS,mBAAmB;AAKrB,MAAM,qBAAqB,YAAY;AAAA,EAC5C,WAAW,aAAa;AACtB,WAAO;AAAA,MACL,eAAe;AAAA,QACb,MAAM;AAAA,MACR;AAAA,MACA,UAAU,EAAE,MAAM,SAAS,SAAS,KAAK;AAAA,MACzC,OAAO;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,WAAW;AAAA;AAAA,UAET,YAAY,OAAO;AACjB,kBAAM,OAAO,MAAM,KAAK;AACxB,mBAAO,QAAQ;AAAA,UACjB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAW,SAAS;AAClB,WAAO;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBF;AAAA,EACF;AAAA,EAEA,cAAc;AACZ,UAAM;AACN,SAAK,iBAAiB,UAAU,KAAK,OAAO;AAAA,EAC9C;AAAA,EAEA,QAAQ,OAAO;AACb,QAAI,KAAK,UAAU;AACjB,YAAM,gBAAgB;AAAA,IACxB;AACA,UAAM,OAAO,MAAM;AACnB,UAAM,WAAW,KAAK,aAAa,UAAU;AAC7C,QAAI,UAAU;AAEZ,YAAM,gBAAgB;AACtB;AAAA,IACF;AACA,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,OAAO,IAAI;AACT,UAAM,SAAS,KAAK,WAAW,cAAc,aAAa;AAC1D,QAAI,OAAO,QAAW;AACpB,WAAK,CAAC,OAAO;AAAA,IACf;AACA,UAAM,YAAY,QAAQ,EAAE;AAC5B,SAAK,QAAQ,QAAQ,UAAQ;AAC3B,WAAK,WAAW;AAAA,IAClB,CAAC;AACD,SAAK,gBAAgB;AACrB,WAAO,WAAW;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY;AACV,yBAAqB,KAAK,UAAU;AACpC,SAAK,aAAa,sBAAsB,MAAM;AAC5C,UAAI,CAAC,KAAK,QAAQ,YAAY;AAAG;AACjC,YAAM,EAAE,QAAQ,IAAI;AACpB,YAAM,gBAAgB,KAAK,gBAAgB;AAC3C,YAAM,QAAQ,QAAQ;AAEtB,WAAK,gBAAgB,EAAE,CAAC,iBAAiB,UAAU;AAEnD,WAAK,WAAW,cAAc,uBAAuB,EAAE,WAAW,UAAU;AAAA,IAC9E,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,IAAI,kBAAkB;AACpB,WAAO,KAAK,iBAAiB,2DAA2D;AAAA,EAC1F;AAAA;AAAA,EAGA,IAAI,UAAU;AACZ,WAAO,KAAK,iBAAiB,uCAAuC;AAAA,EACtE;AAAA,EAEA,cAAc;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,SAAS;AACP,WAAO;AAAA,oCACyB,KAAK,aAAa,aAAa,KAAK,KAAK;AAAA,+BAC9C,KAAK,WAAW;AAAA;AAAA,EAE7C;AACF;AAEA,aAAa,SAAS,iBAAiB,YAAY;",
  "names": []
}
