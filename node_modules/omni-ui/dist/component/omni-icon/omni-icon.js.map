{
  "version": 3,
  "sources": ["../../../lib/component/omni-icon/omni-icon.ts"],
  "sourcesContent": ["import { html, svg, type TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { resolveOmniIconset } from '../../icon/omni-icon-resolver.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--color-icon-lines: var(--color-almost-black);fill:var(--color-icon-lines);height:1em;width:1em}:host svg{vertical-align:top}:host svg[fill-stroke],:host svg[stroke-fill],:host ::slotted(:is(svg[fill-stroke],svg[stroke-fill])){stroke:var(--color-icon-lines)}:host(.is-info),:host(.is-active),:host(.is-success),:host(.is-warning),:host(.is-danger){--color-icon-lines: white;width:2em;height:2em}:host(.is-info) div,:host(.is-active) div,:host(.is-success) div,:host(.is-warning) div,:host(.is-danger) div,:host(.is-info) slot,:host(.is-active) slot,:host(.is-success) slot,:host(.is-warning) slot,:host(.is-danger) slot{display:flex;align-items:center;justify-content:center;transform-style:preserve-3d;width:100%;height:100%}:host(.is-info) svg,:host(.is-active) svg,:host(.is-success) svg,:host(.is-warning) svg,:host(.is-danger) svg,:host(.is-info) ::slotted(svg),:host(.is-active) ::slotted(svg),:host(.is-success) ::slotted(svg),:host(.is-warning) ::slotted(svg),:host(.is-danger) ::slotted(svg){height:50%;width:50%}:host(.is-info) div::before,:host(.is-active) div::before,:host(.is-success) div::before,:host(.is-warning) div::before,:host(.is-danger) div::before,:host(.is-info) div::after,:host(.is-active) div::after,:host(.is-success) div::after,:host(.is-warning) div::after,:host(.is-danger) div::after,:host(.is-info) slot::before,:host(.is-active) slot::before,:host(.is-success) slot::before,:host(.is-warning) slot::before,:host(.is-danger) slot::before,:host(.is-info) slot::after,:host(.is-active) slot::after,:host(.is-success) slot::after,:host(.is-warning) slot::after,:host(.is-danger) slot::after{content:\"\";display:block;position:absolute;border-radius:50%;width:100%;height:100%}:host(.is-info) div::before,:host(.is-active) div::before,:host(.is-success) div::before,:host(.is-warning) div::before,:host(.is-danger) div::before,:host(.is-info) slot::before,:host(.is-active) slot::before,:host(.is-success) slot::before,:host(.is-warning) slot::before,:host(.is-danger) slot::before{box-shadow:inset 0 0 0 1.5px rgba(255,255,255,.3);transform:translateZ(-2px)}:host(.is-info) div::after,:host(.is-active) div::after,:host(.is-success) div::after,:host(.is-warning) div::after,:host(.is-danger) div::after,:host(.is-info) slot::after,:host(.is-active) slot::after,:host(.is-success) slot::after,:host(.is-warning) slot::after,:host(.is-danger) slot::after{background-color:rgba(255,255,255,.15);clip-path:polygon(0 20%, 0 0, 100% 0, 100% 80%);transform:translateZ(-1px)}:host(.is-info) div::before,:host(.is-info) slot::before{background-image:linear-gradient(172deg, var(--color-electric-blue) 11%, #03bbf3 122%)}:host(.is-success) div::before,:host(.is-success) slot::before{background-image:linear-gradient(144deg, var(--color-mint), #00e3ae 125%)}:host(.is-warning) div::before,:host(.is-warning) slot::before{background-image:linear-gradient(158deg, var(--color-honeycomb) -24%, #f0b248 126%)}:host(.is-danger) div::before,:host(.is-danger) slot::before{background-image:linear-gradient(137deg, var(--color-melon) 4%, #f56c8e)}:host(.is-active) div::before,:host(.is-active) slot::before{box-shadow:inset 0 0 0 1px var(--color-electric-blue);background-image:linear-gradient(93deg, #fff 50%, #03bbf3 50%, var(--color-electric-blue))}:host(.is-active) div,:host(.is-active) slot{--color-icon-lines: var(--color-electric-blue);fill:var(--color-icon-lines)}:host(.is-active) div::after,:host(.is-active) slot::after{background-color:#fff;clip-path:none;width:84%;height:84%;box-shadow:0 1px 2px 1px var(--color-electric-blue)}`\n\n\n/**\n * Optimized SVG sets that load dynamically\n *\n * To include within your project `import { OmniIconElement } from 'omni-ui';`\n *\n * @tagname omni-icon\n * @cssprop [--color-icon-lines=#3b3e3f] override icon fill color\n */\nexport class OmniIconElement extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  /** aria-label */\n  @property({ type: String, attribute: 'aria-label', reflect: true }) ariaLabel: string = 'icon';\n  /** icon-id for omni-icon */\n  @property({ type: String, attribute: 'icon-id', reflect: true }) iconId = '';\n  // eslint-disable-next-line lit/no-native-attributes\n  @property({ type: String, reflect: true }) role: string = 'img';\n  /**@internal */\n  icon: TemplateResult;\n  /**@internal */\n  resolver: (group: string) => Promise<TemplateResult>;\n\n  update(changedProperties) {\n    super.update(changedProperties);\n    if (changedProperties.has('iconId')) {\n      this._updateIcon();\n    }\n  }\n\n  /**@internal */\n  _updateIcon(resolve = this.resolver ?? resolveOmniIconset) {\n    const iconParts = (this.iconId || '').trim().split(':');\n    const [collection, group, id] = iconParts;\n\n    if (!this.iconId) {\n      console.warn(`<omni-icon>: icon-id is not set`);\n      return;\n    }\n\n    return resolve(group)\n      .then(res => {\n        const icon = res[id]();\n        this.icon = icon;\n        return { res, collection, group, id, icon };\n      })\n      .catch(error => {\n        console.error(`<omni-icon>: Error resolving icon-id ${this.iconId}`, error);\n        this.icon = svg`?`;\n        return error;\n      })\n      .finally(() => {\n        this.requestUpdate();\n      });\n  }\n\n  render() {\n    return html`<div part=\"icon\">${this.icon ?? ''}</div>`;\n  }\n}\n\nOmniElement.register('omni-icon', OmniIconElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-icon': OmniIconElement;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,MAAM,WAAgC;AAC/C,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,0BAA0B;AAEnC,SAAQ,WAAU;AAClB,MAAM,SAAS;AAWR,MAAM,wBAAwB,YAAY;AAAA,EAA1C;AAAA;AAM+D,qBAAoB;AAEvB,kBAAS;AAE/B,gBAAe;AAAA;AAAA,EAT1D,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAaA,OAAO,mBAAmB;AACxB,UAAM,OAAO,iBAAiB;AAC9B,QAAI,kBAAkB,IAAI,QAAQ,GAAG;AACnC,WAAK,YAAY;AAAA,IACnB;AAAA,EACF;AAAA;AAAA,EAGA,YAAY,UAAU,KAAK,YAAY,oBAAoB;AACzD,UAAM,aAAa,KAAK,UAAU,IAAI,KAAK,EAAE,MAAM,GAAG;AACtD,UAAM,CAAC,YAAY,OAAO,EAAE,IAAI;AAEhC,QAAI,CAAC,KAAK,QAAQ;AAChB,cAAQ,KAAK,iCAAiC;AAC9C;AAAA,IACF;AAEA,WAAO,QAAQ,KAAK,EACjB,KAAK,SAAO;AACX,YAAM,OAAO,IAAI,EAAE,EAAE;AACrB,WAAK,OAAO;AACZ,aAAO,EAAE,KAAK,YAAY,OAAO,IAAI,KAAK;AAAA,IAC5C,CAAC,EACA,MAAM,WAAS;AACd,cAAQ,MAAM,wCAAwC,KAAK,MAAM,IAAI,KAAK;AAC1E,WAAK,OAAO;AACZ,aAAO;AAAA,IACT,CAAC,EACA,QAAQ,MAAM;AACb,WAAK,cAAc;AAAA,IACrB,CAAC;AAAA,EACL;AAAA,EAEA,SAAS;AACP,WAAO,wBAAwB,KAAK,QAAQ,EAAE;AAAA,EAChD;AACF;AA9CsE;AAAA,EAAnE,SAAS,EAAE,MAAM,QAAQ,WAAW,cAAc,SAAS,KAAK,CAAC;AAAA,GANvD,gBAMyD;AAEH;AAAA,EAAhE,SAAS,EAAE,MAAM,QAAQ,WAAW,WAAW,SAAS,KAAK,CAAC;AAAA,GARpD,gBAQsD;AAEtB;AAAA,EAA1C,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAV9B,gBAUgC;AA4C7C,YAAY,SAAS,aAAa,eAAe;",
  "names": []
}
