import { type TemplateResult } from 'lit';
import { OmniElement } from '../../omni-element.js';
import { resolveOmniIconset } from '../../icon/omni-icon-resolver.js';
/**
 * Optimized SVG sets that load dynamically
 *
 * To include within your project `import { OmniIconElement } from 'omni-ui';`
 *
 * @tagname omni-icon
 * @cssprop [--color-icon-lines=#3b3e3f] override icon fill color
 */
export declare class OmniIconElement extends OmniElement {
    static get styles(): import("lit").CSSResult[];
    /** aria-label */
    ariaLabel: string;
    /** icon-id for omni-icon */
    iconId: string;
    role: string;
    /**@internal */
    icon: TemplateResult;
    /**@internal */
    resolver: (group: string) => Promise<TemplateResult>;
    update(changedProperties: any): void;
    /**@internal */
    _updateIcon(resolve?: typeof resolveOmniIconset | ((group: string) => Promise<TemplateResult>)): Promise<any>;
    render(): TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'omni-icon': OmniIconElement;
    }
}
//# sourceMappingURL=omni-icon.d.ts.map