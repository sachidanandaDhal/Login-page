import { ElementInternalsBase } from '../../element-internals-base.js';
/**
 * To include within your project `import { OmniTextarea } from 'omni-ui';`
 *
 * @tagname omni-textarea
 * @attr {boolean} transparent - transparent background of the textarea
 * @event {string} change - fires when the user starts making change in textarea
 */
export declare class OmniTextarea extends ElementInternalsBase<string> {
    #private;
    /**@internal */
    static get shadowRootOptions(): {
        delegatesFocus: boolean;
        mode: ShadowRootMode;
        slotAssignment?: SlotAssignmentMode;
    };
    static get styles(): import("lit").CSSResult[];
    /** Placeholder for ommni-textarea */
    placeholder: string;
    /** Value of omni-textarea */
    value: string;
    /** Name of omni-textarea */
    name: string;
    /** Label of omni-textarea */
    label: string;
    /** Error message of omni-textarea */
    error: string;
    /** Error message of omni-textarea when value is missing */
    valueMissingMessage: string;
    /** Boolean property show/hide footer */
    hidefooter: boolean;
    /** Boolean property to resize the textarea */
    resize: boolean;
    /** Number of rows in omni-textarea */
    rows: number;
    /** Max number of rows in omni-textarea */
    maxRows: number;
    /** Character count for omni-textarea */
    characterCount: number;
    /** Boolean property to show/hide character count */
    showCharacterCountdown: boolean;
    private _charactersRemaining;
    private textarea;
    firstUpdated(): Promise<void>;
    /** clear the textarea and resize to the default rows */
    clear(): Promise<void>;
    render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'omni-textarea': OmniTextarea;
    }
}
//# sourceMappingURL=omni-textarea.d.ts.map