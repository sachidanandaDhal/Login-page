{
  "version": 3,
  "sources": ["../../../lib/component/omni-assist/omni-assist-chat-circle.ts"],
  "sourcesContent": ["import { html, nothing } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { OmniAssistDragController } from './omni-assist-drag-controller.js';\nimport type { ChatHistoryItem } from './omni-assist.types.js';\nimport type { OmniTextarea } from '../omni-textarea/omni-textarea.js';\n\nimport '../omni-dot-loader/omni-dot-loader.js';\nimport '../omni-markdown/omni-markdown.js';\nimport './omni-assist-feedback-controls.js';\nimport '../omni-tooltip/omni-tooltip.js';\nimport '../omni-icon/omni-icon.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{position:fixed;z-index:1000;--offset-left: 40px;--chat-window-min-height: max(60vh, 400px);--chat-window-max-height: calc(100vh - var(--omni-app-layout-header-height) - 2rem);--chat-window-max-width: calc(100vw - calc(80px * 2) - var(--offset-left))}.drag-underlay{position:relative;width:0;height:0;z-index:999}:host([dragging]){cursor:grabbing !important}:host([dragging]) .drag-underlay{position:fixed;height:100%;width:100%;inset:0;background-color:rgba(0,0,0,0)}omni-tile{width:500px;min-height:var(--chat-window-min-height);max-height:var(--chat-window-max-height);box-shadow:rgba(0,0,50,.3) 1px 7px 13px;border-radius:10px;position:absolute}omni-tile.expanded{width:var(--chat-window-max-width);height:var(--chat-window-max-height)}omni-tile::part(body-slot){display:flex;flex-direction:column;justify-content:flex-end;align-items:stretch;padding-bottom:1rem}omni-tile::part(header-slot){border:0 !important}omni-tile.BL{bottom:0;margin-left:70px}omni-tile.TL{top:0;margin-left:70px}omni-tile.BR{bottom:0;right:0;margin-right:70px}omni-tile.TR{top:0;right:0;margin-right:70px}.loading-container{display:flex;justify-content:flex-start;align-items:center}.loading-container .omni-icon-image{margin-right:.75rem;color:#00a1d2}.one-chat-history{margin:1rem 0}.one-chat-history .chat-text-box{padding:10px;box-shadow:rgba(1,33,78,.1) 0 10px 60px -5px;border-radius:10px;background-color:var(--color-white);color:var(--color-almost-black);margin:0 1.0714285714rem}.one-chat-history .chat-text-box omni-markdown{max-width:100%;--markdown-font-size: var(--size-4)}.one-chat-history.assistant{display:flex;flex-wrap:wrap;justify-content:flex-start;align-items:flex-start}.one-chat-history.assistant .chat-text-box{max-width:calc(100% - (25px + 2.1428571429rem))}.one-chat-history.assistant .omni-icon-image{color:#00a1d2}.one-chat-history.user{display:flex;flex-direction:row-reverse;flex-wrap:wrap;justify-content:flex-start;align-items:flex-start}.one-chat-history.user .chat-text-box{max-width:calc(100% - (25px + 2.1428571429rem));display:flex;white-space:pre-wrap}.one-chat-history .chat-timestamp{flex:0 0 100%;color:var(--color-shark);font-size:var(--size-7);padding:.3571428571rem 1.0714285714rem}.one-chat-history.user .chat-timestamp{text-align:right}.small-round-image{background:var(--color-white);width:25px;height:25px;border-radius:13px;box-shadow:rgba(0,0,0,.2) 1px 1px 9px 0;padding:2px}.small-round-image omni-icon{--color-icon-lines: #00a1d2}.small-round-image img{border-radius:21px;height:21px;width:21px}.trigger-icon{position:relative;display:inline-flex;padding:14px;border-radius:28px;background-color:#01a6d8;cursor:pointer;z-index:1001;transition:all 100ms ease-in-out}.trigger-icon omni-icon{--color-icon-lines: white}:host([dragging]) .trigger-icon{cursor:grabbing}:host([isopen]) .trigger-icon{background-color:rgba(207,233,245,.8)}:host([isopen]) .trigger-icon omni-icon{--color-icon-lines: #00a1d2}:host([isopen]) .trigger-icon:hover,.trigger-icon:hover{background-color:var(--color-blue-light);box-shadow:rgba(0,0,0,.2) 1px 1px 9px 0}:host([isopen]) .trigger-icon:hover omni-icon,.trigger-icon:hover omni-icon{--color-icon-lines: #00a1d2}.warning-message{display:flex;justify-content:space-between;align-items:center;padding:1rem;border-top:1px solid var(--color-blue-light);border-bottom:1px solid var(--color-blue-light);text-wrap:balance}.warning-message button{margin-left:10px}omni-tile.expanded>.warning-message{text-wrap:pretty}.chat-box-footer{background-color:rgb(var(--rgb-core-medium-two));border-bottom-left-radius:10px;border-bottom-right-radius:10px;display:flex}.chat-box-footer omni-textarea{flex-grow:1}.chat-box-footer .submit-button{align-self:flex-end;margin:0 0 4px 4px}.disclaimer-container{display:flex;justify-content:center;align-items:center;padding:.25rem 0}.disclaimer-container p{font-size:.7142857143rem;text-align:center;color:var(--color-almost-black)}`\n\nimport { OMNI_ASSIST_DISCLAIMER } from './omni-assist.shared.js';\n\n/**\n * To include within your project `import { OmniAssistChatCircle } from 'omni-ui/omni-assist-chat-circle.js';`\n *\n * @tagname omni-assist-chat-circle\n * @event {ChatSuggestion} submit-chat - fired when user submits chat through click or Enter\n * @event {Feedback} feedback - fired when user upvotes or downvotes chat response\n */\nexport class OmniAssistChatCircle extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  /** show the three dot loader and disable the input field */\n  @property({ type: Boolean }) isLoading: boolean = false;\n  /** indicate that streaming is occurring and disable the input field */\n  @property({ type: Boolean }) isStreaming: boolean = false;\n  /** array of chat history items to display */\n  @property({ type: Array }) history: ChatHistoryItem[] = [];\n  /** address to user profile image */\n  @property({ type: String }) userImage: string;\n  @property({ type: Boolean, reflect: true }) isOpen: boolean;\n  @property({ type: Boolean }) cornerGravity: boolean = true;\n  @property({ type: Boolean }) expanded: boolean = false;\n  /** display the feedback response controls */\n  @property({ type: Boolean, reflect: true }) unhide: boolean = false;\n  /** @internal */\n  @property({ type: Boolean, reflect: true }) dragging: boolean = false;\n  @property({ type: Number, reflect: true }) offsetLeft: number = 40;\n  @state() private _isWarningMessageDismissed: boolean = false;\n  /** @internal */\n  @query('omni-textarea') textarea: OmniTextarea;\n\n  #dateFormatter = new Intl.DateTimeFormat('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n\n  #dragController: OmniAssistDragController;\n\n  async connectedCallback() {\n    super.connectedCallback();\n    this.#dragController = new OmniAssistDragController(this, this.cornerGravity, this.offsetLeft);\n    this.style.setProperty('--offset-left', `${this.offsetLeft}px`);\n    this.addEventListener('omni-dragend', this.#handleDragend as EventListener);\n  }\n\n  /** handles click events from drag controller, in order to distinguish between clicks and drags  */\n  #handleDragend = (e: CustomEvent<{ isClick: boolean }>) => {\n    if (e.detail.isClick) {\n      this.isOpen = !this.isOpen;\n    }\n  };\n\n  willUpdate(changed: Map<string, unknown>) {\n    if (changed.has('cornerGravity') && typeof this.cornerGravity !== 'undefined') {\n      this.#dragController.cornerGravity = this.cornerGravity;\n    }\n    if (changed.has('offsetLeft')) {\n      this.#dragController.offsetLeft = this.offsetLeft;\n      this.#dragController.setPosition(null, true);\n      this.style.setProperty('--offset-left', `${this.offsetLeft}px`);\n    }\n  }\n\n  updated(changed: Map<string, unknown>) {\n    if (changed.has('history') && this.history.length > 0) {\n      this.scrollDown();\n    }\n  }\n\n  async scrollDown() {\n    await new Promise(res => {\n      setTimeout(res, 20);\n    });\n    const elems = this.shadowRoot.querySelectorAll('.scroll-target');\n    elems[elems.length - 1]?.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('omni-dragend', this.#handleDragend as EventListener);\n  }\n\n  get #userAvatarTemplate() {\n    const userImage = this.userImage ?? window.AN?.sso?.user?.userImage;\n    if (!userImage || userImage === '/static/img/shadow.png') {\n      return html`\n        <div class=\"small-round-image\">\n          <svg width=\"21\" height=\"21\" viewbox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M14 28a14 14 0 110-28 14 14 0 010 28zm5.2-10.6c-.3-.7-.6-1.1-1-1.6-.5-.5-1.7-1.1-2.5-.9-.7.2-.7.6-1.7.6s-1-.4-1.7-.6c-.8-.2-2 .4-2.4.9-.5.5-.8.9-1.1 1.6-.2.4-.6 1.5-.3 2s1 .8 2.9 1c1.2.2 2.6.2 2.6.2s1.4 0 2.6-.2c2-.2 2.6-.5 3-1 .2-.5-.2-1.6-.4-2zM14 14.2c1.5 0 3.1-1.8 3.1-3.7A3 3 0 0014 7.3a3 3 0 00-3.1 3.2c0 1.9 1.6 3.7 3.1 3.7z\"\n              fill=\"#BCBCCB\"\n              fill-rule=\"evenodd\"></path>\n          </svg>\n        </div>\n      `;\n    }\n    return html`<div class=\"small-round-image\">\n      <img src=\"${userImage}\" alt=\"user\" height=\"21\" width=\"21\" />\n    </div>`;\n  }\n\n  #assistAvatarTemplate(size: number, cssClasses: string) {\n    return html`\n      <span class=\"omni-icon-image ${cssClasses}\">\n        <omni-icon icon-id=\"omni:brand:omni\" style=\"height: ${size}px; width: ${size}px\"></omni-icon>\n      </span>\n    `;\n  }\n\n  async handleChat() {\n    const content = this.textarea.value.trimEnd();\n    if (!content) return;\n    this.dispatchNewEvent('submit-chat', { detail: content });\n    this.textarea.clear();\n  }\n\n  render() {\n    return html`\n      <omni-style>\n        <div @keyUp=${e => e.key === 'Enter' && e.target.click()}>\n          ${this.#assistAvatarTemplate(28, 'trigger-icon')}\n        </div>\n\n        <omni-tile\n          scroll\n          class=\"${this.isOpen ? '' : 'is-hidden'} ${this.#dragController.corner} ${this.expanded ? 'expanded' : ''}\"\n          @pointerdown=${e => e.stopPropagation()}>\n          <omni-toolbar slot=\"header\" class=\"p-3\">\n            <h3 slot=\"start\" class=\"title is-3\"><p>Assist</p></h3>\n            <omni-tooltip slot=\"end\">\n              <button\n                class=\"button is-text\"\n                slot=\"invoker\"\n                @click=${(e: PointerEvent) => {\n                  this.expanded = !this.expanded;\n                  (e.target as HTMLButtonElement).blur();\n                }}>\n                <omni-icon\n                  class=\"is-size-2\"\n                  icon-id=\"omni:interactive:${!this.expanded ? 'expand' : 'minimize'}\"></omni-icon>\n              </button>\n              <div slot=\"content\">${!this.expanded ? 'Expand Chat' : 'Minimize Chat'}</div>\n            </omni-tooltip>\n            <button\n              class=\"button is-text\"\n              slot=\"end\"\n              @click=${() => {\n                this.isOpen = false;\n              }}>\n              <omni-icon class=\"is-size-1\" icon-id=\"omni:interactive:close\"></omni-icon>\n            </button>\n          </omni-toolbar>\n          ${repeat(\n            this.history,\n            (item, idx) => idx,\n            (item, idx) => html`\n              <div class=\"one-chat-history ${item.role} scroll-target\">\n                ${item.role === 'user' ? this.#userAvatarTemplate : this.#assistAvatarTemplate(21, 'small-round-image')}\n                <div class=\"chat-text-box is-size-4 ${item.role}\">\n                  ${item.role === 'assistant'\n                    ? html`\n                        <omni-markdown .markdown=${item.content as string}></omni-markdown>\n                        <slot name=\"response-footer\">\n                          <omni-assist-feedback-controls\n                            class=\"is-size-6 pt-5 scroll-target\"\n                            .response=${item}\n                            .request=${this.history[idx - 1]}\n                            ?unhide=${this.unhide}>\n                          </omni-assist-feedback-controls>\n                        </slot>\n                      `\n                    : html`<p>${item.content}</p>`}\n                </div>\n                ${item.timestamp\n                  ? html` <div class=\"chat-timestamp\">${this.#dateFormatter.format(new Date(item.timestamp))}</div> `\n                  : nothing}\n              </div>\n            `\n          )}\n          ${this.isLoading\n            ? html`\n                <div class=\"loading-container\">\n                  ${this.#assistAvatarTemplate(21, 'small-round-image')}\n                  <omni-dot-loader class=\"is-size-7 scroll-target\"></omni-dot-loader>\n                </div>\n              `\n            : nothing}\n          <div slot=\"footer\" class=\"p-3 chat-box-footer\">\n            <omni-textarea\n              transparent\n              hidefooter\n              rows=\"1\"\n              maxRows=\"3\"\n              ?disabled=${this.isLoading || this.isStreaming}\n              placeholder=\"How can I help you?\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  this.handleChat();\n                }\n              }}></omni-textarea>\n            <button\n              ?disabled=${this.isLoading || this.isStreaming}\n              class=\"button is-text submit-button\"\n              @click=\"${() => !this.isLoading && this.handleChat()}\">\n              <omni-icon class=\"is-size-2\" icon-id=\"omni:interactive:forward\"></omni-icon>\n            </button>\n          </div>\n          <div class=\"disclaimer-container\" slot=\"footer\">${OMNI_ASSIST_DISCLAIMER}</div>\n        </omni-tile>\n      </omni-style>\n      ${this.dragging ? html`<div class=\"drag-underlay\"></div>` : nothing}\n    `;\n  }\n}\n\nOmniElement.register('omni-assist-chat-circle', OmniAssistChatCircle);\n\ndeclare global {\n  interface Window {\n    AN: {\n      sso: {\n        user: {\n          userImage: string;\n          fullName: string;\n          firstName: string;\n        };\n      };\n    };\n  }\n  interface HTMLElementTagNameMap {\n    'omni-assist-chat-circle': OmniAssistChatCircle;\n  }\n}\nexport type { ChatHistoryItem };\n"],
  "mappings": "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",
  "names": []
}
