var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
import { html } from "lit";
import { property, query, state } from "lit/decorators.js";
import { OmniElement } from "../../omni-element.js";
import { OmniStyleElement } from "../omni-style/omni-style.js";
OmniStyleElement.register();
class OmniAssistTruncateMultilineText extends OmniElement {
  // No shadow root (and therefore no component css styles)
  createRenderRoot() {
    return this;
  }
  async firstUpdated() {
    await this.updateComplete;
    const observer = new ResizeObserver((entries) => {
      for (const { target } of entries) {
        this.truncated = target.clientHeight < target.scrollHeight;
      }
    });
    observer.observe(this.textEl);
  }
  render() {
    return html`
      <div class="is-clearfix ${this.cssClass}">
        <div
          id="text"
          style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;">
          ${this.text}
        </div>
        ${this.truncated ? html`
              <button
                @click=${() => {
      this.textEl.style.display = this.textEl.style.display === "block" ? "-webkit-box" : "block";
    }}
                @keyup=${(e) => e.key === "Enter" && e.target.click()}
                style="background-color: unset"
                class="is-pulled-right p-0 has-text-primary is-size-3 has-text-weight-normal">
                View all
              </button>
            ` : ""}
      </div>
    `;
  }
}
__decorateClass([
  state()
], OmniAssistTruncateMultilineText.prototype, "truncated", 2);
__decorateClass([
  property({ type: String })
], OmniAssistTruncateMultilineText.prototype, "text", 2);
__decorateClass([
  property({ type: String })
], OmniAssistTruncateMultilineText.prototype, "cssClass", 2);
__decorateClass([
  query("#text")
], OmniAssistTruncateMultilineText.prototype, "textEl", 2);
OmniElement.register("omni-assist-truncate-multiline-text", OmniAssistTruncateMultilineText);
export {
  OmniAssistTruncateMultilineText
};
//# sourceMappingURL=omni-assist-truncate-multiline-text.js.map
