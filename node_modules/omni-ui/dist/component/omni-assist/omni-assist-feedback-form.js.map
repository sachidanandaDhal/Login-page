{
  "version": 3,
  "sources": ["../../../lib/component/omni-assist/omni-assist-feedback-form.ts"],
  "sourcesContent": ["import { html, type TemplateResult } from 'lit';\nimport { query } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\nimport '../omni-dialog-box/omni-dialog-box.js';\nimport { type OmniDialogBoxElement } from '../omni-dialog-box/omni-dialog-box.js';\nimport '../omni-dropdown/omni-dropdown.js';\nimport '../omni-style/omni-style.js';\nimport '../omni-textarea/omni-textarea.js';\nimport '../omni-tile/omni-tile.js';\nimport '../omni-toolbar/omni-toolbar.js';\n\nimport type { Feedback } from './omni-assist.types.js';\n\nimport {css} from 'lit';\nconst styles = css`omni-dialog-box{--dialog-background-color: #fcfdff}omni-dialog-box::part(dialog){box-shadow:var(--dialog-box-shadow)}omni-tile{height:auto;min-height:400px;overflow:auto;width:500px}omni-tile::part(header-slot){border-bottom:none}omni-tile::part(footer-slot){margin-bottom:1.0714285714rem}omni-dropdown{width:100%}`\n\n\nconst reasons = [\n  { id: 'incorrect', value: 'Factually incorrect' },\n  { id: 'missing', value: 'Missing information' },\n  { id: 'misleading', value: 'Misleading' },\n  { id: 'inappropriate', value: 'Inappropriate' },\n  { id: 'long', value: 'Too long' },\n  { id: 'short', value: 'Too short' }\n];\n\n/** @element omni-assist-feedback-form */\nexport class OmniAssistFeedbackForm extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  @query('omni-dialog-box') dialogEl: OmniDialogBoxElement;\n  @query('omni-dropdown') dropdownEl;\n  @query('omni-textarea') textareaEl;\n\n  showModal(): void {\n    this.dialogEl.showModal();\n    this.dropdownEl.reset();\n    this.textareaEl.value = '';\n  }\n\n  close(): void {\n    this.dialogEl.close();\n  }\n\n  #handleFormSubmit(): void {\n    if (!this.dropdownEl.valid) {\n      this.dropdownEl.error = 'Please select at least one reason';\n    }\n\n    if (!this.textareaEl.valid) {\n      this.textareaEl.error = 'Please provide some feedback';\n    }\n\n    if (this.dropdownEl.valid && this.textareaEl.valid) {\n      const data: Partial<Feedback> = {\n        // eslint-disable-next-line camelcase -- submitted Feedback data has keys that are camelcased\n        user_comment: this.textareaEl.value,\n        reason: this.dropdownEl.value\n      };\n\n      this.dispatchNewEvent('feedback', { detail: data });\n      this.close();\n    }\n  }\n\n  render(): TemplateResult {\n    return html`\n      <omni-style>\n        <omni-dialog-box>\n          <omni-tile slot=\"content\">\n            <omni-toolbar slot=\"header\">\n              <omni-tooltip slot=\"end\">\n                <button slot=\"invoker\" class=\"button is-text is-shadowless\" @click=${this.close}>\n                  <omni-icon icon-id=\"omni:interactive:close\"></omni-icon>\n                </button>\n              </omni-tooltip>\n            </omni-toolbar>\n            <div>\n              <omni-dropdown\n                multiselect\n                .options=${reasons}\n                label=\"What was not helpful?\"\n                placeholder=\"Select all that apply\"\n                required>\n              </omni-dropdown>\n              <omni-textarea\n                rows=\"5\"\n                maxRows=\"10\"\n                label=\"Please add some details for context\"\n                placeholder=\"Enter feedback\"\n                resize></omni-textarea>\n            </div>\n            <omni-toolbar slot=\"footer\">\n              <button slot=\"end\" class=\"button is-primary\" tabindex=\"0\" @click=${this.#handleFormSubmit}>Submit</button>\n            </omni-toolbar>\n          </omni-tile>\n        </omni-dialog-box>\n      </omni-style>\n    `;\n  }\n}\n\nOmniElement.register('omni-assist-feedback-form', OmniAssistFeedbackForm);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-assist-feedback-form': OmniAssistFeedbackForm;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,YAAiC;AAC1C,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,OAAO;AAEP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AACP,OAAO;AAIP,SAAQ,WAAU;AAClB,MAAM,SAAS;AAGf,MAAM,UAAU;AAAA,EACd,EAAE,IAAI,aAAa,OAAO,sBAAsB;AAAA,EAChD,EAAE,IAAI,WAAW,OAAO,sBAAsB;AAAA,EAC9C,EAAE,IAAI,cAAc,OAAO,aAAa;AAAA,EACxC,EAAE,IAAI,iBAAiB,OAAO,gBAAgB;AAAA,EAC9C,EAAE,IAAI,QAAQ,OAAO,WAAW;AAAA,EAChC,EAAE,IAAI,SAAS,OAAO,YAAY;AACpC;AAGO,MAAM,+BAA+B,YAAY;AAAA,EACtD,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAMA,YAAkB;AAChB,SAAK,SAAS,UAAU;AACxB,SAAK,WAAW,MAAM;AACtB,SAAK,WAAW,QAAQ;AAAA,EAC1B;AAAA,EAEA,QAAc;AACZ,SAAK,SAAS,MAAM;AAAA,EACtB;AAAA,EAEA,oBAA0B;AACxB,QAAI,CAAC,KAAK,WAAW,OAAO;AAC1B,WAAK,WAAW,QAAQ;AAAA,IAC1B;AAEA,QAAI,CAAC,KAAK,WAAW,OAAO;AAC1B,WAAK,WAAW,QAAQ;AAAA,IAC1B;AAEA,QAAI,KAAK,WAAW,SAAS,KAAK,WAAW,OAAO;AAClD,YAAM,OAA0B;AAAA;AAAA,QAE9B,cAAc,KAAK,WAAW;AAAA,QAC9B,QAAQ,KAAK,WAAW;AAAA,MAC1B;AAEA,WAAK,iBAAiB,YAAY,EAAE,QAAQ,KAAK,CAAC;AAClD,WAAK,MAAM;AAAA,IACb;AAAA,EACF;AAAA,EAEA,SAAyB;AACvB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAM0E,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAQpE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAa+C,KAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrG;AACF;AAtE4B;AAAA,EAAzB,MAAM,iBAAiB;AAAA,GALb,uBAKe;AACF;AAAA,EAAvB,MAAM,eAAe;AAAA,GANX,uBAMa;AACA;AAAA,EAAvB,MAAM,eAAe;AAAA,GAPX,uBAOa;AAsE1B,YAAY,SAAS,6BAA6B,sBAAsB;",
  "names": []
}
