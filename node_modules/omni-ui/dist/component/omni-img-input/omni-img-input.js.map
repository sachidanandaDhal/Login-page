{
  "version": 3,
  "sources": ["../../../lib/component/omni-img-input/omni-img-input.ts"],
  "sourcesContent": ["import { type CSSResult, html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { when } from 'lit/directives/when.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { capitalizeFirstWord, truncateFilename } from '../../omni-util.js';\nimport '../omni-style/omni-style.js';\n\nimport {css} from 'lit';\nconst style = css`:host{display:inline-block}:host([disabled]){--cursor-state: not-allowed;--opacity-state: 0.45}:host([disabled]) .tooltip-container{cursor:not-allowed}form{margin:0;display:flex;align-items:start}form>*+*{margin-left:0.7142857143rem}form .left{display:flex;flex-direction:column;place-content:center;align-items:flex-start;position:relative}slot{display:block}[type=file]{width:0.0714285714rem;height:0.0714285714rem;border:none !important;position:relative;z-index:-1;margin:0 auto !important}.tooltip-container{position:relative}ul,li{padding:0;margin:0}.trigger-container{position:relative;display:flex;flex-direction:column}.tooltip{position:absolute;top:2.6428571429rem;z-index:1;background:#000;color:#fff;min-height:2em;max-height:40em;animation:850ms linear 1 fade-in;background:linear-gradient(to bottom, #2b3952, #142033 100%);border-radius:0.5714285714rem;color:#fff;padding:0.5rem 1.0714285714rem;font-size:0.8571428571rem;font-weight:600;text-align:left;pointer-events:none;overflow-wrap:break-word}#arrow{position:absolute;z-index:1;top:2.4285714286rem;left:2.6785714286rem;width:0.5714285714rem;height:0.5714285714rem;content:\"\";transform:rotate(45deg);background:linear-gradient(to bottom, #2b3952, #142033 100%)}.has-help [name=help]{display:block;margin-top:8px}div.filenames-container{display:flex;flex-direction:column}div.one-file{display:flex;justify-content:space-between;margin:0 0 0.3571428571rem 0}div.one-file:last-child{margin-bottom:0}div.img-and-name{display:flex}div.img-container{height:2.2857142857rem;width:2.2857142857rem;margin-right:5px}img{object-fit:cover}div#filename{overflow-wrap:anywhere}`\n\n\nexport interface OmniFile {\n  file: File;\n  previewSrc: string;\n}\nexport type OmniFileList = Record<string, OmniFile>;\n\n/**\n * To include within your project `import { OmniImageInputElement } from 'omni-ui';`\n *\n * @tagname omni-img-input\n * @slot placeholder - The placeholder slot is used to display a message when no image is selected.\n * @slot help - The help slot is used to display a message below the input.\n * @event {CustomEvent<string>} change - listen to changes of the file(s) on the input\n */\nexport class OmniImageInputElement extends OmniElement {\n  static get styles(): CSSResult[] {\n    return [...super.styles, style];\n  }\n\n  protected readonly DEFAULT_MAX_SIZE = 1048576;\n  protected readonly DEFAULT_ACCEPTED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n  protected FILE_SIZE_TOO_LARGE_MSG = name => `${name}'s size is too large`;\n  @state() protected _files: OmniFileList = {};\n  @state() protected _hasHelp: boolean = false;\n  @state() protected _tooltipErrors = [];\n  /** comma separated list of accepted mimetypes */\n  @property({ type: String }) accept: string = this.DEFAULT_ACCEPTED_FILE_TYPES.join(',');\n  /** disable the input from user interaction */\n  @property({ type: Boolean, reflect: true }) disabled: boolean = false;\n  /** configure the max size (in bytes) allowed per image */\n  @property({ type: Number }) maxSize: number = this.DEFAULT_MAX_SIZE;\n  /** allow for selecting multiple images */\n  @property({ type: Boolean, reflect: true }) multiple: boolean = false;\n  /**@internal */\n  @property({ type: String }) previewSrc: string = '';\n  /** display image as thumbnail */\n  @property({ type: Boolean, reflect: true }) previewable: boolean = false;\n  /**@internal */\n  @property({ type: String }) filename: string = '';\n  /**Set if the file(s) are required for form submission */\n  @property({ type: Boolean, reflect: true }) required: boolean = false;\n  /**@internal */\n  @property() private placeholderSrc: string = '';\n  @query('[type=file]') private _fileInputEl: HTMLInputElement;\n  @query('form') private _formEl: HTMLFormElement;\n\n  protected async initializeFiles(imgSrc = this.previewSrc) {\n    // Initialize internal state (_files) based on previewSrc & filename properties\n    const srcs = Array.isArray(imgSrc) ? imgSrc : [imgSrc];\n    const filenames = Array.isArray(this.filename) ? this.filename : [this.filename];\n    if (Array.isArray(imgSrc) && !this.multiple) {\n      console.error('previewSrc given as array: multiple attribute must be set to true');\n    }\n    const uniqueFilenames = {};\n    const entryPromises = srcs.map(async (src, i) => {\n      const response = await fetch(src);\n      const blob = await response.blob();\n      let filename = filenames[i] ?? src.match(/.*[#/](.*)$/)?.[1] ?? 'filename';\n      // The _files property cannot have multiple files with the same name.\n      if (uniqueFilenames[filename]) {\n        const count = uniqueFilenames[filename];\n        uniqueFilenames[filename] += 1;\n        filename = `${filename} (${count})`;\n      } else {\n        uniqueFilenames[filename] = 1;\n      }\n      // set file type is set to ensure validity passes\n      const srcSplit = src.split('.');\n      // TODO: fix this type to work with omni image api urls\n      const type = `image/${srcSplit[srcSplit.length - 1].replace('jpg', 'jpeg')}`;\n      const file = new File([blob], filename, { type: type });\n      return [filename, { file: file, previewSrc: src }];\n    });\n    // merge files from above with internal files\n    this._files = { ...this._files, ...Object.fromEntries(await Promise.all(entryPromises)) };\n    // set files on input element to ensure validity passes\n    if (this._fileInputEl) {\n      this._fileInputEl.files = this.#getFileList();\n    }\n  }\n\n  updated(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('previewSrc') && this.previewSrc) {\n      this.initializeFiles();\n    }\n  }\n\n  private get validationMessage() {\n    return this._fileInputEl?.validationMessage;\n  }\n\n  /** reset the selected images */\n  public reset() {\n    if (!this.disabled) {\n      this._formEl?.reset();\n      if (this._fileInputEl) {\n        this._fileInputEl.value = '';\n      }\n      this._files = {};\n    }\n  }\n\n  /** check the form input for client-side validation, if false fire invalid event */\n  public checkValidity() {\n    this._fileInputEl?.setCustomValidity(''); // reset\n    if (this.required && !Object.keys(this._files).length) {\n      this._fileInputEl?.setCustomValidity('Please select a file');\n      return false;\n    }\n    if (!Object.keys(this._files).length) return true;\n    if (!this._fileInputEl?.checkValidity()) return false;\n    return true;\n  }\n\n  /**@internal */\n  reportValidity() {\n    return this._formEl.reportValidity();\n  }\n\n  /**@internal */\n  async #getInvalidTypeFiles() {\n    if (!Object.keys(this._files).length) return {};\n    const currFiles = Object.values(this._files);\n    const invalidFiles: OmniFileList = {};\n    for (const omniFile of currFiles) {\n      const isValidMime = await this.#validMimeType(omniFile.file);\n      if (!isValidMime) {\n        invalidFiles[omniFile.file.name] = omniFile;\n      }\n    }\n    return invalidFiles;\n  }\n\n  /**@internal */\n  get #invalidSizeFiles() {\n    if (!Object.keys(this._files).length) return {};\n    return Object.values(this._files)\n      .map(one => {\n        return {\n          file: one.file,\n          isValid: one.file.size < this.maxSize\n        };\n      })\n      .filter(one => !one.isValid)\n      .reduce((acc, curr) => ({ ...acc, [curr.file.name]: curr }), {});\n  }\n\n  /**@internal */\n  #onTriggerClick() {\n    return this._fileInputEl?.click();\n  }\n\n  /**@internal */\n  protected get _tooltipTemplate() {\n    return html`\n      ${when(this._tooltipErrors.length, () => {\n        const paddingL = this._tooltipErrors.length > 1 ? 30 : 20;\n        const paddingR = this._tooltipErrors.length > 1 ? 20 : 10;\n        const desiredMaxWidth = 300;\n        const computedMaxWidth = this.#getMaxTextWidth(this._tooltipErrors) + paddingL + paddingR;\n        const maxWidth = computedMaxWidth < desiredMaxWidth ? computedMaxWidth : desiredMaxWidth;\n        return html`\n          <div id=\"arrow\"></div>\n          <ul\n            class=\"tooltip\"\n            style=\"${styleMap({\n              'list-style-type': this._tooltipErrors.length > 1 ? 'disc' : 'none',\n              width: `${maxWidth}px`,\n              padding: `10px ${paddingR}px 10px ${paddingL}px`\n            })}\">\n            ${this._tooltipErrors.map(text => html`<li>${text}</li>`)}\n          </ul>\n        `;\n      })}\n    `;\n  }\n\n  /**@internal */\n  get #triggerSlotTemplate() {\n    const disableStyle = styleMap({ opacity: this.disabled ? 0.5 : 1 });\n    return html`\n      <div class=\"tooltip-container\">\n        <div class=\"trigger-container\">\n          <slot name=\"trigger\" part=\"trigger-slot\" @click=${this.#onTriggerClick}>\n            <!-- default overridable slot button -->\n            <button type=\"button\" class=\"button is-outlined is-medium\" part=\"trigger\" ?disabled=${this.disabled}>\n              Browse\n            </button>\n          </slot>\n          ${this.#inputTemplate}\n        </div>\n        ${this._tooltipTemplate}\n      </div>\n\n      <slot name=\"help\" class=\"is-size-7 has-text-grey\" style=${disableStyle}></slot>\n    `;\n  }\n\n  /**@internal */\n  async #onFileChange({ target: { files } }: Event & { target: HTMLInputElement }) {\n    if (files.length) {\n      this._addFilesToOmniFileList(files);\n      await this._processInvalidFiles();\n      this._createAndEmitChangeEvent();\n      this.checkValidity();\n    } else {\n      // in cancel from file selector\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=2508\n      this.#setFilesBackAfterCancel();\n    }\n  }\n\n  /**@internal */\n  #getTextWidth(text: string, context: CanvasRenderingContext2D) {\n    context.font = getComputedStyle(document.body).font;\n    const width = context.measureText(text).width;\n    return Math.floor(width);\n  }\n\n  /**@internal */\n  #getMaxTextWidth(texts: string[]) {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const max = Math.max(...texts.map(text => this.#getTextWidth(text, context)));\n    canvas.remove();\n    return max;\n  }\n\n  /**@internal */\n  protected _addFilesToOmniFileList(files: FileList) {\n    for (const file of files) {\n      this._files = {\n        ...this._files,\n        [file.name]: {\n          file: file,\n          previewSrc: URL.createObjectURL(file)\n        }\n      };\n    }\n  }\n\n  /** remove invalid files from _files, add errors to toolip list, show for 5 sec */\n  /**@internal */\n  protected async _processInvalidFiles() {\n    const invalidSize = Object.keys(this.#invalidSizeFiles);\n    const invalidType = Object.keys(await this.#getInvalidTypeFiles());\n    for (const name of invalidSize) {\n      delete this._files[name];\n      this.#addToolTipErrors(name, 'size');\n    }\n    for (const name of invalidType) {\n      delete this._files[name];\n      this.#addToolTipErrors(name, 'type');\n    }\n    if (this._fileInputEl) {\n      this._fileInputEl.files = this.#getFileList();\n    }\n    if (this.multiple)\n      this._files = { ...this._files }; // rerender\n    else {\n      if (Object.keys(this._files).length > 1) {\n        const firstFile = Object.keys(this._files)[0];\n        delete this._files[firstFile];\n      }\n      this._files = { ...this._files };\n    }\n    if (this._tooltipErrors.length) {\n      setTimeout(() => {\n        this._tooltipErrors = [];\n      }, 5000);\n    }\n  }\n\n  /**@internal */\n  async #validMimeType(file: File) {\n    if (!file) return true;\n    function check(signature) {\n      //see https://en.wikipedia.org/wiki/List_of_file_signatures\n      switch (signature) {\n        case '89504e47':\n          // \"image/png\";\n          return 'image/png';\n        case '47494638':\n          // \"image/gif\";\n          return 'image/gif';\n        case 'ffd8ffe0':\n        case 'ffd8ffe1':\n        case 'ffd8ffe2':\n        case 'ffd8ffe3':\n        case 'ffd8ffe8':\n          // \"image/jpeg\";\n          return 'image/jpeg';\n        case '52494646':\n          // \"image/webp\" non-unique RIFF file header\n          return 'image/webp';\n        default:\n          return false;\n      }\n    }\n    const blob = file.slice(0, 4);\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onloadend = e => {\n        const arrayBuffer = e.target.result as ArrayBuffer;\n        const hexSignature = new Uint8Array(arrayBuffer).subarray(0, 4);\n        let joinedSignature = '';\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < hexSignature.length; i++) {\n          joinedSignature += hexSignature[i].toString(16);\n        }\n        resolve(check(joinedSignature));\n      };\n      reader.onerror = () => {\n        resolve(false);\n      };\n      reader.readAsArrayBuffer(blob);\n    });\n  }\n\n  /**@internal */\n  #addToolTipErrors(filename: string, type: 'type' | 'size') {\n    const fileTypeError = name => {\n      const formatter = new Intl.ListFormat('en-US', { style: 'long', type: 'disjunction' });\n      const types = this.accept.split(',');\n      const message = `${truncateFilename(name)} is not allowed. Only file type ${formatter.format(types)} ${\n        types.length > 1 ? 'are' : 'is'\n      } allowed`;\n      return message;\n    };\n    const message =\n      type === 'size' ? this.FILE_SIZE_TOO_LARGE_MSG(truncateFilename(filename, 20)) : fileTypeError(filename);\n    this._tooltipErrors.push(message);\n  }\n\n  /** emits change event if there are one or more files */\n  /**@internal */\n  protected _createAndEmitChangeEvent() {\n    const fileList = this.#getFileList();\n    if (fileList.length) {\n      const eventDetail = this.multiple ? { files: [...fileList] } : { file: fileList[0] };\n      this.dispatchNewEvent('change', { detail: eventDetail });\n    }\n  }\n\n  /** set files back on input element on cancel */\n  /**@internal */\n  #setFilesBackAfterCancel() {\n    const fileList = this.#getFileList();\n    if (fileList.length) {\n      if (this._fileInputEl) {\n        this._fileInputEl.files = fileList;\n      }\n    }\n  }\n\n  /**@internal */\n  get #inputTemplate() {\n    return html`\n      <input\n        type=\"file\"\n        tabindex=\"-1\"\n        accept=${ifDefined(this.accept)}\n        ?required=${this.required}\n        ?multiple=${this.multiple}\n        @change=${this.#onFileChange} />\n    `;\n  }\n\n  /**\n   * Remove uploaded file by passing file name\n   * @internal\n   */\n  public removeFile(filename: string, emitEvent: boolean = true) {\n    const fileList = this.#getFileList(filename);\n    if (this._fileInputEl) {\n      this._fileInputEl.files = fileList;\n    }\n    delete this._files[filename];\n    this._files = { ...this._files };\n    const eventDetail = this.multiple ? { files: [...this.#getFileList()] } : { file: null };\n    if (emitEvent) {\n      this.dispatchNewEvent('change', { detail: eventDetail });\n    }\n    this.checkValidity();\n  }\n\n  /**@internal */\n  #getFileList(excludeFilename = '') {\n    const fileBuffer = new DataTransfer();\n    for (const omniFile of Object.values(this._files)) {\n      if (omniFile.file.name !== excludeFilename) {\n        fileBuffer.items.add(omniFile.file);\n      }\n    }\n    return fileBuffer.files;\n  }\n\n  /**@internal */\n  get #filenameAndPreviewTemplate() {\n    const fileNamesContainer = fileNames => html`\n      <div class=\"filenames-container\" part=\"filenames-container\">${fileNames}</div>\n    `;\n    const filenames = Object.values(this._files).map(\n      one => html`\n        <div class=\"one-file\">\n          <div class=\"img-and-name\">\n            <div class=\"img-container\">\n              <img src=${one.previewSrc || this.placeholderSrc} part=\"preview\" alt=\"\" />\n            </div>\n            <div id=\"filename\" part=\"filename\">${truncateFilename(one.file.name, 20)}</div>\n          </div>\n          <slot name=\"reset\" part=\"reset\" @click=${() => this.removeFile(one.file.name)}>\n            <!-- default overridable slot button -->\n            <omni-tooltip relateby=\"label\">\n              <span slot=\"invoker\">\n                <button type=\"button\" class=\"button is-text is-small is-shadowless\" ?disabled=${this.disabled}>\n                  <omni-icon class=\"is-size-2\" icon-id=\"omni:interactive:remove\"></omni-icon>\n                </button>\n              </span>\n              <div slot=\"content\">Remove</div>\n            </omni-tooltip>\n          </slot>\n        </div>\n      `\n    );\n    const disableStyle = styleMap({ opacity: this.disabled ? 0.5 : 1 });\n    const placeholder = html`\n      <slot name=\"placeholder\" part=\"placeholder\" style=${disableStyle}>\n        <div>No image selected</div>\n      </slot>\n    `;\n    return Object.keys(this._files).length && this.previewable ? fileNamesContainer(filenames) : placeholder;\n  }\n\n  /**@internal */\n  get #formTemplate() {\n    return html`\n      <fieldset ?disabled=${this.disabled}>\n        <form part=\"form\">\n          <div class=\"left\">${this.#triggerSlotTemplate}</div>\n          ${this.#filenameAndPreviewTemplate}\n        </form>\n      </fieldset>\n    `;\n  }\n\n  /**@internal */\n  #onSlotChange({ target }) {\n    ['help'].forEach(name => {\n      if (target.matches(`[name=${name}]`)) {\n        this[`_has${capitalizeFirstWord(name)}`] = target.assignedElements().length > 0;\n      }\n    });\n  }\n\n  render() {\n    return html`\n      <omni-style class=${classMap({ 'has-help': this._hasHelp })} @slotchange=${this.#onSlotChange}>\n        ${this.#formTemplate}\n      </omni-style>\n    `;\n  }\n}\n\nOmniElement.register('omni-img-input', OmniImageInputElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-img-input': OmniImageInputElement;\n  }\n}\n"],
  "mappings": "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",
  "names": ["message"]
}
