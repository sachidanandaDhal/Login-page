import { type CSSResult } from 'lit';
import { OmniElement } from '../../omni-element.js';
import '../omni-style/omni-style.js';
export interface OmniFile {
    file: File;
    previewSrc: string;
}
export type OmniFileList = Record<string, OmniFile>;
/**
 * To include within your project `import { OmniImageInputElement } from 'omni-ui';`
 *
 * @tagname omni-img-input
 * @slot placeholder - The placeholder slot is used to display a message when no image is selected.
 * @slot help - The help slot is used to display a message below the input.
 * @event {CustomEvent<string>} change - listen to changes of the file(s) on the input
 */
export declare class OmniImageInputElement extends OmniElement {
    #private;
    static get styles(): CSSResult[];
    protected readonly DEFAULT_MAX_SIZE = 1048576;
    protected readonly DEFAULT_ACCEPTED_FILE_TYPES: string[];
    protected FILE_SIZE_TOO_LARGE_MSG: (name: any) => string;
    protected _files: OmniFileList;
    protected _hasHelp: boolean;
    protected _tooltipErrors: any[];
    /** comma separated list of accepted mimetypes */
    accept: string;
    /** disable the input from user interaction */
    disabled: boolean;
    /** configure the max size (in bytes) allowed per image */
    maxSize: number;
    /** allow for selecting multiple images */
    multiple: boolean;
    /**@internal */
    previewSrc: string;
    /** display image as thumbnail */
    previewable: boolean;
    /**@internal */
    filename: string;
    /**Set if the file(s) are required for form submission */
    required: boolean;
    /**@internal */
    private placeholderSrc;
    private _fileInputEl;
    private _formEl;
    protected initializeFiles(imgSrc?: string): Promise<void>;
    updated(changedProperties: Map<string, unknown>): void;
    private get validationMessage();
    /** reset the selected images */
    reset(): void;
    /** check the form input for client-side validation, if false fire invalid event */
    checkValidity(): boolean;
    /**@internal */
    reportValidity(): boolean;
    /**@internal */
    protected get _tooltipTemplate(): import("lit-html").TemplateResult<1>;
    /**@internal */
    protected _addFilesToOmniFileList(files: FileList): void;
    /** remove invalid files from _files, add errors to toolip list, show for 5 sec */
    /**@internal */
    protected _processInvalidFiles(): Promise<void>;
    /** emits change event if there are one or more files */
    /**@internal */
    protected _createAndEmitChangeEvent(): void;
    /**
     * Remove uploaded file by passing file name
     * @internal
     */
    removeFile(filename: string, emitEvent?: boolean): void;
    render(): import("lit-html").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'omni-img-input': OmniImageInputElement;
    }
}
//# sourceMappingURL=omni-img-input.d.ts.map