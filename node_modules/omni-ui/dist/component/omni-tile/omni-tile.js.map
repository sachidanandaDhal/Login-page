{
  "version": 3,
  "sources": ["../../../lib/component/omni-tile/omni-tile.ts"],
  "sourcesContent": ["import { html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { capitalizeFirstWord } from '../../omni-util.js';\nimport '../omni-style/omni-style.js';\nimport { DocumentElementClipMixin } from '../../document-element-clip-mixin.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--drag-left: auto;--drag-left-min: 0vw;--drag-left-max: calc(100vw - 4rem);--drag-top: auto;--drag-top-min: 0vh;--drag-top-max: calc(100vh - 4rem);--drag-top-max: calc(100vh - var(--drag-height));--drag-left-max: calc(100vw - var(--drag-width))}:host([drag-able]),::slotted([drag-able]),:is([drag-able]){position:fixed;cursor:grab;top:clamp(var(--drag-top-min, 0vh),var(--drag-top, 0),var(--drag-top-max, calc(100vh - var(--drag-height, 50px))));left:clamp(var(--drag-left-min, 0vw),var(--drag-left, 0),var(--drag-left-max, calc(100vw - var(--drag-width, 20px))));z-index:var(--drag-able-z, auto)}:host(:is([drag-able][active])),::slotted(:is([drag-able][active])),:is([drag-able][active]){z-index:var(--drag-z, 39)}:host,omni-style,.omni section,.omni .box,.scroll,#body-scroller{display:flex;flex-direction:column}omni-style,.omni section,.omni .box,.scroll,#body-scroller,#body{flex-grow:1}omni-style,.omni section,.omni .box{min-height:100%}.has-heading .box{min-height:calc(100% - 37px)}h2.title{flex-shrink:0;letter-spacing:0.0571428571rem !important}:host([maximized]) h2.title{display:none}:host([maximized]){position:fixed;top:var(--omni-tile-maximized-top, 0);left:0;right:0;height:calc(100vh - var(--omni-tile-maximized-top, 0px)) !important;z-index:39}:host([scroll]) #body-scroller,:host([maximized]) #body-scroller{overflow:auto}.omni .box{padding:0;background-color:var(--omni-tile-background-color, #fcfdff);position:relative}slot{display:block}[name=header]{border-bottom:0.1428571429rem solid #f1f5fa;border-radius:0.7142857143rem 0.7142857143rem 0 0}#body{padding:var(--omni-tile-body-gutter, 1.7142857143rem);min-height:var(--omni-tile-body-min-height, auto);max-height:var(--omni-tile-body-max-height, auto)}section:not(.has-header) [name=header]{display:none}.has-subheader #body{padding-top:0}.has-footer #body{padding-bottom:0}.scroll,[name=footer]{border-radius:0 0 0.7142857143rem 0.7142857143rem}`\n\nimport { property, query, state } from 'lit/decorators.js';\nimport { DraggableController } from '../../controllers/draggable-controller.js';\n\n/**\n * To include within your project `import { OmniTileElement } from 'omni-ui';`\n *\n * @tagname omni-tile\n * @slot header - header slot\n * @slot subheader - subheader slot\n * @slot body - body slot\n * @slot footer - footer slot\n * @cssprop [--omni-tile-maximized-top]\n * @cssprop [--omni-tile-background-color]\n * @cssprop [--omni-tile-body-gutter=24px]\n * @cssprop [--drag-able-z=auto]\n * @cssprop [--drag-z=39]\n * @cssprop [--drag-height]\n * @cssprop [--drag-width]\n * @cssprop [--drag-left=auto] - current left position for drag\n * @cssprop [--drag-left-min=0vw] - minimum left position for drag\n * @cssprop [--drag-left-max=calc(100vw - var(--drag-width)] - maximum left position for drag\n * @cssprop [--drag-top=auto] - current top position for drag\n * @cssprop [--drag-top-min=0vh] - minimum top position for drag\n * @cssprop [--drag-top-max=calc(100vh - var(--drag-height))] - maximum top position for drag\n */\nexport class OmniTileElement extends DocumentElementClipMixin(OmniElement) {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  /** heading for tile */\n  @property({ type: String }) heading: string;\n  /**@internal */\n  @property({ type: Boolean, reflect: true }) maximized: boolean = false;\n  /** Enable dragging of tile */\n  @property({ type: Boolean, attribute: 'drag-able', reflect: true }) drag: boolean = false;\n  /**@internal */\n  @property({ type: Array }) noDragSlots: string[] = [];\n  /**@internal */\n  @state() _hasHeader: boolean = false;\n  /**@internal */\n  @state() _hasSubheader: boolean = false;\n  /**@internal */\n  @state() _hasFooter: boolean = false;\n  @query('#body-scroller') public bodyScrollerDiv: HTMLDivElement;\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.drag) {\n      new DraggableController(\n        this,\n        this.noDragSlots.map(slot => (slot === 'body' ? '#body' : `[slot=${slot}]`)),\n        true\n      );\n    }\n  }\n\n  _onSlotChange(e) {\n    ['header', 'subheader', 'footer'].forEach(name => {\n      if (e.target.matches(`[name=${name}]`)) {\n        this[`_has${capitalizeFirstWord(name)}`] = e.target.assignedElements().length > 0;\n      }\n    });\n  }\n\n  updated(changedProps) {\n    if (changedProps.has('maximized')) {\n      this[this.maximized ? '_clipDocumentElement' : '_unclipDocumentElement']();\n    }\n  }\n\n  render() {\n    return html`\n      <omni-style>\n        <section\n          @slotchange=${this._onSlotChange}\n          class=${classMap({\n            'has-heading': this.heading?.length,\n            'has-header': this._hasHeader,\n            'has-subheader': this._hasSubheader,\n            'has-footer': this._hasFooter\n          })}>\n          ${!this.heading\n            ? ''\n            : html` <h2 class=\"title is-size-6 is-clamped has-text-grey-dark is-uppercase\">${this.heading}</h2> `}\n          <div class=\"box\" part=\"box\">\n            <slot name=\"header\" part=\"header-slot\"></slot>\n            <!--div class=scroll part=scroll-->\n            <slot name=\"subheader\" part=\"subheader-slot\"></slot>\n            <div id=\"body-scroller\" part=\"body-scroller\">\n              <slot id=\"body\" part=\"body-slot\"></slot>\n            </div>\n            <slot name=\"footer\" part=\"footer-slot\"></slot>\n            <!--/div-->\n          </div>\n        </section>\n      </omni-style>\n    `;\n  }\n}\n\nOmniElement.register('omni-tile', OmniTileElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-tile': OmniTileElement;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,YAAY;AACrB,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,2BAA2B;AACpC,OAAO;AACP,SAAS,gCAAgC;AAEzC,SAAQ,WAAU;AAClB,MAAM,SAAS;AAEf,SAAS,UAAU,OAAO,aAAa;AACvC,SAAS,2BAA2B;AAwB7B,MAAM,wBAAwB,yBAAyB,WAAW,EAAE;AAAA,EAApE;AAAA;AAQuC,qBAAqB;AAEG,gBAAgB;AAEzD,uBAAwB,CAAC;AAE3C,sBAAsB;AAEtB,yBAAyB;AAEzB,sBAAsB;AAAA;AAAA,EAjB/B,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAkBA,oBAAoB;AAClB,UAAM,kBAAkB;AACxB,QAAI,KAAK,MAAM;AACb,UAAI;AAAA,QACF;AAAA,QACA,KAAK,YAAY,IAAI,UAAS,SAAS,SAAS,UAAU,SAAS,IAAI,GAAI;AAAA,QAC3E;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,cAAc,GAAG;AACf,KAAC,UAAU,aAAa,QAAQ,EAAE,QAAQ,UAAQ;AAChD,UAAI,EAAE,OAAO,QAAQ,SAAS,IAAI,GAAG,GAAG;AACtC,aAAK,OAAO,oBAAoB,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,iBAAiB,EAAE,SAAS;AAAA,MAClF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,QAAQ,cAAc;AACpB,QAAI,aAAa,IAAI,WAAW,GAAG;AACjC,WAAK,KAAK,YAAY,yBAAyB,wBAAwB,EAAE;AAAA,IAC3E;AAAA,EACF;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA,wBAGa,KAAK,aAAa;AAAA,kBACxB,SAAS;AAAA,MACf,eAAe,KAAK,SAAS;AAAA,MAC7B,cAAc,KAAK;AAAA,MACnB,iBAAiB,KAAK;AAAA,MACtB,cAAc,KAAK;AAAA,IACrB,CAAC,CAAC;AAAA,YACA,CAAC,KAAK,UACJ,KACA,+EAA+E,KAAK,OAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAc/G;AACF;AApE8B;AAAA,EAA3B,SAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GANf,gBAMiB;AAEgB;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAR/B,gBAQiC;AAEwB;AAAA,EAAnE,SAAS,EAAE,MAAM,SAAS,WAAW,aAAa,SAAS,KAAK,CAAC;AAAA,GAVvD,gBAUyD;AAEzC;AAAA,EAA1B,SAAS,EAAE,MAAM,MAAM,CAAC;AAAA,GAZd,gBAYgB;AAElB;AAAA,EAAR,MAAM;AAAA,GAdI,gBAcF;AAEA;AAAA,EAAR,MAAM;AAAA,GAhBI,gBAgBF;AAEA;AAAA,EAAR,MAAM;AAAA,GAlBI,gBAkBF;AACuB;AAAA,EAA/B,MAAM,gBAAgB;AAAA,GAnBZ,gBAmBqB;AAyDlC,YAAY,SAAS,aAAa,eAAe;",
  "names": []
}
