var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
import { html } from "lit";
import { property, state } from "lit/decorators.js";
import { ElementInternalsBase } from "../../element-internals-base.js";
import { OmniElement } from "../../omni-element.js";
import { OmniRadio } from "../omni-radio/omni-radio.js";
OmniRadio.register();
class OmniRadioGroup extends ElementInternalsBase {
  constructor() {
    super(...arguments);
    this.valueMissingMessage = "Please select a radio if you want to proceed.";
    this.radios = [];
  }
  static get styles() {
    return [...super.styles];
  }
  #handleChange(e) {
    const theChangedRadio = e.target;
    if (!theChangedRadio.checked) {
      theChangedRadio.checked = true;
      e.stopPropagation();
      this.dispatchNewEvent("change", { detail: true }, theChangedRadio);
      return;
    }
    this.radios.forEach((oneRadio) => {
      if (oneRadio !== theChangedRadio) {
        oneRadio.checked = false;
      }
    });
    this.value = theChangedRadio.value;
    this.#determineValidityAndValue();
  }
  #handleSlotChange(e) {
    this.radios = e.target.assignedElements();
    this.radios.forEach((oneRadio) => {
      if (oneRadio.value === this.value) {
        oneRadio.checked = true;
      }
    });
    if (!this.radios.length) {
      throw new Error("omni-radio-group must have at least one omni-radio");
    }
    this.#determineValidityAndValue();
  }
  #determineValidityAndValue() {
    this._internals.setValidity({});
    if (!this.value) {
      this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage);
    }
    this._internals.setFormValue(this.value);
  }
  render() {
    return html` <slot @change=${this.#handleChange} @slotchange=${this.#handleSlotChange}></slot> `;
  }
}
__decorateClass([
  property({ type: String })
], OmniRadioGroup.prototype, "valueMissingMessage", 2);
__decorateClass([
  property({ type: String, reflect: true })
], OmniRadioGroup.prototype, "name", 2);
__decorateClass([
  property({ type: String, reflect: true })
], OmniRadioGroup.prototype, "value", 2);
__decorateClass([
  state()
], OmniRadioGroup.prototype, "radios", 2);
OmniElement.register("omni-radio-group", OmniRadioGroup);
export {
  OmniRadioGroup
};
//# sourceMappingURL=omni-radio-group.js.map
