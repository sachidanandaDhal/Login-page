{
  "version": 3,
  "sources": ["../../../lib/component/omni-radio-group/omni-radio-group.ts"],
  "sourcesContent": ["import { html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ElementInternalsBase } from '../../element-internals-base.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { OmniRadio } from '../omni-radio/omni-radio.js';\n\nOmniRadio.register();\n\n/**\n * To include within your project `import { OmniRadioGroup } from 'omni-ui';`\n *\n * @tagname omni-radio-group\n */\nexport class OmniRadioGroup extends ElementInternalsBase<string> {\n  static get styles() {\n    return [...super.styles];\n  }\n\n  @property({ type: String }) valueMissingMessage = 'Please select a radio if you want to proceed.';\n  @property({ type: String, reflect: true }) name: string;\n  @property({ type: String, reflect: true }) value: string;\n\n  @state() private radios: OmniRadio[] = [];\n\n  #handleChange(e: CustomEvent<boolean>) {\n    const theChangedRadio = e.target as OmniRadio;\n    // if radio is going from checked to unchecked, recheck it and return\n    if (!theChangedRadio.checked) {\n      theChangedRadio.checked = true;\n      // stop the current event, and create a new event so upper event listeners are not confused by e.detail\n      e.stopPropagation();\n      this.dispatchNewEvent('change', { detail: true }, theChangedRadio);\n      return;\n    }\n    // if radio is going from unchecked to checked, uncheck all other radios\n    this.radios.forEach(oneRadio => {\n      if (oneRadio !== theChangedRadio) {\n        oneRadio.checked = false;\n      }\n    });\n    // then set the value of the radio group to the value of the checked radio\n    this.value = theChangedRadio.value;\n    this.#determineValidityAndValue();\n    // the @change event from the omni-radio will bubble up to the omni-radio-group so no need to emit a new event here\n  }\n\n  #handleSlotChange(e: Event & { target: HTMLSlotElement }) {\n    this.radios = e.target.assignedElements() as OmniRadio[];\n    this.radios.forEach(oneRadio => {\n      if (oneRadio.value === this.value) {\n        oneRadio.checked = true;\n      }\n    });\n    if (!this.radios.length) {\n      throw new Error('omni-radio-group must have at least one omni-radio');\n    }\n    this.#determineValidityAndValue();\n  }\n\n  #determineValidityAndValue() {\n    this._internals.setValidity({});\n    if (!this.value) {\n      this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage);\n    }\n    this._internals.setFormValue(this.value);\n  }\n\n  render() {\n    return html` <slot @change=${this.#handleChange} @slotchange=${this.#handleSlotChange}></slot> `;\n  }\n}\nOmniElement.register('omni-radio-group', OmniRadioGroup);\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,YAAY;AACrB,SAAS,UAAU,aAAa;AAChC,SAAS,4BAA4B;AACrC,SAAS,mBAAmB;AAC5B,SAAS,iBAAiB;AAE1B,UAAU,SAAS;AAOZ,MAAM,uBAAuB,qBAA6B;AAAA,EAA1D;AAAA;AAKuB,+BAAsB;AAIzC,SAAQ,SAAsB,CAAC;AAAA;AAAA,EARxC,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,MAAM;AAAA,EACzB;AAAA,EAQA,cAAc,GAAyB;AACrC,UAAM,kBAAkB,EAAE;AAE1B,QAAI,CAAC,gBAAgB,SAAS;AAC5B,sBAAgB,UAAU;AAE1B,QAAE,gBAAgB;AAClB,WAAK,iBAAiB,UAAU,EAAE,QAAQ,KAAK,GAAG,eAAe;AACjE;AAAA,IACF;AAEA,SAAK,OAAO,QAAQ,cAAY;AAC9B,UAAI,aAAa,iBAAiB;AAChC,iBAAS,UAAU;AAAA,MACrB;AAAA,IACF,CAAC;AAED,SAAK,QAAQ,gBAAgB;AAC7B,SAAK,2BAA2B;AAAA,EAElC;AAAA,EAEA,kBAAkB,GAAwC;AACxD,SAAK,SAAS,EAAE,OAAO,iBAAiB;AACxC,SAAK,OAAO,QAAQ,cAAY;AAC9B,UAAI,SAAS,UAAU,KAAK,OAAO;AACjC,iBAAS,UAAU;AAAA,MACrB;AAAA,IACF,CAAC;AACD,QAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,YAAM,IAAI,MAAM,oDAAoD;AAAA,IACtE;AACA,SAAK,2BAA2B;AAAA,EAClC;AAAA,EAEA,6BAA6B;AAC3B,SAAK,WAAW,YAAY,CAAC,CAAC;AAC9B,QAAI,CAAC,KAAK,OAAO;AACf,WAAK,WAAW,YAAY,EAAE,cAAc,KAAK,GAAG,KAAK,mBAAmB;AAAA,IAC9E;AACA,SAAK,WAAW,aAAa,KAAK,KAAK;AAAA,EACzC;AAAA,EAEA,SAAS;AACP,WAAO,sBAAsB,KAAK,aAAa,gBAAgB,KAAK,iBAAiB;AAAA,EACvF;AACF;AApD8B;AAAA,EAA3B,SAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GALf,eAKiB;AACe;AAAA,EAA1C,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAN9B,eAMgC;AACA;AAAA,EAA1C,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAP9B,eAOgC;AAE1B;AAAA,EAAhB,MAAM;AAAA,GATI,eASM;AAiDnB,YAAY,SAAS,oBAAoB,cAAc;",
  "names": []
}
