{
  "version": 3,
  "sources": ["../../../lib/component/omni-switch/omni-switch.ts"],
  "sourcesContent": ["import { GenericSwitch } from '@generic-components/components/generic-switch/GenericSwitch.js';\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\nimport '../omni-style/omni-style.js';\nimport '../omni-icon/omni-icon.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{display:inline-block;--omni-switch-gap: pxToRem(12)}omni-private-generic-switch{--generic-switch-focus: none;position:relative;height:auto;cursor:pointer}omni-style{display:flex;align-items:center}omni-private-generic-switch::part(track){background-color:var(--color-shark);border-radius:0.8571428571rem;width:3.4285714286rem;height:1.7142857143rem}omni-private-generic-switch::part(button){width:auto;height:auto}omni-private-generic-switch::part(label){margin-right:0.7142857143rem}:not([name=end])::slotted(*){margin-right:var(--omni-switch-gap)}[name=end]{display:inline-block}[name=end]::slotted(*){margin-left:var(--omni-switch-gap)}omni-private-generic-switch::part(thumb){right:auto;margin:0.2142857143rem;border-radius:50%;background-color:#fff;height:1.2857142857rem;width:1.2857142857rem;transition:transform .1s ease}omni-private-generic-switch[checked]::part(track){background-image:var(--gradient-electric-blue)}omni-private-generic-switch[checked]::part(track)::after{content:\"\";display:block;top:30%;left:20%;height:0.4285714286rem;width:0.7857142857rem;position:absolute;border-style:solid;border-color:#fff;border-width:0 0 0.0714285714rem 0.0714285714rem;transform:rotate(310deg)}omni-private-generic-switch[checked]::part(thumb){transform:translateX(1.7142857143rem)}omni-private-generic-switch::part(button):focus{outline:0}omni-private-generic-switch::part(button):focus-visible{box-shadow:0 0 0 0.2142857143rem var(--color-electric-blue) !important;border-radius:0.8571428571rem}`\n\n\nOmniElement.register('omni-private-generic-switch', GenericSwitch);\n\n/**\n * Simple control for on/off actions\n *\n * To include within your project `import { OmniSwitchElement } from 'omni-ui';`\n *\n * ---\n *\n * ## \uD83D\uDCA1 Overview\n *\n * Attributes :\n * - checked : boolean attribute to toggle switch state\n *\n * Slots :\n * - default : label slot for switch\n *\n * ## \uD83D\uDCDD Usage\n *\n * **Basic Switch Rendering**:\n *\n * ```html\n * <omni-style>\n *   <omni-switch .checked=${this.isSwitchOn} @change=${this.__onSwitchChange}>\n *     <span>Switch Label</span>\n *   </omni-switch>\n * </omni-style>\n * ```\n *\n * @tagname omni-switch\n * @slot  default - label slot for switch\n * @slot  end - right label\n * @event {{checked: boolean}} change - fires when the chip action icon is clicked\n */\n\nexport class OmniSwitchElement extends OmniElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  /** state of the switch (on/off) */\n  @property({ type: Boolean, reflect: true }) checked: boolean = false;\n\n  #onCheckedChanged(e) {\n    this.checked = e.target.checked;\n    const evtDetail = { detail: { checked: this.checked } };\n    this.dispatchNewEvent('input', evtDetail);\n    this.dispatchNewEvent('change', evtDetail);\n  }\n\n  render() {\n    return html`\n      <omni-style>\n        <omni-private-generic-switch .checked=${this.checked} @checked-changed=${this.#onCheckedChanged}>\n          <slot></slot>\n        </omni-private-generic-switch>\n        <slot name=\"end\"></slot>\n      </omni-style>\n    `;\n  }\n}\n\nOmniElement.register('omni-switch', OmniSwitchElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-switch': OmniSwitchElement;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,qBAAqB;AAC9B,SAAS,YAAY;AACrB,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,OAAO;AACP,OAAO;AAEP,SAAQ,WAAU;AAClB,MAAM,SAAS;AAGf,YAAY,SAAS,+BAA+B,aAAa;AAmC1D,MAAM,0BAA0B,YAAY;AAAA,EAA5C;AAAA;AAMuC,mBAAmB;AAAA;AAAA,EAL/D,WAAW,SAAS;AAClB,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAKA,kBAAkB,GAAG;AACnB,SAAK,UAAU,EAAE,OAAO;AACxB,UAAM,YAAY,EAAE,QAAQ,EAAE,SAAS,KAAK,QAAQ,EAAE;AACtD,SAAK,iBAAiB,SAAS,SAAS;AACxC,SAAK,iBAAiB,UAAU,SAAS;AAAA,EAC3C;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA,gDAEqC,KAAK,OAAO,qBAAqB,KAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrG;AACF;AAnB8C;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAN/B,kBAMiC;AAqB9C,YAAY,SAAS,eAAe,iBAAiB;",
  "names": []
}
