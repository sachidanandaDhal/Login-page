{
  "version": 3,
  "sources": ["../../../lib/component/omni-icon-action/omni-icon-action.ts"],
  "sourcesContent": ["import { type CSSResult, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\nimport { OmniStyleElement } from '../omni-style/omni-style.js';\nimport { OmniIconElement } from '../omni-icon/omni-icon.js';\nimport { OmniTooltipElement } from '../omni-tooltip/omni-tooltip.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport {css} from 'lit';\nconst styles = css`:host([disabled]:hover),:host([disabled]){cursor:not-allowed}.omni .button.pd{padding:12px 18px}.omni .button.pd.is-active{background-image:rgb(var(--rgb-primary), 0.15);border:var(--color-transparent);color:var(--color-core-light)}`\n\n\nOmniStyleElement.register();\nOmniIconElement.register();\nOmniTooltipElement.register();\n\ntype Placement = 'top' | 'bottom' | 'left' | 'right';\n\n/**\n * Icon button with informative tooltip\n *\n * To include within your project `import { OmniIconActions } from 'omni-ui';`\n *\n * ```html\n * <omni-icon-action\n *   icon-id=\"omni:interactive:actions\"\n *   message=\"Sample Message\">\n * </omni-icon-action>\n * ```\n *\n * @tagname omni-icon-action\n */\n\nexport class OmniIconActions extends OmniElement {\n  static get styles(): CSSResult[] {\n    return [...super.styles, styles];\n  }\n\n  /** icon id for icon action */\n  @property({ type: String, reflect: true, attribute: 'icon-id' }) iconId: string = '';\n  /** message for tooltip  */\n  @property({ type: String, reflect: true }) message: string = '';\n  /** active state for icon-action */\n  @property({ type: Boolean, reflect: true, attribute: true }) active: boolean = false;\n  /** disables the icon action without tooltip text visible */\n  @property({ type: Boolean, attribute: true }) disabled: boolean = false;\n  /** shows tooltip text even when disabled */\n  @property({ type: Boolean, attribute: 'show-on-disable' }) showOnDisable: boolean = false;\n  /** position for tooltip content */\n  @property({ type: String, attribute: true, reflect: true }) place: Placement = 'top';\n\n  /** @internal */\n  get iconActionTemplate() {\n    const classes = classMap({\n      'is-text': !this.active,\n      'is-active': this.active,\n      'is-shadowless': true,\n      button: true,\n      icon: true,\n      pd: true\n    });\n\n    return this.message !== ''\n      ? html`\n          <omni-tooltip ?show-on-disabled=${this.showOnDisable} .place=${this.place}>\n            <button slot=\"invoker\" class=${classes} ?disabled=${this.disabled} part=\"icon-action-button\">\n              <omni-icon icon-id=${this.iconId}></omni-icon>\n            </button>\n            <div slot=\"content\">\n              <p>${this.message}</p>\n            </div>\n          </omni-tooltip>\n        `\n      : html`\n          <button class=${classes} ?disabled=${this.disabled} part=\"icon-action-button\">\n            <omni-icon icon-id=${this.iconId}></omni-icon>\n          </button>\n        `;\n  }\n\n  render() {\n    return html` <omni-style> ${this.iconActionTemplate} </omni-style> `;\n  }\n}\n\nOmniElement.register('omni-icon-action', OmniIconActions);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-icon-action': OmniIconActions;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAyB,YAAY;AACrC,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AACnC,SAAS,gBAAgB;AAEzB,SAAQ,WAAU;AAClB,MAAM,SAAS;AAGf,iBAAiB,SAAS;AAC1B,gBAAgB,SAAS;AACzB,mBAAmB,SAAS;AAmBrB,MAAM,wBAAwB,YAAY;AAAA,EAA1C;AAAA;AAM4D,kBAAiB;AAEvC,mBAAkB;AAEA,kBAAkB;AAEjC,oBAAoB;AAEP,yBAAyB;AAExB,iBAAmB;AAAA;AAAA,EAf/E,WAAW,SAAsB;AAC/B,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA;AAAA,EAgBA,IAAI,qBAAqB;AACvB,UAAM,UAAU,SAAS;AAAA,MACvB,WAAW,CAAC,KAAK;AAAA,MACjB,aAAa,KAAK;AAAA,MAClB,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,IAAI;AAAA,IACN,CAAC;AAED,WAAO,KAAK,YAAY,KACpB;AAAA,4CACoC,KAAK,aAAa,WAAW,KAAK,KAAK;AAAA,2CACxC,OAAO,cAAc,KAAK,QAAQ;AAAA,mCAC1C,KAAK,MAAM;AAAA;AAAA;AAAA,mBAG3B,KAAK,OAAO;AAAA;AAAA;AAAA,YAIvB;AAAA,0BACkB,OAAO,cAAc,KAAK,QAAQ;AAAA,iCAC3B,KAAK,MAAM;AAAA;AAAA;AAAA,EAG1C;AAAA,EAEA,SAAS;AACP,WAAO,qBAAqB,KAAK,kBAAkB;AAAA,EACrD;AACF;AA5CmE;AAAA,EAAhE,SAAS,EAAE,MAAM,QAAQ,SAAS,MAAM,WAAW,UAAU,CAAC;AAAA,GANpD,gBAMsD;AAEtB;AAAA,EAA1C,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAK,CAAC;AAAA,GAR9B,gBAQgC;AAEkB;AAAA,EAA5D,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM,WAAW,KAAK,CAAC;AAAA,GAVhD,gBAUkD;AAEf;AAAA,EAA7C,SAAS,EAAE,MAAM,SAAS,WAAW,KAAK,CAAC;AAAA,GAZjC,gBAYmC;AAEa;AAAA,EAA1D,SAAS,EAAE,MAAM,SAAS,WAAW,kBAAkB,CAAC;AAAA,GAd9C,gBAcgD;AAEC;AAAA,EAA3D,SAAS,EAAE,MAAM,QAAQ,WAAW,MAAM,SAAS,KAAK,CAAC;AAAA,GAhB/C,gBAgBiD;AAoC9D,YAAY,SAAS,oBAAoB,eAAe;",
  "names": []
}
