{
  "version": 3,
  "sources": ["../../../lib/component/omni-tooltip/omni-tooltip-overlay.ts"],
  "sourcesContent": ["import { OmniElement } from '../../omni-element.js';\nimport type { OmniTooltipElement } from './omni-tooltip.js';\n\nexport class OmniTooltipOverlay extends OmniElement {\n  _intersectObserver: IntersectionObserver;\n  __repositioning: number;\n  _area: { top: number; right: number; bottom: number; left: number };\n  __intersecting: number;\n  __resizing: number;\n  _resizeObserver: ResizeObserver;\n  _arealist: string[];\n  tooltip: OmniTooltipElement;\n  intersect: NodeListOf<Element>;\n  __resized: number;\n  noflip: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  render() {}\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' }).innerHTML = `\n      <style>\n        :host {\n          contain: strict style;\n          display: block;\n          pointer-events:none;\n          position:fixed;\n          background-color:rgba(255, 255, 0, 0);\n          top: var(--trigger-top, 0px);\n          left: var(--trigger-left, 0px);\n          --arrow-size: 8px;\n          --tooltip-width: 2em;\n          --tooltip-height: 2em;\n          --trigger-width: 1em;\n          --trigger-height: 1em;\n          --tooltip-background-color: linear-gradient(to bottom, #2b3952, #142033 100%);\n          --tooltip-text-color: white;\n          width: var(--trigger-width, 1em);\n          height: var(--trigger-height, 1em);\n        }\n        :host([disabled]) [tooltip]:focus-visible {\n          outline: none;\n          pointer-events: none;\n        }\n\n        @keyframes fade-in {\n          0% {\n            opacity: 0;\n          }\n          50% {\n            opacity: 0;\n          }\n          100% {\n            opacity: 1;\n          }\n        }\n\n        [intersect] {\n          --width: min(var(--tooltip-width), var(--trigger-width));\n          --height: min(var(--tooltip-height), var(--trigger-height));\n          --width: var(--tooltip-width);\n          --height: var(--tooltip-height);\n          position: absolute;\n          top: calc(50% - var(--height, 0px) / 2);\n          left: calc(50% - var(--width, 0px) / 2);\n          background-color: rgba(0, 255, 255, 0);\n          display: block;\n          width: var(--width,1vw);\n          height: var(--height,1vh);\n          pointer-events: none;\n        }\n        [intersect]:where([area=left], [area=right]) {\n          width: 48vw;\n          left: calc(50% - 48vw);\n        }\n        [intersect]:where([area=right]){\n          left: calc(50%);\n          background-color: rgba(0, 0, 255, 0);\n        }\n        [intersect]:where([area=top], [area=bottom]) {\n          height: 48vh;\n          top: calc(50% - 48.5vh);\n          background-color: rgba(200, 255, 0, 0);\n        }\n        [intersect]:where([area=bottom]) {\n          top: calc(50% - 0.5vh);\n          background-color: rgba(0, 255, 0, 0);\n        }\n\n        [tooltip] {\n          box-sizing: border-box;\n          min-width: 2em;\n          min-height: 2em;\n          max-width: 40em;\n          max-height: 40em;\n          position: fixed;\n          animation: 400ms ease-in 1 fade-in;\n          background: var(--tooltip-background-color);\n          border-radius: 8px;\n          color: var(--tooltip-text-color);\n          padding: 7px 15px;\n          font-size: 12px;\n          font-weight: 600;\n          text-align: left;\n          pointer-events: none;\n          overflow-wrap: break-word;\n          --offset-top: calc((var(--trigger-height) - var(--tooltip-height)) / 2);\n          --offset-left: calc((var(--trigger-width) - var(--tooltip-width)) / 2);\n        }\n\n        :host(.is-light) [tooltip] {\n          background: white;\n          color: var(--color-almost-black);\n        }\n        :host([tip-flip='top']) [tooltip],\n        :host([tip-flip='bottom']) [tooltip],\n        :host([place='bottom']:not([tip-flip])) [tooltip],\n        :host([place='top']:not([tip-flip])) [tooltip] {\n          left: calc(var(--trigger-left) + var(--offset-left));\n          top: calc(var(--trigger-top, 0px) - var(--tooltip-height, 0px) - var(--arrow-size));\n        }\n        :host([tip-flip='bottom']) [tooltip],\n        :host([place='bottom']:not([tip-flip])) [tooltip] {\n          top: calc(var(--trigger-top, 0px) + var(--trigger-height, 0px) + var(--arrow-size));\n        }\n        :host(:where([tip-flip='right'], [tip-flip=\"left\"])) [tooltip],\n        :host([place='right']:not([tip-flip])) [tooltip],\n        :host([place='left']:not([tip-flip])) [tooltip] {\n          left: calc(var(--trigger-left, 0px) - var(--tooltip-width, 0px) - var(--arrow-size));\n          top: calc(var(--trigger-top, 0px) + var(--offset-top, 0px));\n        }\n        :host([tip-flip='right']) [tooltip],\n        :host([place='right']:not([tip-flip])) [tooltip] {\n          left: calc(var(--trigger-left, 0px) + var(--trigger-width, 0px) + var(--arrow-size));\n        }\n\n        #arrow {\n          position: absolute;\n          width: var(--arrow-size, 8px);\n          height: var(--arrow-size, 8px);\n          z-index: -1;\n          content: '';\n          transform: rotate(45deg);\n          background: inherit;\n        }\n\n        :host(:where([tip-flip='top'], [tip-flip='bottom'])) #arrow,\n        :host(:where([place='top'], [place='bottom']):not([tip-flip])) #arrow {\n          left: calc(50% - 4px);\n          bottom: -4px;\n          top: auto;\n        }\n        :host(:where([tip-flip='bottom'])) #arrow,\n        :host([place='bottom']:not([tip-flip])) #arrow {\n          bottom: auto;\n          top: -4px;\n        }\n        :host(:is([tip-flip=\"left\"], [tip-flip=\"right\"])) #arrow,\n        :host(:is([place='left'], [place='right']):not([tip-flip])) #arrow {\n          top: calc(50% - 4px);\n          left: auto;\n          right: -4px;\n        }\n        :host([tip-flip='right']) #arrow,\n        :host([place='right']:not([tip-flip])) #arrow {\n          right: auto;\n          left: -4px;\n        }\n      </style>\n      <div intersect area=top> </div>\n      <div intersect area=right> </div>\n      <div intersect area=bottom> </div>\n      <div intersect area=left> </div>\n      <div tooltip part=\"tooltip\">\n        <slot name=\"content\">...</slot>\n        <div id=\"arrow\" part=\"arrow\"></div>\n      </div>\n    `;\n\n    this.tooltip = this.shadowRoot.querySelector('[tooltip]');\n    this.intersect = this.shadowRoot.querySelectorAll('[intersect]');\n\n    this._resizeObserver = new ResizeObserver((...args) => {\n      cancelAnimationFrame(this.__resized);\n      this.__resized = requestAnimationFrame(() => {\n        //@ts-ignore\n        this._resize(...args);\n      });\n    });\n\n    this._intersectObserver = new IntersectionObserver(\n      (...args) => {\n        //@ts-ignore\n        this._intersect(...args);\n      },\n      { root: null, rootMargin: `0px`, threshold: 1 }\n    );\n\n    this._area = { top: 1, right: 1, bottom: 1, left: 1 };\n    this._arealist = Object.keys(this._area);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const { tooltip, intersect, _resizeObserver, _intersectObserver } = this;\n    _resizeObserver.observe(tooltip);\n    if (this.noflip) return;\n    _intersectObserver.observe(tooltip);\n    intersect.forEach(node => _intersectObserver.observe(node));\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeAttribute('tip-flip');\n    this._resizeObserver.disconnect();\n    this._intersectObserver.disconnect();\n  }\n\n  _reposition(intersectionRatio) {\n    const { place, _area } = this;\n    const min = 0.99;\n    if (intersectionRatio < 1) {\n      const { _arealist } = this;\n      const flippedinto = this.getAttribute('tip-flip');\n      const index = _arealist.indexOf(flippedinto || place);\n      let position;\n      let i = index + 2;\n      let available;\n      // is the opposite side available?\n      if (i >= _arealist.length) {\n        // loop\n        i -= _arealist.length;\n      }\n      available = _area[_arealist[i]];\n      if (available > min) {\n        position = _arealist[i];\n      }\n      // try to walk around instead\n      i = index + 1;\n      const race = [];\n      while (!position) {\n        const note = { i, index };\n        race.push(note);\n\n        if (i === index || race.length > 12) {\n          // cannot find an open area, return to preferred\n          position = place;\n          break;\n        } else if (i >= _arealist.length) {\n          //@ts-ignore\n          note.loop = 'i=0';\n          i = 0;\n        }\n        available = _area[_arealist[i]];\n        if (available > min) {\n          position = _arealist[i];\n          break;\n        }\n        i += 1;\n      }\n      if (race.length > 4) {\n        console.warn(`\n          \uD83D\uDC47 please send to omni-ui:\n\n            url: ${location.href}\n            user-agent: \"${navigator.userAgent}\"\n            log>>\n              ${JSON.stringify(race)}\n            <<\n            html: ${this.outerHTML}\n\n          \u261D\uFE0F please send to omni-ui.\n        `);\n      }\n\n      if (position === place) {\n        this.removeAttribute('tip-flip');\n      } else {\n        this.setAttribute('tip-flip', position);\n      }\n    } else {\n      if (_area[place] > min) {\n        this.removeAttribute('tip-flip');\n      }\n    }\n  }\n\n  _intersectItem(entry) {\n    const { target, intersectionRatio } = entry;\n    const { _area } = this;\n    if (target.matches('[tooltip]')) {\n      /* [tooltip] element needs proper position, when it intersects queue for this,\n         animation frame debounce needed here for previous style recalculations\n         to the tiles in various positions around the trigger, */\n      // prevent race condition; can only reposition once per open\n      this._intersectObserver.disconnect();\n      cancelAnimationFrame(this.__repositioning);\n      this.__repositioning = requestAnimationFrame(() => {\n        this._reposition(intersectionRatio);\n      });\n    } else if (target.matches('[intersect]')) {\n      const area = target.getAttribute('area');\n      _area[area] = intersectionRatio;\n    }\n  }\n\n  get place() {\n    return this.getAttribute('place');\n  }\n\n  set place(place) {\n    const value = this._area[place] !== undefined ? place : 'top';\n    this.setAttribute('place', value);\n  }\n\n  _intersect(entries) {\n    cancelAnimationFrame(this.__intersecting);\n    this.__intersecting = requestAnimationFrame(() => {\n      entries.forEach(this._intersectItem, this);\n    });\n  }\n\n  _resize(entries: any[]) {\n    cancelAnimationFrame(this.__resizing);\n    this.__resizing = requestAnimationFrame(() => {\n      entries.forEach(this._resizedItem, this);\n    });\n  }\n\n  _resizedItem(entry) {\n    const { target, borderBoxSize } = entry;\n    const { inlineSize, blockSize, width, height } = borderBoxSize?.[0] ?? target.getBoundingClientRect();\n    const w = inlineSize ?? width;\n    const h = blockSize ?? height;\n\n    if (!w || !h) return;\n\n    const { style } = this;\n    style.setProperty('--tooltip-width', `${Math.round(w)}px`);\n    style.setProperty('--tooltip-height', `${Math.round(h)}px`);\n  }\n}\n\nOmniElement.register('omni-tooltip-overlay', OmniTooltipOverlay);\n"],
  "mappings": "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",
  "names": []
}
