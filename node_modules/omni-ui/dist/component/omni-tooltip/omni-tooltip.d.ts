import { OmniElement } from '../../omni-element.js';
import './omni-tooltip-overlay.js';
/**
 * To include within your project `import { OmniTooltipElement } from 'omni-ui';`
 *
 * @tagname omni-tooltip
 * @slot content - content to display in the tooltip
 * @slot invoker - parent element that triggers the tooltip
 * @cssprop [--tooltip-background-color=linear-gradient(to bottom, #2b3952, #142033 100%)]
 * @cssprop [--tooltip-text-color=white]
 */
export declare class OmniTooltipElement extends OmniElement {
    #private;
    static get styles(): import("lit").CSSResult[];
    static get count(): number;
    /** @internal */
    __id: string;
    open: boolean;
    disabled: boolean;
    showOnDisabled: boolean;
    relateby: 'describe' | 'label';
    place: 'top' | 'bottom' | 'left' | 'right';
    /** @internal */
    tooltip: HTMLElement & {
        origin: OmniTooltipElement;
        noflip: boolean;
    };
    /** @internal */
    content: HTMLSlotElement;
    /** @internal */
    event: Event;
    /** @internal */
    invoker: HTMLSlotElement;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    get noflip(): boolean;
    set noflip(flag: boolean);
    _show(): void;
    _hide(): void;
    _attr(node: any, attr?: string, value?: string): void;
    fakePromise(): Promise<unknown>;
    isContentEmpty(): boolean;
    updated(changedProperties: any): Promise<void>;
    _slotchange({ target }: {
        target: any;
    }): void;
}
declare global {
    interface HTMLElementTagNameMap {
        'omni-tooltip': OmniTooltipElement;
    }
}
//# sourceMappingURL=omni-tooltip.d.ts.map