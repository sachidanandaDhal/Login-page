{
  "version": 3,
  "sources": ["../../../lib/component/omni-checkbox/omni-checkbox.ts"],
  "sourcesContent": ["import { html, nothing } from 'lit';\nimport { property, query, queryAssignedElements } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ElementInternalsBase } from '../../element-internals-base.js';\nimport { OmniElement } from '../../omni-element.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--checkbox-height-width: 1.2857142857rem;--checkbox-background: linear-gradient(332deg, var(--color-primary) 0%, var(--color-secondary) 100%);--checkbox-background-error: linear-gradient(139deg, var(--color-error) 0%, var(--color-error-two) 100%);--checkbox-border-width: calc(var(--checkbox-height-width) / 9);--checkbox-border-color: var(--color-almost-black);--checkbox-border-color-hover: var(--color-primary);--checkbox-font-color: var(--color-white);display:flex;flex-direction:column;color:var(--checkbox-font-color)}:host([haslabel]){--checkbox-height-width: 0.8571428571rem}:host([dark]){--checkbox-background: linear-gradient(135deg, var(--color-white) 0%, #cad2db 100%);--checkbox-border-color: var(--color-white);--checkbox-border-color-hover: var(--color-white);--checkbox-font-color: var(--color-primary)}:host([haslabel][dark]) ::slotted(*){color:var(--color-white) !important;opacity:.78}:host(:not([disabled]):hover),:host(:not([disabled]):active),:host(:not([disabled])[hover]){outline:none;cursor:pointer;opacity:.75}:host(:not([disabled]):hover) .checkbox,:host(:not([disabled]):active) .checkbox,:host(:not([disabled])[hover]) .checkbox{border:var(--checkbox-border-width) solid var(--checkbox-border-color-hover)}:host(:not([disabled]):hover) .checkbox.error,:host(:not([disabled]):active) .checkbox.error,:host(:not([disabled])[hover]) .checkbox.error{border:var(--checkbox-border-width) solid var(--color-error)}:host(:not([disabled]):hover) .checkbox.checked,:host(:not([disabled]):hover) .checkbox.indeterminate,:host(:not([disabled]):active) .checkbox.checked,:host(:not([disabled]):active) .checkbox.indeterminate,:host(:not([disabled])[hover]) .checkbox.checked,:host(:not([disabled])[hover]) .checkbox.indeterminate{border:none}:host(:not([disabled]):hover) ::slotted(*){opacity:.75;cursor:pointer}::slotted(*){margin-left:.5714285714rem !important;line-height:1.4285714286rem !important}:host([disabled]:hover),:host([disabled]){cursor:not-allowed;opacity:.5}:host([disabled]) ::slotted(*){cursor:not-allowed}.container{display:flex;justify-content:flex-start;align-items:center}.checkbox{box-sizing:border-box;width:var(--checkbox-height-width);height:var(--checkbox-height-width);border:var(--checkbox-border-width) solid var(--checkbox-border-color);border-radius:calc(var(--checkbox-height-width)/3);display:flex;justify-content:center;align-items:center}.checkbox.checked,.checkbox.indeterminate{border-width:0;background:var(--checkbox-background)}.checkbox svg{height:calc(var(--checkbox-height-width)*2/3);width:calc(var(--checkbox-height-width)*2.1/3)}.checkbox span{flex-grow:1;background-color:var(--checkbox-font-color);flex:0 0 calc(var(--checkbox-height-width)*2/3);height:var(--checkbox-border-width)}.checkbox.checked.error,.checkbox.indeterminate.error{border:none;background:var(--checkbox-background-error)}.checkbox.error{border:var(--checkbox-border-width) solid var(--color-error)}.checkbox.disabled{border:var(--checkbox-border-width) solid var(--color-shark)}.checkbox.indeterminate.disabled,.checkbox.checked.disabled{border:none}.footer-spacer{height:1.8571428571rem;min-height:1.8571428571rem;max-height:1.8571428571rem;flex:0 0 100%}.footer-container{display:flex;flex:0 0 100%;padding:.2857142857rem 0 .2857142857rem .2857142857rem}.footer-container.help-text{justify-content:flex-end;align-items:center}.footer-container.error-text{justify-content:flex-start;align-items:center}.footer-container omni-icon{margin-right:.5714285714rem;--color-icon-lines: var(--color-error)}.footer-container span{font-size:.8571428571rem;font-weight:400;color:var(--color-almost-black)}`\n\n\ninterface CheckboxElement {\n  /**\n   * in a regular checkbox, the checked attribute does not override the checked property\n   * here, we can have both work\n   * checked overrides indeterminate\n   */\n  checked: boolean;\n  /**\n   * in a regular checkbox, this is not accessible as an attribute.\n   * here, we can have both work\n   */\n  indeterminate: boolean;\n  /** check the box */\n  check: () => void;\n  /** uncheck the box */\n  uncheck: () => void;\n  /** toggle the check  */\n  toggle: () => void;\n}\n\n/**\n * To include within your project `import { OmniCheckbox } from 'omni-ui';`\n *\n * @tagname omni-checkbox\n * @attr {boolean} hover - force hover state\n * @attr {boolean} disabled - if the checkbox is disabled or not\n * @attr {boolean} dark - if the checkbox is in dark theme or not\n * @cssprop [--checkbox-height-width=1.2857rem] - set the height and width of the checkbox\n * @cssprop [--checkbox-background=linear-gradient(332deg, var(--color-primary) 0%, var(--color-secondary) 100%)] - background color when checked\n * @cssprop [--checkbox-background-error=linear-gradient(139deg, var(--color-error) 0%, var(--color-error-two) 100%)] - background color when checked and has an error\n * @cssprop [--checkbox-border-width=calc(var(--checkbox-height-width) / 9)] - the width of the checkbox border\n * @cssprop [--checkbox-border-color=var(--color-almost-black)] - the color of the checkbox border\n * @cssprop [--checkbox-border-color-hover=var(--color-primary)] - the border color on hover\n * @cssprop [--checkbox-font-color=var(--color-white)] - the font color of the icon and indetermine bar\n * @slot - label slot for checkbox\n * @event {string} change - fires when the checkbox is checked or unchecked\n */\nexport class OmniCheckbox extends ElementInternalsBase<string> implements CheckboxElement {\n  static get styles() {\n    return [...super.styles, styles];\n  }\n\n  /**  HTML5 form tooltip custom message */\n  @property({ type: String }) valueMissingMessage = 'Please check this box if you want to proceed.';\n  /** if the checkbox is checked or not  */\n  @property({ type: Boolean, reflect: true }) checked: boolean = false;\n  /** show the checkbox as indeterminate */\n  @property({ type: Boolean, reflect: true }) indeterminate: boolean = false;\n  /** styles the checkbox with an error state when set. must enable showfooter to see error as a message */\n  @property({ type: String, reflect: true }) error: string;\n  /** name of the checkbox */\n  @property({ type: String, reflect: true }) name: string;\n  /** can only be set as a string. If other data types are desired, stringify your data and set it to value, then parse on read */\n  @property({ type: String, reflect: true }) value: string;\n  /** show the footer of the checkbox */\n  @property({ type: Boolean, reflect: true }) showfooter: boolean = false;\n  @query('.checkbox') private checkboxEl: HTMLElement;\n  @queryAssignedElements() private slottedElements: HTMLElement[];\n  #checkboxSvg = html`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 12\" fill=\"none\">\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M11.7311 1.39861C11.7554 1.4186 11.7776 1.44088 11.7976 1.46512L11.8628 1.54411C12.0457 \n      1.7658 12.0457 2.08605 11.8628 2.30774L8.75605 6.07322L7.99565 6.99484L5.55909 9.9479L5.56845 \n      9.94168L5.1036 10.5232C5.09356 10.5394 5.08268 10.5552 5.07093 10.5707L4.9986 10.6658C4.82292 10.8969 \n      4.49317 10.9418 4.26209 10.7661C4.23711 10.7471 4.21388 10.7259 4.19268 10.7028L2.46007 8.81196L1.98057 \n      8.28869L0.157622 6.29928C-0.0366983 6.08722 -0.0531719 5.76708 0.118354 5.53619L0.182641 5.44966C0.346753 \n      5.22875 0.658876 5.1827 0.879785 5.34681C0.90515 5.36566 0.928665 5.38687 0.950012 5.41017L2.70014 \n      7.3201L3.17963 7.84337L4.56678 9.30656L7.23525 6.07322L7.99565 5.1516L11.0372 1.46512C11.2105 1.25514 11.5212 1.22536 11.7311 1.39861Z\"\n      fill=\"currentColor\" />\n  </svg>`;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', this.#toggle);\n    this.addEventListener('keyup', this._handleKeyup);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.removeEventListener('click', this.#toggle);\n    this.removeEventListener('keyup', this._handleKeyup);\n  }\n\n  async firstUpdated() {\n    await this.updateComplete;\n    this.#determineValidityAndValue();\n  }\n\n  #determineValidityAndValue() {\n    this._internals.setValidity({});\n    switch (this.checked) {\n      case true:\n        if (!this.value) {\n          this.value = 'on';\n        }\n        if (this.indeterminate) {\n          this.indeterminate = false;\n        }\n        if (this.required) {\n          this._internals.setValidity({});\n          this._internals.setFormValue(this.value);\n        } else {\n          this._internals.setFormValue(this.value);\n        }\n        break;\n      case false:\n      default:\n        if (this.required) {\n          this._internals.setValidity({ valueMissing: true }, this.valueMissingMessage, this.checkboxEl);\n          this._internals.setFormValue('');\n        } else {\n          // null will stop from participating in the form\n          this._internals.setFormValue(null);\n        }\n        break;\n    }\n  }\n\n  updated(): void {\n    if (this.slottedElements.length || this._internals.labels.length) {\n      this.setAttribute('haslabel', '');\n    } else {\n      this.removeAttribute('haslabel');\n    }\n  }\n\n  /** @internal */\n  _handleKeyup = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      this.#toggle();\n    }\n    if (e.key === 'Escape') {\n      this.blur();\n    }\n  };\n\n  #toggle = (e: Event = null, toggleTo = !this.checked) => {\n    if (this.disabled) return;\n    this.checked = toggleTo;\n    this.#determineValidityAndValue();\n    this.dispatchNewEvent('change', { detail: this.checked });\n  };\n\n  get #footerTemplate() {\n    if (!this.showfooter) return nothing;\n    const footerSpacer = html`<div class=\"footer-spacer\"></div>`;\n    if (!this.error) return footerSpacer;\n    if (this.error) {\n      return html` <div class=\"footer-container error-text\">\n        <omni-icon icon-id=\"omni:informative:error\"></omni-icon>\n        <span>${this.error}</span>\n      </div>`;\n    }\n  }\n\n  /** toggle the checkbox programmatically */\n  public toggle() {\n    this.#toggle();\n  }\n\n  /** check the checkbox programmatically */\n  public check() {\n    this.#toggle(null, true);\n  }\n\n  /** uncheck the checkbox programmatically */\n  public uncheck() {\n    this.#toggle(null, false);\n  }\n\n  // prettier-ignore\n  render() {\n    const classes = classMap({\n      checked: this.checked && !this.indeterminate,\n      indeterminate: this.indeterminate,\n      error: typeof this.error !== 'undefined' && this.error !== null,\n      checkbox: true,\n      disabled: this.disabled\n    })\n    return html`\n      <div class=\"container\" part=\"container\">\n        <div class=${classes} part=\"checkbox\">\n          ${this.checked && !this.indeterminate ? this.#checkboxSvg : nothing}\n          ${this.indeterminate ? html`<span></span>`: nothing}\n        </div> \n        <slot></slot>\n      </div>\n      ${this.#footerTemplate}\n    `;\n  }\n}\n\nOmniElement.register('omni-checkbox', OmniCheckbox);\n"],
  "mappings": "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",
  "names": []
}
