{
  "version": 3,
  "sources": ["../../../lib/component/omni-dialog-box/omni-dialog-box.ts"],
  "sourcesContent": ["import { type CSSResult, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { OmniElement } from '../../omni-element.js';\nimport '../omni-style/omni-style.js';\n\nimport {css} from 'lit';\nconst styles = css`:host{--dialog-background-color: rgba(0, 0, 0, 0.4);--dialog-box-shadow: 0px 24px 31px -6px rgba(59, 62, 63, 0.35)}dialog{border:none;border-radius:10px;padding:0}dialog::backdrop{background-color:var(--dialog-background-color)}dialog[non-modal]{box-shadow:var(--dialog-box-shadow)}slot[name=content]{display:flex;flex-direction:column}`\n\n\n/** @element omni-dialog-box */\nexport class OmniDialogBoxElement extends OmniElement {\n  static get styles(): CSSResult[] {\n    return [...super.styles, styles];\n  }\n\n  // signal intent to set autofocus within dialog box's slotted content\n  @property({ type: Boolean, reflect: true, attribute: 'focus-within' }) focusWithin: boolean = false;\n  @property({ type: Boolean, reflect: true }) modal: boolean = false;\n  @property({ type: Boolean, reflect: true, attribute: 'non-modal' }) nonModal: boolean = false;\n  @query('dialog') dialogEl: HTMLDialogElement;\n\n  get returnValue(): string {\n    return this.dialogEl.returnValue;\n  }\n\n  set returnValue(val: string) {\n    this.dialogEl.returnValue = val;\n  }\n\n  public close(returnValue?: string): void {\n    if (this.modal) this.modal = false;\n    if (this.nonModal) this.nonModal = false;\n    return returnValue ? this.dialogEl.close(returnValue) : this.dialogEl.close();\n  }\n\n  public show(): void {\n    this.nonModal = true;\n    this.dialogEl.show();\n    this.dialogEl.focus();\n  }\n\n  public showModal(): void {\n    this.modal = true;\n    this.dialogEl.showModal();\n    this.dialogEl.focus();\n  }\n\n  render() {\n    return html`\n      <omni-style>\n        <dialog\n          ?autofocus=${!this.focusWithin}\n          ?modal=${this.modal}\n          ?non-modal=${this.nonModal}\n          @cancel=${this.#emitCancel}\n          @close=${this.#emitClose}\n          part=\"dialog\">\n          <slot name=\"content\"></slot>\n        </dialog>\n      </omni-style>\n    `;\n  }\n\n  #emitCancel(): boolean {\n    const event: Event = new Event('cancel', { composed: true });\n    return this.dispatchEvent(event);\n  }\n\n  #emitClose(): boolean {\n    const event: Event = new Event('close', { composed: true });\n    return this.dispatchEvent(event);\n  }\n}\n\nOmniElement.register('omni-dialog-box', OmniDialogBoxElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'omni-dialog-box': OmniDialogBoxElement;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAyB,YAAY;AACrC,SAAS,UAAU,aAAa;AAChC,SAAS,mBAAmB;AAC5B,OAAO;AAEP,SAAQ,WAAU;AAClB,MAAM,SAAS;AAIR,MAAM,6BAA6B,YAAY;AAAA,EAA/C;AAAA;AAMkE,uBAAuB;AAClD,iBAAiB;AACO,oBAAoB;AAAA;AAAA,EAPxF,WAAW,SAAsB;AAC/B,WAAO,CAAC,GAAG,MAAM,QAAQ,MAAM;AAAA,EACjC;AAAA,EAQA,IAAI,cAAsB;AACxB,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EAEA,IAAI,YAAY,KAAa;AAC3B,SAAK,SAAS,cAAc;AAAA,EAC9B;AAAA,EAEO,MAAM,aAA4B;AACvC,QAAI,KAAK;AAAO,WAAK,QAAQ;AAC7B,QAAI,KAAK;AAAU,WAAK,WAAW;AACnC,WAAO,cAAc,KAAK,SAAS,MAAM,WAAW,IAAI,KAAK,SAAS,MAAM;AAAA,EAC9E;AAAA,EAEO,OAAa;AAClB,SAAK,WAAW;AAChB,SAAK,SAAS,KAAK;AACnB,SAAK,SAAS,MAAM;AAAA,EACtB;AAAA,EAEO,YAAkB;AACvB,SAAK,QAAQ;AACb,SAAK,SAAS,UAAU;AACxB,SAAK,SAAS,MAAM;AAAA,EACtB;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA,uBAGY,CAAC,KAAK,WAAW;AAAA,mBACrB,KAAK,KAAK;AAAA,uBACN,KAAK,QAAQ;AAAA,oBAChB,KAAK,WAAW;AAAA,mBACjB,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhC;AAAA,EAEA,cAAuB;AACrB,UAAM,QAAe,IAAI,MAAM,UAAU,EAAE,UAAU,KAAK,CAAC;AAC3D,WAAO,KAAK,cAAc,KAAK;AAAA,EACjC;AAAA,EAEA,aAAsB;AACpB,UAAM,QAAe,IAAI,MAAM,SAAS,EAAE,UAAU,KAAK,CAAC;AAC1D,WAAO,KAAK,cAAc,KAAK;AAAA,EACjC;AACF;AAxDyE;AAAA,EAAtE,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM,WAAW,eAAe,CAAC;AAAA,GAN1D,qBAM4D;AAC3B;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAP/B,qBAOiC;AACwB;AAAA,EAAnE,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM,WAAW,YAAY,CAAC;AAAA,GARvD,qBAQyD;AACnD;AAAA,EAAhB,MAAM,QAAQ;AAAA,GATJ,qBASM;AAuDnB,YAAY,SAAS,mBAAmB,oBAAoB;",
  "names": []
}
